/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * forwardPlugin defines a schema for configuring CoreDNS to proxy DNS messages to upstream resolvers.
 */
@ApiModel(description = "forwardPlugin defines a schema for configuring CoreDNS to proxy DNS messages to upstream resolvers.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftOperatorV1DNSSpecForwardPlugin {
  @SerializedName("upstreams")
  private List<String> upstreams = null;

  public IoOpenshiftOperatorV1DNSSpecForwardPlugin upstreams(List<String> upstreams) {
    this.upstreams = upstreams;
    return this;
  }

  public IoOpenshiftOperatorV1DNSSpecForwardPlugin addUpstreamsItem(String upstreamsItem) {
    if (this.upstreams == null) {
      this.upstreams = new ArrayList<>();
    }
    this.upstreams.add(upstreamsItem);
    return this;
  }

   /**
   * upstreams is a list of resolvers to forward name queries for subdomains of Zones. Upstreams are randomized when more than 1 upstream is specified. Each instance of CoreDNS performs health checking of Upstreams. When a healthy upstream returns an error during the exchange, another resolver is tried from Upstreams. Each upstream is represented by an IP address or IP:port if the upstream listens on a port other than 53.   A maximum of 15 upstreams is allowed per ForwardPlugin.
   * @return upstreams
  **/
  @ApiModelProperty(value = "upstreams is a list of resolvers to forward name queries for subdomains of Zones. Upstreams are randomized when more than 1 upstream is specified. Each instance of CoreDNS performs health checking of Upstreams. When a healthy upstream returns an error during the exchange, another resolver is tried from Upstreams. Each upstream is represented by an IP address or IP:port if the upstream listens on a port other than 53.   A maximum of 15 upstreams is allowed per ForwardPlugin.")
  public List<String> getUpstreams() {
    return upstreams;
  }

  public void setUpstreams(List<String> upstreams) {
    this.upstreams = upstreams;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftOperatorV1DNSSpecForwardPlugin ioOpenshiftOperatorV1DNSSpecForwardPlugin = (IoOpenshiftOperatorV1DNSSpecForwardPlugin) o;
    return Objects.equals(this.upstreams, ioOpenshiftOperatorV1DNSSpecForwardPlugin.upstreams);
  }

  @Override
  public int hashCode() {
    return Objects.hash(upstreams);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftOperatorV1DNSSpecForwardPlugin {\n");
    
    sb.append("    upstreams: ").append(toIndentedString(upstreams)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

