/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.ComGithubOpenshiftApiSecurityV1AllowedFlexVolume;
import open_cluster_management.io.ComGithubOpenshiftApiSecurityV1FSGroupStrategyOptions;
import open_cluster_management.io.ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions;
import open_cluster_management.io.ComGithubOpenshiftApiSecurityV1SELinuxContextStrategyOptions;
import open_cluster_management.io.ComGithubOpenshiftApiSecurityV1SupplementalGroupsStrategyOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1ObjectMetaV2;

/**
 * SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container. For historical reasons SCC was exposed under the core Kubernetes API group. That exposure is deprecated and will be removed in a future release - users should instead use the security.openshift.io group to manage SecurityContextConstraints.
 */
@ApiModel(description = "SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container. For historical reasons SCC was exposed under the core Kubernetes API group. That exposure is deprecated and will be removed in a future release - users should instead use the security.openshift.io group to manage SecurityContextConstraints.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiSecurityV1SecurityContextConstraints {
  @SerializedName("allowHostDirVolumePlugin")
  private Boolean allowHostDirVolumePlugin = null;

  @SerializedName("allowHostIPC")
  private Boolean allowHostIPC = null;

  @SerializedName("allowHostNetwork")
  private Boolean allowHostNetwork = null;

  @SerializedName("allowHostPID")
  private Boolean allowHostPID = null;

  @SerializedName("allowHostPorts")
  private Boolean allowHostPorts = null;

  @SerializedName("allowPrivilegeEscalation")
  private Boolean allowPrivilegeEscalation = null;

  @SerializedName("allowPrivilegedContainer")
  private Boolean allowPrivilegedContainer = null;

  @SerializedName("allowedCapabilities")
  private List<String> allowedCapabilities = new ArrayList<>();

  @SerializedName("allowedFlexVolumes")
  private List<ComGithubOpenshiftApiSecurityV1AllowedFlexVolume> allowedFlexVolumes = null;

  @SerializedName("allowedUnsafeSysctls")
  private List<String> allowedUnsafeSysctls = null;

  @SerializedName("apiVersion")
  private String apiVersion = null;

  @SerializedName("defaultAddCapabilities")
  private List<String> defaultAddCapabilities = new ArrayList<>();

  @SerializedName("defaultAllowPrivilegeEscalation")
  private Boolean defaultAllowPrivilegeEscalation = null;

  @SerializedName("forbiddenSysctls")
  private List<String> forbiddenSysctls = null;

  @SerializedName("fsGroup")
  private ComGithubOpenshiftApiSecurityV1FSGroupStrategyOptions fsGroup = null;

  @SerializedName("groups")
  private List<String> groups = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("metadata")
  private IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("readOnlyRootFilesystem")
  private Boolean readOnlyRootFilesystem = null;

  @SerializedName("requiredDropCapabilities")
  private List<String> requiredDropCapabilities = new ArrayList<>();

  @SerializedName("runAsUser")
  private ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions runAsUser = null;

  @SerializedName("seLinuxContext")
  private ComGithubOpenshiftApiSecurityV1SELinuxContextStrategyOptions seLinuxContext = null;

  @SerializedName("seccompProfiles")
  private List<String> seccompProfiles = null;

  @SerializedName("supplementalGroups")
  private ComGithubOpenshiftApiSecurityV1SupplementalGroupsStrategyOptions supplementalGroups = null;

  @SerializedName("users")
  private List<String> users = null;

  @SerializedName("volumes")
  private List<String> volumes = new ArrayList<>();

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowHostDirVolumePlugin(Boolean allowHostDirVolumePlugin) {
    this.allowHostDirVolumePlugin = allowHostDirVolumePlugin;
    return this;
  }

   /**
   * AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin
   * @return allowHostDirVolumePlugin
  **/
  @ApiModelProperty(required = true, value = "AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin")
  public Boolean isAllowHostDirVolumePlugin() {
    return allowHostDirVolumePlugin;
  }

  public void setAllowHostDirVolumePlugin(Boolean allowHostDirVolumePlugin) {
    this.allowHostDirVolumePlugin = allowHostDirVolumePlugin;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowHostIPC(Boolean allowHostIPC) {
    this.allowHostIPC = allowHostIPC;
    return this;
  }

   /**
   * AllowHostIPC determines if the policy allows host ipc in the containers.
   * @return allowHostIPC
  **/
  @ApiModelProperty(required = true, value = "AllowHostIPC determines if the policy allows host ipc in the containers.")
  public Boolean isAllowHostIPC() {
    return allowHostIPC;
  }

  public void setAllowHostIPC(Boolean allowHostIPC) {
    this.allowHostIPC = allowHostIPC;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowHostNetwork(Boolean allowHostNetwork) {
    this.allowHostNetwork = allowHostNetwork;
    return this;
  }

   /**
   * AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
   * @return allowHostNetwork
  **/
  @ApiModelProperty(required = true, value = "AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.")
  public Boolean isAllowHostNetwork() {
    return allowHostNetwork;
  }

  public void setAllowHostNetwork(Boolean allowHostNetwork) {
    this.allowHostNetwork = allowHostNetwork;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowHostPID(Boolean allowHostPID) {
    this.allowHostPID = allowHostPID;
    return this;
  }

   /**
   * AllowHostPID determines if the policy allows host pid in the containers.
   * @return allowHostPID
  **/
  @ApiModelProperty(required = true, value = "AllowHostPID determines if the policy allows host pid in the containers.")
  public Boolean isAllowHostPID() {
    return allowHostPID;
  }

  public void setAllowHostPID(Boolean allowHostPID) {
    this.allowHostPID = allowHostPID;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowHostPorts(Boolean allowHostPorts) {
    this.allowHostPorts = allowHostPorts;
    return this;
  }

   /**
   * AllowHostPorts determines if the policy allows host ports in the containers.
   * @return allowHostPorts
  **/
  @ApiModelProperty(required = true, value = "AllowHostPorts determines if the policy allows host ports in the containers.")
  public Boolean isAllowHostPorts() {
    return allowHostPorts;
  }

  public void setAllowHostPorts(Boolean allowHostPorts) {
    this.allowHostPorts = allowHostPorts;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowPrivilegeEscalation(Boolean allowPrivilegeEscalation) {
    this.allowPrivilegeEscalation = allowPrivilegeEscalation;
    return this;
  }

   /**
   * AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
   * @return allowPrivilegeEscalation
  **/
  @ApiModelProperty(value = "AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.")
  public Boolean isAllowPrivilegeEscalation() {
    return allowPrivilegeEscalation;
  }

  public void setAllowPrivilegeEscalation(Boolean allowPrivilegeEscalation) {
    this.allowPrivilegeEscalation = allowPrivilegeEscalation;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowPrivilegedContainer(Boolean allowPrivilegedContainer) {
    this.allowPrivilegedContainer = allowPrivilegedContainer;
    return this;
  }

   /**
   * AllowPrivilegedContainer determines if a container can request to be run as privileged.
   * @return allowPrivilegedContainer
  **/
  @ApiModelProperty(required = true, value = "AllowPrivilegedContainer determines if a container can request to be run as privileged.")
  public Boolean isAllowPrivilegedContainer() {
    return allowPrivilegedContainer;
  }

  public void setAllowPrivilegedContainer(Boolean allowPrivilegedContainer) {
    this.allowPrivilegedContainer = allowPrivilegedContainer;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowedCapabilities(List<String> allowedCapabilities) {
    this.allowedCapabilities = allowedCapabilities;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addAllowedCapabilitiesItem(String allowedCapabilitiesItem) {
    this.allowedCapabilities.add(allowedCapabilitiesItem);
    return this;
  }

   /**
   * AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author&#39;s discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use &#39;*&#39;.
   * @return allowedCapabilities
  **/
  @ApiModelProperty(required = true, value = "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'.")
  public List<String> getAllowedCapabilities() {
    return allowedCapabilities;
  }

  public void setAllowedCapabilities(List<String> allowedCapabilities) {
    this.allowedCapabilities = allowedCapabilities;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowedFlexVolumes(List<ComGithubOpenshiftApiSecurityV1AllowedFlexVolume> allowedFlexVolumes) {
    this.allowedFlexVolumes = allowedFlexVolumes;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addAllowedFlexVolumesItem(ComGithubOpenshiftApiSecurityV1AllowedFlexVolume allowedFlexVolumesItem) {
    if (this.allowedFlexVolumes == null) {
      this.allowedFlexVolumes = new ArrayList<>();
    }
    this.allowedFlexVolumes.add(allowedFlexVolumesItem);
    return this;
  }

   /**
   * AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \&quot;Volumes\&quot; field.
   * @return allowedFlexVolumes
  **/
  @ApiModelProperty(value = "AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"Volumes\" field.")
  public List<ComGithubOpenshiftApiSecurityV1AllowedFlexVolume> getAllowedFlexVolumes() {
    return allowedFlexVolumes;
  }

  public void setAllowedFlexVolumes(List<ComGithubOpenshiftApiSecurityV1AllowedFlexVolume> allowedFlexVolumes) {
    this.allowedFlexVolumes = allowedFlexVolumes;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints allowedUnsafeSysctls(List<String> allowedUnsafeSysctls) {
    this.allowedUnsafeSysctls = allowedUnsafeSysctls;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addAllowedUnsafeSysctlsItem(String allowedUnsafeSysctlsItem) {
    if (this.allowedUnsafeSysctls == null) {
      this.allowedUnsafeSysctls = new ArrayList<>();
    }
    this.allowedUnsafeSysctls.add(allowedUnsafeSysctlsItem);
    return this;
  }

   /**
   * AllowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \&quot;*\&quot; in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.  Examples: e.g. \&quot;foo/_*\&quot; allows \&quot;foo/bar\&quot;, \&quot;foo/baz\&quot;, etc. e.g. \&quot;foo.*\&quot; allows \&quot;foo.bar\&quot;, \&quot;foo.baz\&quot;, etc.
   * @return allowedUnsafeSysctls
  **/
  @ApiModelProperty(value = "AllowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.  Examples: e.g. \"foo/_*\" allows \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" allows \"foo.bar\", \"foo.baz\", etc.")
  public List<String> getAllowedUnsafeSysctls() {
    return allowedUnsafeSysctls;
  }

  public void setAllowedUnsafeSysctls(List<String> allowedUnsafeSysctls) {
    this.allowedUnsafeSysctls = allowedUnsafeSysctls;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   * @return apiVersion
  **/
  @ApiModelProperty(value = "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints defaultAddCapabilities(List<String> defaultAddCapabilities) {
    this.defaultAddCapabilities = defaultAddCapabilities;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addDefaultAddCapabilitiesItem(String defaultAddCapabilitiesItem) {
    this.defaultAddCapabilities.add(defaultAddCapabilitiesItem);
    return this;
  }

   /**
   * DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
   * @return defaultAddCapabilities
  **/
  @ApiModelProperty(required = true, value = "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.")
  public List<String> getDefaultAddCapabilities() {
    return defaultAddCapabilities;
  }

  public void setDefaultAddCapabilities(List<String> defaultAddCapabilities) {
    this.defaultAddCapabilities = defaultAddCapabilities;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints defaultAllowPrivilegeEscalation(Boolean defaultAllowPrivilegeEscalation) {
    this.defaultAllowPrivilegeEscalation = defaultAllowPrivilegeEscalation;
    return this;
  }

   /**
   * DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
   * @return defaultAllowPrivilegeEscalation
  **/
  @ApiModelProperty(value = "DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.")
  public Boolean isDefaultAllowPrivilegeEscalation() {
    return defaultAllowPrivilegeEscalation;
  }

  public void setDefaultAllowPrivilegeEscalation(Boolean defaultAllowPrivilegeEscalation) {
    this.defaultAllowPrivilegeEscalation = defaultAllowPrivilegeEscalation;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints forbiddenSysctls(List<String> forbiddenSysctls) {
    this.forbiddenSysctls = forbiddenSysctls;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addForbiddenSysctlsItem(String forbiddenSysctlsItem) {
    if (this.forbiddenSysctls == null) {
      this.forbiddenSysctls = new ArrayList<>();
    }
    this.forbiddenSysctls.add(forbiddenSysctlsItem);
    return this;
  }

   /**
   * ForbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \&quot;*\&quot; in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.  Examples: e.g. \&quot;foo/_*\&quot; forbids \&quot;foo/bar\&quot;, \&quot;foo/baz\&quot;, etc. e.g. \&quot;foo.*\&quot; forbids \&quot;foo.bar\&quot;, \&quot;foo.baz\&quot;, etc.
   * @return forbiddenSysctls
  **/
  @ApiModelProperty(value = "ForbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.  Examples: e.g. \"foo/_*\" forbids \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" forbids \"foo.bar\", \"foo.baz\", etc.")
  public List<String> getForbiddenSysctls() {
    return forbiddenSysctls;
  }

  public void setForbiddenSysctls(List<String> forbiddenSysctls) {
    this.forbiddenSysctls = forbiddenSysctls;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints fsGroup(ComGithubOpenshiftApiSecurityV1FSGroupStrategyOptions fsGroup) {
    this.fsGroup = fsGroup;
    return this;
  }

   /**
   * FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
   * @return fsGroup
  **/
  @ApiModelProperty(value = "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.")
  public ComGithubOpenshiftApiSecurityV1FSGroupStrategyOptions getFsGroup() {
    return fsGroup;
  }

  public void setFsGroup(ComGithubOpenshiftApiSecurityV1FSGroupStrategyOptions fsGroup) {
    this.fsGroup = fsGroup;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * The groups that have permission to use this security context constraints
   * @return groups
  **/
  @ApiModelProperty(value = "The groups that have permission to use this security context constraints")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @return kind
  **/
  @ApiModelProperty(value = "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints metadata(IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 getMetadata() {
    return metadata;
  }

  public void setMetadata(IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata) {
    this.metadata = metadata;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority. An unset value is considered a 0 priority. If scores for multiple SCCs are equal they will be sorted from most restrictive to least restrictive. If both priorities and restrictions are equal the SCCs will be sorted by name.
   * @return priority
  **/
  @ApiModelProperty(required = true, value = "Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority. An unset value is considered a 0 priority. If scores for multiple SCCs are equal they will be sorted from most restrictive to least restrictive. If both priorities and restrictions are equal the SCCs will be sorted by name.")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints readOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
    return this;
  }

   /**
   * ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
   * @return readOnlyRootFilesystem
  **/
  @ApiModelProperty(required = true, value = "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.")
  public Boolean isReadOnlyRootFilesystem() {
    return readOnlyRootFilesystem;
  }

  public void setReadOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints requiredDropCapabilities(List<String> requiredDropCapabilities) {
    this.requiredDropCapabilities = requiredDropCapabilities;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addRequiredDropCapabilitiesItem(String requiredDropCapabilitiesItem) {
    this.requiredDropCapabilities.add(requiredDropCapabilitiesItem);
    return this;
  }

   /**
   * RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
   * @return requiredDropCapabilities
  **/
  @ApiModelProperty(required = true, value = "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.")
  public List<String> getRequiredDropCapabilities() {
    return requiredDropCapabilities;
  }

  public void setRequiredDropCapabilities(List<String> requiredDropCapabilities) {
    this.requiredDropCapabilities = requiredDropCapabilities;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints runAsUser(ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions runAsUser) {
    this.runAsUser = runAsUser;
    return this;
  }

   /**
   * RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.
   * @return runAsUser
  **/
  @ApiModelProperty(value = "RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.")
  public ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions getRunAsUser() {
    return runAsUser;
  }

  public void setRunAsUser(ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions runAsUser) {
    this.runAsUser = runAsUser;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints seLinuxContext(ComGithubOpenshiftApiSecurityV1SELinuxContextStrategyOptions seLinuxContext) {
    this.seLinuxContext = seLinuxContext;
    return this;
  }

   /**
   * SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.
   * @return seLinuxContext
  **/
  @ApiModelProperty(value = "SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.")
  public ComGithubOpenshiftApiSecurityV1SELinuxContextStrategyOptions getSeLinuxContext() {
    return seLinuxContext;
  }

  public void setSeLinuxContext(ComGithubOpenshiftApiSecurityV1SELinuxContextStrategyOptions seLinuxContext) {
    this.seLinuxContext = seLinuxContext;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints seccompProfiles(List<String> seccompProfiles) {
    this.seccompProfiles = seccompProfiles;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addSeccompProfilesItem(String seccompProfilesItem) {
    if (this.seccompProfiles == null) {
      this.seccompProfiles = new ArrayList<>();
    }
    this.seccompProfiles.add(seccompProfilesItem);
    return this;
  }

   /**
   * SeccompProfiles lists the allowed profiles that may be set for the pod or container&#39;s seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container. The wildcard &#39;*&#39; may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.
   * @return seccompProfiles
  **/
  @ApiModelProperty(value = "SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container. The wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.")
  public List<String> getSeccompProfiles() {
    return seccompProfiles;
  }

  public void setSeccompProfiles(List<String> seccompProfiles) {
    this.seccompProfiles = seccompProfiles;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints supplementalGroups(ComGithubOpenshiftApiSecurityV1SupplementalGroupsStrategyOptions supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
    return this;
  }

   /**
   * SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
   * @return supplementalGroups
  **/
  @ApiModelProperty(value = "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.")
  public ComGithubOpenshiftApiSecurityV1SupplementalGroupsStrategyOptions getSupplementalGroups() {
    return supplementalGroups;
  }

  public void setSupplementalGroups(ComGithubOpenshiftApiSecurityV1SupplementalGroupsStrategyOptions supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints users(List<String> users) {
    this.users = users;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addUsersItem(String usersItem) {
    if (this.users == null) {
      this.users = new ArrayList<>();
    }
    this.users.add(usersItem);
    return this;
  }

   /**
   * The users who have permissions to use this security context constraints
   * @return users
  **/
  @ApiModelProperty(value = "The users who have permissions to use this security context constraints")
  public List<String> getUsers() {
    return users;
  }

  public void setUsers(List<String> users) {
    this.users = users;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints volumes(List<String> volumes) {
    this.volumes = volumes;
    return this;
  }

  public ComGithubOpenshiftApiSecurityV1SecurityContextConstraints addVolumesItem(String volumesItem) {
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \&quot;*\&quot;. To allow no volumes, set to [\&quot;none\&quot;].
   * @return volumes
  **/
  @ApiModelProperty(required = true, value = "Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"].")
  public List<String> getVolumes() {
    return volumes;
  }

  public void setVolumes(List<String> volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiSecurityV1SecurityContextConstraints comGithubOpenshiftApiSecurityV1SecurityContextConstraints = (ComGithubOpenshiftApiSecurityV1SecurityContextConstraints) o;
    return Objects.equals(this.allowHostDirVolumePlugin, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowHostDirVolumePlugin) &&
        Objects.equals(this.allowHostIPC, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowHostIPC) &&
        Objects.equals(this.allowHostNetwork, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowHostNetwork) &&
        Objects.equals(this.allowHostPID, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowHostPID) &&
        Objects.equals(this.allowHostPorts, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowHostPorts) &&
        Objects.equals(this.allowPrivilegeEscalation, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowPrivilegeEscalation) &&
        Objects.equals(this.allowPrivilegedContainer, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowPrivilegedContainer) &&
        Objects.equals(this.allowedCapabilities, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowedCapabilities) &&
        Objects.equals(this.allowedFlexVolumes, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowedFlexVolumes) &&
        Objects.equals(this.allowedUnsafeSysctls, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.allowedUnsafeSysctls) &&
        Objects.equals(this.apiVersion, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.apiVersion) &&
        Objects.equals(this.defaultAddCapabilities, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.defaultAddCapabilities) &&
        Objects.equals(this.defaultAllowPrivilegeEscalation, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.defaultAllowPrivilegeEscalation) &&
        Objects.equals(this.forbiddenSysctls, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.forbiddenSysctls) &&
        Objects.equals(this.fsGroup, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.fsGroup) &&
        Objects.equals(this.groups, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.groups) &&
        Objects.equals(this.kind, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.kind) &&
        Objects.equals(this.metadata, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.metadata) &&
        Objects.equals(this.priority, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.priority) &&
        Objects.equals(this.readOnlyRootFilesystem, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.readOnlyRootFilesystem) &&
        Objects.equals(this.requiredDropCapabilities, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.requiredDropCapabilities) &&
        Objects.equals(this.runAsUser, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.runAsUser) &&
        Objects.equals(this.seLinuxContext, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.seLinuxContext) &&
        Objects.equals(this.seccompProfiles, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.seccompProfiles) &&
        Objects.equals(this.supplementalGroups, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.supplementalGroups) &&
        Objects.equals(this.users, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.users) &&
        Objects.equals(this.volumes, comGithubOpenshiftApiSecurityV1SecurityContextConstraints.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowHostDirVolumePlugin, allowHostIPC, allowHostNetwork, allowHostPID, allowHostPorts, allowPrivilegeEscalation, allowPrivilegedContainer, allowedCapabilities, allowedFlexVolumes, allowedUnsafeSysctls, apiVersion, defaultAddCapabilities, defaultAllowPrivilegeEscalation, forbiddenSysctls, fsGroup, groups, kind, metadata, priority, readOnlyRootFilesystem, requiredDropCapabilities, runAsUser, seLinuxContext, seccompProfiles, supplementalGroups, users, volumes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiSecurityV1SecurityContextConstraints {\n");
    
    sb.append("    allowHostDirVolumePlugin: ").append(toIndentedString(allowHostDirVolumePlugin)).append("\n");
    sb.append("    allowHostIPC: ").append(toIndentedString(allowHostIPC)).append("\n");
    sb.append("    allowHostNetwork: ").append(toIndentedString(allowHostNetwork)).append("\n");
    sb.append("    allowHostPID: ").append(toIndentedString(allowHostPID)).append("\n");
    sb.append("    allowHostPorts: ").append(toIndentedString(allowHostPorts)).append("\n");
    sb.append("    allowPrivilegeEscalation: ").append(toIndentedString(allowPrivilegeEscalation)).append("\n");
    sb.append("    allowPrivilegedContainer: ").append(toIndentedString(allowPrivilegedContainer)).append("\n");
    sb.append("    allowedCapabilities: ").append(toIndentedString(allowedCapabilities)).append("\n");
    sb.append("    allowedFlexVolumes: ").append(toIndentedString(allowedFlexVolumes)).append("\n");
    sb.append("    allowedUnsafeSysctls: ").append(toIndentedString(allowedUnsafeSysctls)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    defaultAddCapabilities: ").append(toIndentedString(defaultAddCapabilities)).append("\n");
    sb.append("    defaultAllowPrivilegeEscalation: ").append(toIndentedString(defaultAllowPrivilegeEscalation)).append("\n");
    sb.append("    forbiddenSysctls: ").append(toIndentedString(forbiddenSysctls)).append("\n");
    sb.append("    fsGroup: ").append(toIndentedString(fsGroup)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    readOnlyRootFilesystem: ").append(toIndentedString(readOnlyRootFilesystem)).append("\n");
    sb.append("    requiredDropCapabilities: ").append(toIndentedString(requiredDropCapabilities)).append("\n");
    sb.append("    runAsUser: ").append(toIndentedString(runAsUser)).append("\n");
    sb.append("    seLinuxContext: ").append(toIndentedString(seLinuxContext)).append("\n");
    sb.append("    seccompProfiles: ").append(toIndentedString(seccompProfiles)).append("\n");
    sb.append("    supplementalGroups: ").append(toIndentedString(supplementalGroups)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

