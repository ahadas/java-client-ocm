/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1ObjectMetaV2;

/**
 * OAuthClientAuthorization describes an authorization created by an OAuth client
 */
@ApiModel(description = "OAuthClientAuthorization describes an authorization created by an OAuth client")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiOauthV1OAuthClientAuthorization {
  @SerializedName("apiVersion")
  private String apiVersion = null;

  @SerializedName("clientName")
  private String clientName = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("metadata")
  private IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata = null;

  @SerializedName("scopes")
  private List<String> scopes = null;

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("userUID")
  private String userUID = null;

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   * @return apiVersion
  **/
  @ApiModelProperty(value = "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

   /**
   * ClientName references the client that created this authorization
   * @return clientName
  **/
  @ApiModelProperty(value = "ClientName references the client that created this authorization")
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @return kind
  **/
  @ApiModelProperty(value = "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization metadata(IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 getMetadata() {
    return metadata;
  }

  public void setMetadata(IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata) {
    this.metadata = metadata;
  }

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Scopes is an array of the granted scopes.
   * @return scopes
  **/
  @ApiModelProperty(value = "Scopes is an array of the granted scopes.")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * UserName is the user name that authorized this client
   * @return userName
  **/
  @ApiModelProperty(value = "UserName is the user name that authorized this client")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public ComGithubOpenshiftApiOauthV1OAuthClientAuthorization userUID(String userUID) {
    this.userUID = userUID;
    return this;
  }

   /**
   * UserUID is the unique UID associated with this authorization. UserUID and UserName must both match for this authorization to be valid.
   * @return userUID
  **/
  @ApiModelProperty(value = "UserUID is the unique UID associated with this authorization. UserUID and UserName must both match for this authorization to be valid.")
  public String getUserUID() {
    return userUID;
  }

  public void setUserUID(String userUID) {
    this.userUID = userUID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiOauthV1OAuthClientAuthorization comGithubOpenshiftApiOauthV1OAuthClientAuthorization = (ComGithubOpenshiftApiOauthV1OAuthClientAuthorization) o;
    return Objects.equals(this.apiVersion, comGithubOpenshiftApiOauthV1OAuthClientAuthorization.apiVersion) &&
        Objects.equals(this.clientName, comGithubOpenshiftApiOauthV1OAuthClientAuthorization.clientName) &&
        Objects.equals(this.kind, comGithubOpenshiftApiOauthV1OAuthClientAuthorization.kind) &&
        Objects.equals(this.metadata, comGithubOpenshiftApiOauthV1OAuthClientAuthorization.metadata) &&
        Objects.equals(this.scopes, comGithubOpenshiftApiOauthV1OAuthClientAuthorization.scopes) &&
        Objects.equals(this.userName, comGithubOpenshiftApiOauthV1OAuthClientAuthorization.userName) &&
        Objects.equals(this.userUID, comGithubOpenshiftApiOauthV1OAuthClientAuthorization.userUID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, clientName, kind, metadata, scopes, userName, userUID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiOauthV1OAuthClientAuthorization {\n");
    
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userUID: ").append(toIndentedString(userUID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

