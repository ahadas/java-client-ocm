/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoOpenshiftOperatorV1DNSSpecForwardPlugin;

/**
 * Server defines the schema for a server that runs per instance of CoreDNS.
 */
@ApiModel(description = "Server defines the schema for a server that runs per instance of CoreDNS.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftOperatorV1DNSSpecServers {
  @SerializedName("forwardPlugin")
  private IoOpenshiftOperatorV1DNSSpecForwardPlugin forwardPlugin = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("zones")
  private List<String> zones = null;

  public IoOpenshiftOperatorV1DNSSpecServers forwardPlugin(IoOpenshiftOperatorV1DNSSpecForwardPlugin forwardPlugin) {
    this.forwardPlugin = forwardPlugin;
    return this;
  }

   /**
   * Get forwardPlugin
   * @return forwardPlugin
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftOperatorV1DNSSpecForwardPlugin getForwardPlugin() {
    return forwardPlugin;
  }

  public void setForwardPlugin(IoOpenshiftOperatorV1DNSSpecForwardPlugin forwardPlugin) {
    this.forwardPlugin = forwardPlugin;
  }

  public IoOpenshiftOperatorV1DNSSpecServers name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name is required and specifies a unique name for the server. Name must comply with the Service Name Syntax of rfc6335.
   * @return name
  **/
  @ApiModelProperty(value = "name is required and specifies a unique name for the server. Name must comply with the Service Name Syntax of rfc6335.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IoOpenshiftOperatorV1DNSSpecServers zones(List<String> zones) {
    this.zones = zones;
    return this;
  }

  public IoOpenshiftOperatorV1DNSSpecServers addZonesItem(String zonesItem) {
    if (this.zones == null) {
      this.zones = new ArrayList<>();
    }
    this.zones.add(zonesItem);
    return this;
  }

   /**
   * zones is required and specifies the subdomains that Server is authoritative for. Zones must conform to the rfc1123 definition of a subdomain. Specifying the cluster domain (i.e., \&quot;cluster.local\&quot;) is invalid.
   * @return zones
  **/
  @ApiModelProperty(value = "zones is required and specifies the subdomains that Server is authoritative for. Zones must conform to the rfc1123 definition of a subdomain. Specifying the cluster domain (i.e., \"cluster.local\") is invalid.")
  public List<String> getZones() {
    return zones;
  }

  public void setZones(List<String> zones) {
    this.zones = zones;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftOperatorV1DNSSpecServers ioOpenshiftOperatorV1DNSSpecServers = (IoOpenshiftOperatorV1DNSSpecServers) o;
    return Objects.equals(this.forwardPlugin, ioOpenshiftOperatorV1DNSSpecServers.forwardPlugin) &&
        Objects.equals(this.name, ioOpenshiftOperatorV1DNSSpecServers.name) &&
        Objects.equals(this.zones, ioOpenshiftOperatorV1DNSSpecServers.zones);
  }

  @Override
  public int hashCode() {
    return Objects.hash(forwardPlugin, name, zones);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftOperatorV1DNSSpecServers {\n");
    
    sb.append("    forwardPlugin: ").append(toIndentedString(forwardPlugin)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    zones: ").append(toIndentedString(zones)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

