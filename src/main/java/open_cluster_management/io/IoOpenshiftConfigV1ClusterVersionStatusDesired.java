/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * desired is the version that the cluster is reconciling towards. If the cluster is not yet fully initialized desired will be set with the information available, which may be an image or a tag.
 */
@ApiModel(description = "desired is the version that the cluster is reconciling towards. If the cluster is not yet fully initialized desired will be set with the information available, which may be an image or a tag.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftConfigV1ClusterVersionStatusDesired {
  @SerializedName("force")
  private Boolean force = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("version")
  private String version = null;

  public IoOpenshiftConfigV1ClusterVersionStatusDesired force(Boolean force) {
    this.force = force;
    return this;
  }

   /**
   * force allows an administrator to update to an image that has failed verification, does not appear in the availableUpdates list, or otherwise would be blocked by normal protections on update. This option should only be used when the authenticity of the provided image has been verified out of band because the provided image will run with full administrative access to the cluster. Do not use this flag with images that comes from unknown or potentially malicious sources.   This flag does not override other forms of consistency checking that are required before a new update is deployed.
   * @return force
  **/
  @ApiModelProperty(value = "force allows an administrator to update to an image that has failed verification, does not appear in the availableUpdates list, or otherwise would be blocked by normal protections on update. This option should only be used when the authenticity of the provided image has been verified out of band because the provided image will run with full administrative access to the cluster. Do not use this flag with images that comes from unknown or potentially malicious sources.   This flag does not override other forms of consistency checking that are required before a new update is deployed.")
  public Boolean isForce() {
    return force;
  }

  public void setForce(Boolean force) {
    this.force = force;
  }

  public IoOpenshiftConfigV1ClusterVersionStatusDesired image(String image) {
    this.image = image;
    return this;
  }

   /**
   * image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.
   * @return image
  **/
  @ApiModelProperty(value = "image is a container image location that contains the update. When this field is part of spec, image is optional if version is specified and the availableUpdates field contains a matching version.")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }

  public IoOpenshiftConfigV1ClusterVersionStatusDesired version(String version) {
    this.version = version;
    return this;
  }

   /**
   * version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.
   * @return version
  **/
  @ApiModelProperty(value = "version is a semantic versioning identifying the update version. When this field is part of spec, version is optional if image is specified.")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftConfigV1ClusterVersionStatusDesired ioOpenshiftConfigV1ClusterVersionStatusDesired = (IoOpenshiftConfigV1ClusterVersionStatusDesired) o;
    return Objects.equals(this.force, ioOpenshiftConfigV1ClusterVersionStatusDesired.force) &&
        Objects.equals(this.image, ioOpenshiftConfigV1ClusterVersionStatusDesired.image) &&
        Objects.equals(this.version, ioOpenshiftConfigV1ClusterVersionStatusDesired.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(force, image, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftConfigV1ClusterVersionStatusDesired {\n");
    
    sb.append("    force: ").append(toIndentedString(force)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

