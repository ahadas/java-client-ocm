/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.
 */
@ApiModel(description = "RunAsUserStrategyOptions defines the strategy type and any options used to create the strategy.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions {
  @SerializedName("type")
  private String type = null;

  @SerializedName("uid")
  private Long uid = null;

  @SerializedName("uidRangeMax")
  private Long uidRangeMax = null;

  @SerializedName("uidRangeMin")
  private Long uidRangeMin = null;

  public ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type is the strategy that will dictate what RunAsUser is used in the SecurityContext.
   * @return type
  **/
  @ApiModelProperty(value = "Type is the strategy that will dictate what RunAsUser is used in the SecurityContext.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions uid(Long uid) {
    this.uid = uid;
    return this;
  }

   /**
   * UID is the user id that containers must run as.  Required for the MustRunAs strategy if not using namespace/service account allocated uids.
   * @return uid
  **/
  @ApiModelProperty(value = "UID is the user id that containers must run as.  Required for the MustRunAs strategy if not using namespace/service account allocated uids.")
  public Long getUid() {
    return uid;
  }

  public void setUid(Long uid) {
    this.uid = uid;
  }

  public ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions uidRangeMax(Long uidRangeMax) {
    this.uidRangeMax = uidRangeMax;
    return this;
  }

   /**
   * UIDRangeMax defines the max value for a strategy that allocates by range.
   * @return uidRangeMax
  **/
  @ApiModelProperty(value = "UIDRangeMax defines the max value for a strategy that allocates by range.")
  public Long getUidRangeMax() {
    return uidRangeMax;
  }

  public void setUidRangeMax(Long uidRangeMax) {
    this.uidRangeMax = uidRangeMax;
  }

  public ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions uidRangeMin(Long uidRangeMin) {
    this.uidRangeMin = uidRangeMin;
    return this;
  }

   /**
   * UIDRangeMin defines the min value for a strategy that allocates by range.
   * @return uidRangeMin
  **/
  @ApiModelProperty(value = "UIDRangeMin defines the min value for a strategy that allocates by range.")
  public Long getUidRangeMin() {
    return uidRangeMin;
  }

  public void setUidRangeMin(Long uidRangeMin) {
    this.uidRangeMin = uidRangeMin;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions comGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions = (ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions) o;
    return Objects.equals(this.type, comGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions.type) &&
        Objects.equals(this.uid, comGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions.uid) &&
        Objects.equals(this.uidRangeMax, comGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions.uidRangeMax) &&
        Objects.equals(this.uidRangeMin, comGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions.uidRangeMin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, uid, uidRangeMax, uidRangeMin);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiSecurityV1RunAsUserStrategyOptions {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    uidRangeMax: ").append(toIndentedString(uidRangeMax)).append("\n");
    sb.append("    uidRangeMin: ").append(toIndentedString(uidRangeMin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

