/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoOpenshiftConfigV1APIServerSpecServingCertsServingCertificate;

/**
 * APIServerNamedServingCert maps a server DNS name, as understood by a client, to a certificate.
 */
@ApiModel(description = "APIServerNamedServingCert maps a server DNS name, as understood by a client, to a certificate.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates {
  @SerializedName("names")
  private List<String> names = null;

  @SerializedName("servingCertificate")
  private IoOpenshiftConfigV1APIServerSpecServingCertsServingCertificate servingCertificate = null;

  public IoOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates names(List<String> names) {
    this.names = names;
    return this;
  }

  public IoOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates addNamesItem(String namesItem) {
    if (this.names == null) {
      this.names = new ArrayList<>();
    }
    this.names.add(namesItem);
    return this;
  }

   /**
   * names is a optional list of explicit DNS names (leading wildcards allowed) that should use this certificate to serve secure traffic. If no names are provided, the implicit names will be extracted from the certificates. Exact names trump over wildcard names. Explicit names defined here trump over extracted implicit names.
   * @return names
  **/
  @ApiModelProperty(value = "names is a optional list of explicit DNS names (leading wildcards allowed) that should use this certificate to serve secure traffic. If no names are provided, the implicit names will be extracted from the certificates. Exact names trump over wildcard names. Explicit names defined here trump over extracted implicit names.")
  public List<String> getNames() {
    return names;
  }

  public void setNames(List<String> names) {
    this.names = names;
  }

  public IoOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates servingCertificate(IoOpenshiftConfigV1APIServerSpecServingCertsServingCertificate servingCertificate) {
    this.servingCertificate = servingCertificate;
    return this;
  }

   /**
   * Get servingCertificate
   * @return servingCertificate
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftConfigV1APIServerSpecServingCertsServingCertificate getServingCertificate() {
    return servingCertificate;
  }

  public void setServingCertificate(IoOpenshiftConfigV1APIServerSpecServingCertsServingCertificate servingCertificate) {
    this.servingCertificate = servingCertificate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates ioOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates = (IoOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates) o;
    return Objects.equals(this.names, ioOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates.names) &&
        Objects.equals(this.servingCertificate, ioOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates.servingCertificate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(names, servingCertificate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftConfigV1APIServerSpecServingCertsNamedCertificates {\n");
    
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    servingCertificate: ").append(toIndentedString(servingCertificate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

