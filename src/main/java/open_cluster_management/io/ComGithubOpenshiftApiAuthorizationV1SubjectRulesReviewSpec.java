/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SubjectRulesReviewSpec adds information about how to conduct the check
 */
@ApiModel(description = "SubjectRulesReviewSpec adds information about how to conduct the check")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec {
  @SerializedName("groups")
  private List<String> groups = new ArrayList<>();

  @SerializedName("scopes")
  private List<String> scopes = new ArrayList<>();

  @SerializedName("user")
  private String user = null;

  public ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec addGroupsItem(String groupsItem) {
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Groups is optional.  Groups is the list of groups to which the User belongs.  At least one of User and Groups must be specified.
   * @return groups
  **/
  @ApiModelProperty(required = true, value = "Groups is optional.  Groups is the list of groups to which the User belongs.  At least one of User and Groups must be specified.")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec addScopesItem(String scopesItem) {
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Scopes to use for the evaluation.  Empty means \&quot;use the unscoped (full) permissions of the user/groups\&quot;.
   * @return scopes
  **/
  @ApiModelProperty(required = true, value = "Scopes to use for the evaluation.  Empty means \"use the unscoped (full) permissions of the user/groups\".")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }

  public ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec user(String user) {
    this.user = user;
    return this;
  }

   /**
   * User is optional.  At least one of User and Groups must be specified.
   * @return user
  **/
  @ApiModelProperty(required = true, value = "User is optional.  At least one of User and Groups must be specified.")
  public String getUser() {
    return user;
  }

  public void setUser(String user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec comGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec = (ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec) o;
    return Objects.equals(this.groups, comGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec.groups) &&
        Objects.equals(this.scopes, comGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec.scopes) &&
        Objects.equals(this.user, comGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groups, scopes, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiAuthorizationV1SubjectRulesReviewSpec {\n");
    
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

