/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import open_cluster_management.io.IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuotaScopeSelector;

/**
 * Quota defines the desired quota
 */
@ApiModel(description = "Quota defines the desired quota")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota {
  @SerializedName("hard")
  private Map<String, Object> hard = null;

  @SerializedName("scopeSelector")
  private IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuotaScopeSelector scopeSelector = null;

  @SerializedName("scopes")
  private List<String> scopes = null;

  public IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota hard(Map<String, Object> hard) {
    this.hard = hard;
    return this;
  }

  public IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota putHardItem(String key, Object hardItem) {
    if (this.hard == null) {
      this.hard = new HashMap<>();
    }
    this.hard.put(key, hardItem);
    return this;
  }

   /**
   * hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/
   * @return hard
  **/
  @ApiModelProperty(value = "hard is the set of desired hard limits for each named resource. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/")
  public Map<String, Object> getHard() {
    return hard;
  }

  public void setHard(Map<String, Object> hard) {
    this.hard = hard;
  }

  public IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota scopeSelector(IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuotaScopeSelector scopeSelector) {
    this.scopeSelector = scopeSelector;
    return this;
  }

   /**
   * Get scopeSelector
   * @return scopeSelector
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuotaScopeSelector getScopeSelector() {
    return scopeSelector;
  }

  public void setScopeSelector(IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuotaScopeSelector scopeSelector) {
    this.scopeSelector = scopeSelector;
  }

  public IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.
   * @return scopes
  **/
  @ApiModelProperty(value = "A collection of filters that must match each object tracked by a quota. If not specified, the quota matches all objects.")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota ioOpenshiftQuotaV1ClusterResourceQuotaSpecQuota = (IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota) o;
    return Objects.equals(this.hard, ioOpenshiftQuotaV1ClusterResourceQuotaSpecQuota.hard) &&
        Objects.equals(this.scopeSelector, ioOpenshiftQuotaV1ClusterResourceQuotaSpecQuota.scopeSelector) &&
        Objects.equals(this.scopes, ioOpenshiftQuotaV1ClusterResourceQuotaSpecQuota.scopes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hard, scopeSelector, scopes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftQuotaV1ClusterResourceQuotaSpecQuota {\n");
    
    sb.append("    hard: ").append(toIndentedString(hard)).append("\n");
    sb.append("    scopeSelector: ").append(toIndentedString(scopeSelector)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

