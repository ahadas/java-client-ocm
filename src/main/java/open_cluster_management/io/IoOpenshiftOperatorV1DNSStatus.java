/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoOpenshiftOperatorImageregistryV1ConfigStatusConditions;

/**
 * status is the most recently observed status of the DNS.
 */
@ApiModel(description = "status is the most recently observed status of the DNS.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftOperatorV1DNSStatus {
  @SerializedName("clusterDomain")
  private String clusterDomain = null;

  @SerializedName("clusterIP")
  private String clusterIP = null;

  @SerializedName("conditions")
  private List<IoOpenshiftOperatorImageregistryV1ConfigStatusConditions> conditions = null;

  public IoOpenshiftOperatorV1DNSStatus clusterDomain(String clusterDomain) {
    this.clusterDomain = clusterDomain;
    return this;
  }

   /**
   * clusterDomain is the local cluster DNS domain suffix for DNS services. This will be a subdomain as defined in RFC 1034, section 3.5: https://tools.ietf.org/html/rfc1034#section-3.5 Example: \&quot;cluster.local\&quot;   More info: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service
   * @return clusterDomain
  **/
  @ApiModelProperty(required = true, value = "clusterDomain is the local cluster DNS domain suffix for DNS services. This will be a subdomain as defined in RFC 1034, section 3.5: https://tools.ietf.org/html/rfc1034#section-3.5 Example: \"cluster.local\"   More info: https://kubernetes.io/docs/concepts/services-networking/dns-pod-service")
  public String getClusterDomain() {
    return clusterDomain;
  }

  public void setClusterDomain(String clusterDomain) {
    this.clusterDomain = clusterDomain;
  }

  public IoOpenshiftOperatorV1DNSStatus clusterIP(String clusterIP) {
    this.clusterIP = clusterIP;
    return this;
  }

   /**
   * clusterIP is the service IP through which this DNS is made available.   In the case of the default DNS, this will be a well known IP that is used as the default nameserver for pods that are using the default ClusterFirst DNS policy.   In general, this IP can be specified in a pod&#39;s spec.dnsConfig.nameservers list or used explicitly when performing name resolution from within the cluster. Example: dig foo.com @&lt;service IP&gt;   More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies
   * @return clusterIP
  **/
  @ApiModelProperty(required = true, value = "clusterIP is the service IP through which this DNS is made available.   In the case of the default DNS, this will be a well known IP that is used as the default nameserver for pods that are using the default ClusterFirst DNS policy.   In general, this IP can be specified in a pod's spec.dnsConfig.nameservers list or used explicitly when performing name resolution from within the cluster. Example: dig foo.com @<service IP>   More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies")
  public String getClusterIP() {
    return clusterIP;
  }

  public void setClusterIP(String clusterIP) {
    this.clusterIP = clusterIP;
  }

  public IoOpenshiftOperatorV1DNSStatus conditions(List<IoOpenshiftOperatorImageregistryV1ConfigStatusConditions> conditions) {
    this.conditions = conditions;
    return this;
  }

  public IoOpenshiftOperatorV1DNSStatus addConditionsItem(IoOpenshiftOperatorImageregistryV1ConfigStatusConditions conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * conditions provide information about the state of the DNS on the cluster.   These are the supported DNS conditions:     * Available   - True if the following conditions are met:     * DNS controller daemonset is available.   - False if any of those conditions are unsatisfied.
   * @return conditions
  **/
  @ApiModelProperty(value = "conditions provide information about the state of the DNS on the cluster.   These are the supported DNS conditions:     * Available   - True if the following conditions are met:     * DNS controller daemonset is available.   - False if any of those conditions are unsatisfied.")
  public List<IoOpenshiftOperatorImageregistryV1ConfigStatusConditions> getConditions() {
    return conditions;
  }

  public void setConditions(List<IoOpenshiftOperatorImageregistryV1ConfigStatusConditions> conditions) {
    this.conditions = conditions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftOperatorV1DNSStatus ioOpenshiftOperatorV1DNSStatus = (IoOpenshiftOperatorV1DNSStatus) o;
    return Objects.equals(this.clusterDomain, ioOpenshiftOperatorV1DNSStatus.clusterDomain) &&
        Objects.equals(this.clusterIP, ioOpenshiftOperatorV1DNSStatus.clusterIP) &&
        Objects.equals(this.conditions, ioOpenshiftOperatorV1DNSStatus.conditions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clusterDomain, clusterIP, conditions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftOperatorV1DNSStatus {\n");
    
    sb.append("    clusterDomain: ").append(toIndentedString(clusterDomain)).append("\n");
    sb.append("    clusterIP: ").append(toIndentedString(clusterIP)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

