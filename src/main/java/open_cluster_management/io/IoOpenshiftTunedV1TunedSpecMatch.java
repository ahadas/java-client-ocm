/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Rules governing application of a tuned profile.
 */
@ApiModel(description = "Rules governing application of a tuned profile.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftTunedV1TunedSpecMatch {
  @SerializedName("label")
  private String label = null;

  @SerializedName("match")
  private List<Object> match = null;

  /**
   * Match type: [node/pod]. If omitted, \&quot;node\&quot; is assumed.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NODE("node"),
    
    POD("pod");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("value")
  private String value = null;

  public IoOpenshiftTunedV1TunedSpecMatch label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Node or Pod label name.
   * @return label
  **/
  @ApiModelProperty(required = true, value = "Node or Pod label name.")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public IoOpenshiftTunedV1TunedSpecMatch match(List<Object> match) {
    this.match = match;
    return this;
  }

  public IoOpenshiftTunedV1TunedSpecMatch addMatchItem(Object matchItem) {
    if (this.match == null) {
      this.match = new ArrayList<>();
    }
    this.match.add(matchItem);
    return this;
  }

   /**
   * Additional rules governing application of the tuned profile connected by logical AND operator.
   * @return match
  **/
  @ApiModelProperty(value = "Additional rules governing application of the tuned profile connected by logical AND operator.")
  public List<Object> getMatch() {
    return match;
  }

  public void setMatch(List<Object> match) {
    this.match = match;
  }

  public IoOpenshiftTunedV1TunedSpecMatch type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Match type: [node/pod]. If omitted, \&quot;node\&quot; is assumed.
   * @return type
  **/
  @ApiModelProperty(value = "Match type: [node/pod]. If omitted, \"node\" is assumed.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public IoOpenshiftTunedV1TunedSpecMatch value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Node or Pod label value. If omitted, the presence of label name is enough to match.
   * @return value
  **/
  @ApiModelProperty(value = "Node or Pod label value. If omitted, the presence of label name is enough to match.")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftTunedV1TunedSpecMatch ioOpenshiftTunedV1TunedSpecMatch = (IoOpenshiftTunedV1TunedSpecMatch) o;
    return Objects.equals(this.label, ioOpenshiftTunedV1TunedSpecMatch.label) &&
        Objects.equals(this.match, ioOpenshiftTunedV1TunedSpecMatch.match) &&
        Objects.equals(this.type, ioOpenshiftTunedV1TunedSpecMatch.type) &&
        Objects.equals(this.value, ioOpenshiftTunedV1TunedSpecMatch.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(label, match, type, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftTunedV1TunedSpecMatch {\n");
    
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    match: ").append(toIndentedString(match)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

