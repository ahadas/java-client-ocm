/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoK8sApimachineryPkgRuntimeRawExtension;

/**
 * PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.
 */
@ApiModel(description = "PolicyRule holds information that describes a policy rule, but does not contain information about who the rule applies to or which namespace the rule applies to.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiAuthorizationV1PolicyRule {
  @SerializedName("apiGroups")
  private List<String> apiGroups = new ArrayList<>();

  @SerializedName("attributeRestrictions")
  private IoK8sApimachineryPkgRuntimeRawExtension attributeRestrictions = null;

  @SerializedName("nonResourceURLs")
  private List<String> nonResourceURLs = null;

  @SerializedName("resourceNames")
  private List<String> resourceNames = null;

  @SerializedName("resources")
  private List<String> resources = new ArrayList<>();

  @SerializedName("verbs")
  private List<String> verbs = new ArrayList<>();

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule apiGroups(List<String> apiGroups) {
    this.apiGroups = apiGroups;
    return this;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule addApiGroupsItem(String apiGroupsItem) {
    this.apiGroups.add(apiGroupsItem);
    return this;
  }

   /**
   * APIGroups is the name of the APIGroup that contains the resources.  If this field is empty, then both kubernetes and origin API groups are assumed. That means that if an action is requested against one of the enumerated resources in either the kubernetes or the origin API group, the request will be allowed
   * @return apiGroups
  **/
  @ApiModelProperty(required = true, value = "APIGroups is the name of the APIGroup that contains the resources.  If this field is empty, then both kubernetes and origin API groups are assumed. That means that if an action is requested against one of the enumerated resources in either the kubernetes or the origin API group, the request will be allowed")
  public List<String> getApiGroups() {
    return apiGroups;
  }

  public void setApiGroups(List<String> apiGroups) {
    this.apiGroups = apiGroups;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule attributeRestrictions(IoK8sApimachineryPkgRuntimeRawExtension attributeRestrictions) {
    this.attributeRestrictions = attributeRestrictions;
    return this;
  }

   /**
   * AttributeRestrictions will vary depending on what the Authorizer/AuthorizationAttributeBuilder pair supports. If the Authorizer does not recognize how to handle the AttributeRestrictions, the Authorizer should report an error.
   * @return attributeRestrictions
  **/
  @ApiModelProperty(value = "AttributeRestrictions will vary depending on what the Authorizer/AuthorizationAttributeBuilder pair supports. If the Authorizer does not recognize how to handle the AttributeRestrictions, the Authorizer should report an error.")
  public IoK8sApimachineryPkgRuntimeRawExtension getAttributeRestrictions() {
    return attributeRestrictions;
  }

  public void setAttributeRestrictions(IoK8sApimachineryPkgRuntimeRawExtension attributeRestrictions) {
    this.attributeRestrictions = attributeRestrictions;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule nonResourceURLs(List<String> nonResourceURLs) {
    this.nonResourceURLs = nonResourceURLs;
    return this;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule addNonResourceURLsItem(String nonResourceURLsItem) {
    if (this.nonResourceURLs == null) {
      this.nonResourceURLs = new ArrayList<>();
    }
    this.nonResourceURLs.add(nonResourceURLsItem);
    return this;
  }

   /**
   * NonResourceURLsSlice is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different.
   * @return nonResourceURLs
  **/
  @ApiModelProperty(value = "NonResourceURLsSlice is a set of partial urls that a user should have access to.  *s are allowed, but only as the full, final step in the path This name is intentionally different than the internal type so that the DefaultConvert works nicely and because the ordering may be different.")
  public List<String> getNonResourceURLs() {
    return nonResourceURLs;
  }

  public void setNonResourceURLs(List<String> nonResourceURLs) {
    this.nonResourceURLs = nonResourceURLs;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule resourceNames(List<String> resourceNames) {
    this.resourceNames = resourceNames;
    return this;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule addResourceNamesItem(String resourceNamesItem) {
    if (this.resourceNames == null) {
      this.resourceNames = new ArrayList<>();
    }
    this.resourceNames.add(resourceNamesItem);
    return this;
  }

   /**
   * ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.
   * @return resourceNames
  **/
  @ApiModelProperty(value = "ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.")
  public List<String> getResourceNames() {
    return resourceNames;
  }

  public void setResourceNames(List<String> resourceNames) {
    this.resourceNames = resourceNames;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule resources(List<String> resources) {
    this.resources = resources;
    return this;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule addResourcesItem(String resourcesItem) {
    this.resources.add(resourcesItem);
    return this;
  }

   /**
   * Resources is a list of resources this rule applies to.  ResourceAll represents all resources.
   * @return resources
  **/
  @ApiModelProperty(required = true, value = "Resources is a list of resources this rule applies to.  ResourceAll represents all resources.")
  public List<String> getResources() {
    return resources;
  }

  public void setResources(List<String> resources) {
    this.resources = resources;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule verbs(List<String> verbs) {
    this.verbs = verbs;
    return this;
  }

  public ComGithubOpenshiftApiAuthorizationV1PolicyRule addVerbsItem(String verbsItem) {
    this.verbs.add(verbsItem);
    return this;
  }

   /**
   * Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.
   * @return verbs
  **/
  @ApiModelProperty(required = true, value = "Verbs is a list of Verbs that apply to ALL the ResourceKinds and AttributeRestrictions contained in this rule.  VerbAll represents all kinds.")
  public List<String> getVerbs() {
    return verbs;
  }

  public void setVerbs(List<String> verbs) {
    this.verbs = verbs;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiAuthorizationV1PolicyRule comGithubOpenshiftApiAuthorizationV1PolicyRule = (ComGithubOpenshiftApiAuthorizationV1PolicyRule) o;
    return Objects.equals(this.apiGroups, comGithubOpenshiftApiAuthorizationV1PolicyRule.apiGroups) &&
        Objects.equals(this.attributeRestrictions, comGithubOpenshiftApiAuthorizationV1PolicyRule.attributeRestrictions) &&
        Objects.equals(this.nonResourceURLs, comGithubOpenshiftApiAuthorizationV1PolicyRule.nonResourceURLs) &&
        Objects.equals(this.resourceNames, comGithubOpenshiftApiAuthorizationV1PolicyRule.resourceNames) &&
        Objects.equals(this.resources, comGithubOpenshiftApiAuthorizationV1PolicyRule.resources) &&
        Objects.equals(this.verbs, comGithubOpenshiftApiAuthorizationV1PolicyRule.verbs);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiGroups, attributeRestrictions, nonResourceURLs, resourceNames, resources, verbs);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiAuthorizationV1PolicyRule {\n");
    
    sb.append("    apiGroups: ").append(toIndentedString(apiGroups)).append("\n");
    sb.append("    attributeRestrictions: ").append(toIndentedString(attributeRestrictions)).append("\n");
    sb.append("    nonResourceURLs: ").append(toIndentedString(nonResourceURLs)).append("\n");
    sb.append("    resourceNames: ").append(toIndentedString(resourceNames)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    verbs: ").append(toIndentedString(verbs)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

