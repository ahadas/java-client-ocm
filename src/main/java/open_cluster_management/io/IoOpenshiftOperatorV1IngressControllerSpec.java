/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import open_cluster_management.io.IoOpenshiftOperatorV1IngressControllerSpecDefaultCertificate;
import open_cluster_management.io.IoOpenshiftOperatorV1IngressControllerSpecEndpointPublishingStrategy;
import open_cluster_management.io.IoOpenshiftOperatorV1IngressControllerSpecNamespaceSelector;
import open_cluster_management.io.IoOpenshiftOperatorV1IngressControllerSpecNodePlacement;
import open_cluster_management.io.IoOpenshiftOperatorV1IngressControllerSpecRouteSelector;
import open_cluster_management.io.IoOpenshiftOperatorV1IngressControllerSpecTlsSecurityProfile;

/**
 * spec is the specification of the desired behavior of the IngressController.
 */
@ApiModel(description = "spec is the specification of the desired behavior of the IngressController.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftOperatorV1IngressControllerSpec {
  @SerializedName("defaultCertificate")
  private IoOpenshiftOperatorV1IngressControllerSpecDefaultCertificate defaultCertificate = null;

  @SerializedName("domain")
  private String domain = null;

  @SerializedName("endpointPublishingStrategy")
  private IoOpenshiftOperatorV1IngressControllerSpecEndpointPublishingStrategy endpointPublishingStrategy = null;

  @SerializedName("namespaceSelector")
  private IoOpenshiftOperatorV1IngressControllerSpecNamespaceSelector namespaceSelector = null;

  @SerializedName("nodePlacement")
  private IoOpenshiftOperatorV1IngressControllerSpecNodePlacement nodePlacement = null;

  @SerializedName("replicas")
  private Integer replicas = null;

  @SerializedName("routeSelector")
  private IoOpenshiftOperatorV1IngressControllerSpecRouteSelector routeSelector = null;

  @SerializedName("tlsSecurityProfile")
  private IoOpenshiftOperatorV1IngressControllerSpecTlsSecurityProfile tlsSecurityProfile = null;

  public IoOpenshiftOperatorV1IngressControllerSpec defaultCertificate(IoOpenshiftOperatorV1IngressControllerSpecDefaultCertificate defaultCertificate) {
    this.defaultCertificate = defaultCertificate;
    return this;
  }

   /**
   * Get defaultCertificate
   * @return defaultCertificate
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftOperatorV1IngressControllerSpecDefaultCertificate getDefaultCertificate() {
    return defaultCertificate;
  }

  public void setDefaultCertificate(IoOpenshiftOperatorV1IngressControllerSpecDefaultCertificate defaultCertificate) {
    this.defaultCertificate = defaultCertificate;
  }

  public IoOpenshiftOperatorV1IngressControllerSpec domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * domain is a DNS name serviced by the ingress controller and is used to configure multiple features:   * For the LoadBalancerService endpoint publishing strategy, domain is   used to configure DNS records. See endpointPublishingStrategy.   * When using a generated default certificate, the certificate will be valid   for domain and its subdomains. See defaultCertificate.   * The value is published to individual Route statuses so that end-users   know where to target external DNS records.   domain must be unique among all IngressControllers, and cannot be updated.   If empty, defaults to ingress.config.openshift.io/cluster .spec.domain.
   * @return domain
  **/
  @ApiModelProperty(value = "domain is a DNS name serviced by the ingress controller and is used to configure multiple features:   * For the LoadBalancerService endpoint publishing strategy, domain is   used to configure DNS records. See endpointPublishingStrategy.   * When using a generated default certificate, the certificate will be valid   for domain and its subdomains. See defaultCertificate.   * The value is published to individual Route statuses so that end-users   know where to target external DNS records.   domain must be unique among all IngressControllers, and cannot be updated.   If empty, defaults to ingress.config.openshift.io/cluster .spec.domain.")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public IoOpenshiftOperatorV1IngressControllerSpec endpointPublishingStrategy(IoOpenshiftOperatorV1IngressControllerSpecEndpointPublishingStrategy endpointPublishingStrategy) {
    this.endpointPublishingStrategy = endpointPublishingStrategy;
    return this;
  }

   /**
   * Get endpointPublishingStrategy
   * @return endpointPublishingStrategy
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftOperatorV1IngressControllerSpecEndpointPublishingStrategy getEndpointPublishingStrategy() {
    return endpointPublishingStrategy;
  }

  public void setEndpointPublishingStrategy(IoOpenshiftOperatorV1IngressControllerSpecEndpointPublishingStrategy endpointPublishingStrategy) {
    this.endpointPublishingStrategy = endpointPublishingStrategy;
  }

  public IoOpenshiftOperatorV1IngressControllerSpec namespaceSelector(IoOpenshiftOperatorV1IngressControllerSpecNamespaceSelector namespaceSelector) {
    this.namespaceSelector = namespaceSelector;
    return this;
  }

   /**
   * Get namespaceSelector
   * @return namespaceSelector
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftOperatorV1IngressControllerSpecNamespaceSelector getNamespaceSelector() {
    return namespaceSelector;
  }

  public void setNamespaceSelector(IoOpenshiftOperatorV1IngressControllerSpecNamespaceSelector namespaceSelector) {
    this.namespaceSelector = namespaceSelector;
  }

  public IoOpenshiftOperatorV1IngressControllerSpec nodePlacement(IoOpenshiftOperatorV1IngressControllerSpecNodePlacement nodePlacement) {
    this.nodePlacement = nodePlacement;
    return this;
  }

   /**
   * Get nodePlacement
   * @return nodePlacement
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftOperatorV1IngressControllerSpecNodePlacement getNodePlacement() {
    return nodePlacement;
  }

  public void setNodePlacement(IoOpenshiftOperatorV1IngressControllerSpecNodePlacement nodePlacement) {
    this.nodePlacement = nodePlacement;
  }

  public IoOpenshiftOperatorV1IngressControllerSpec replicas(Integer replicas) {
    this.replicas = replicas;
    return this;
  }

   /**
   * replicas is the desired number of ingress controller replicas. If unset, defaults to 2.
   * @return replicas
  **/
  @ApiModelProperty(value = "replicas is the desired number of ingress controller replicas. If unset, defaults to 2.")
  public Integer getReplicas() {
    return replicas;
  }

  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }

  public IoOpenshiftOperatorV1IngressControllerSpec routeSelector(IoOpenshiftOperatorV1IngressControllerSpecRouteSelector routeSelector) {
    this.routeSelector = routeSelector;
    return this;
  }

   /**
   * Get routeSelector
   * @return routeSelector
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftOperatorV1IngressControllerSpecRouteSelector getRouteSelector() {
    return routeSelector;
  }

  public void setRouteSelector(IoOpenshiftOperatorV1IngressControllerSpecRouteSelector routeSelector) {
    this.routeSelector = routeSelector;
  }

  public IoOpenshiftOperatorV1IngressControllerSpec tlsSecurityProfile(IoOpenshiftOperatorV1IngressControllerSpecTlsSecurityProfile tlsSecurityProfile) {
    this.tlsSecurityProfile = tlsSecurityProfile;
    return this;
  }

   /**
   * Get tlsSecurityProfile
   * @return tlsSecurityProfile
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftOperatorV1IngressControllerSpecTlsSecurityProfile getTlsSecurityProfile() {
    return tlsSecurityProfile;
  }

  public void setTlsSecurityProfile(IoOpenshiftOperatorV1IngressControllerSpecTlsSecurityProfile tlsSecurityProfile) {
    this.tlsSecurityProfile = tlsSecurityProfile;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftOperatorV1IngressControllerSpec ioOpenshiftOperatorV1IngressControllerSpec = (IoOpenshiftOperatorV1IngressControllerSpec) o;
    return Objects.equals(this.defaultCertificate, ioOpenshiftOperatorV1IngressControllerSpec.defaultCertificate) &&
        Objects.equals(this.domain, ioOpenshiftOperatorV1IngressControllerSpec.domain) &&
        Objects.equals(this.endpointPublishingStrategy, ioOpenshiftOperatorV1IngressControllerSpec.endpointPublishingStrategy) &&
        Objects.equals(this.namespaceSelector, ioOpenshiftOperatorV1IngressControllerSpec.namespaceSelector) &&
        Objects.equals(this.nodePlacement, ioOpenshiftOperatorV1IngressControllerSpec.nodePlacement) &&
        Objects.equals(this.replicas, ioOpenshiftOperatorV1IngressControllerSpec.replicas) &&
        Objects.equals(this.routeSelector, ioOpenshiftOperatorV1IngressControllerSpec.routeSelector) &&
        Objects.equals(this.tlsSecurityProfile, ioOpenshiftOperatorV1IngressControllerSpec.tlsSecurityProfile);
  }

  @Override
  public int hashCode() {
    return Objects.hash(defaultCertificate, domain, endpointPublishingStrategy, namespaceSelector, nodePlacement, replicas, routeSelector, tlsSecurityProfile);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftOperatorV1IngressControllerSpec {\n");
    
    sb.append("    defaultCertificate: ").append(toIndentedString(defaultCertificate)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    endpointPublishingStrategy: ").append(toIndentedString(endpointPublishingStrategy)).append("\n");
    sb.append("    namespaceSelector: ").append(toIndentedString(namespaceSelector)).append("\n");
    sb.append("    nodePlacement: ").append(toIndentedString(nodePlacement)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    routeSelector: ").append(toIndentedString(routeSelector)).append("\n");
    sb.append("    tlsSecurityProfile: ").append(toIndentedString(tlsSecurityProfile)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

