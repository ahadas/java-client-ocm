/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import open_cluster_management.io.ComGithubOpenshiftApiImageV1Image;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;

/**
 * ImageImportStatus describes the result of an image import.
 */
@ApiModel(description = "ImageImportStatus describes the result of an image import.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiImageV1ImageImportStatus {
  @SerializedName("image")
  private ComGithubOpenshiftApiImageV1Image image = null;

  @SerializedName("status")
  private IoK8sApimachineryPkgApisMetaV1Status status = null;

  @SerializedName("tag")
  private String tag = null;

  public ComGithubOpenshiftApiImageV1ImageImportStatus image(ComGithubOpenshiftApiImageV1Image image) {
    this.image = image;
    return this;
  }

   /**
   * Image is the metadata of that image, if the image was located
   * @return image
  **/
  @ApiModelProperty(value = "Image is the metadata of that image, if the image was located")
  public ComGithubOpenshiftApiImageV1Image getImage() {
    return image;
  }

  public void setImage(ComGithubOpenshiftApiImageV1Image image) {
    this.image = image;
  }

  public ComGithubOpenshiftApiImageV1ImageImportStatus status(IoK8sApimachineryPkgApisMetaV1Status status) {
    this.status = status;
    return this;
  }

   /**
   * Status is the status of the image import, including errors encountered while retrieving the image
   * @return status
  **/
  @ApiModelProperty(required = true, value = "Status is the status of the image import, including errors encountered while retrieving the image")
  public IoK8sApimachineryPkgApisMetaV1Status getStatus() {
    return status;
  }

  public void setStatus(IoK8sApimachineryPkgApisMetaV1Status status) {
    this.status = status;
  }

  public ComGithubOpenshiftApiImageV1ImageImportStatus tag(String tag) {
    this.tag = tag;
    return this;
  }

   /**
   * Tag is the tag this image was located under, if any
   * @return tag
  **/
  @ApiModelProperty(value = "Tag is the tag this image was located under, if any")
  public String getTag() {
    return tag;
  }

  public void setTag(String tag) {
    this.tag = tag;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiImageV1ImageImportStatus comGithubOpenshiftApiImageV1ImageImportStatus = (ComGithubOpenshiftApiImageV1ImageImportStatus) o;
    return Objects.equals(this.image, comGithubOpenshiftApiImageV1ImageImportStatus.image) &&
        Objects.equals(this.status, comGithubOpenshiftApiImageV1ImageImportStatus.status) &&
        Objects.equals(this.tag, comGithubOpenshiftApiImageV1ImageImportStatus.tag);
  }

  @Override
  public int hashCode() {
    return Objects.hash(image, status, tag);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiImageV1ImageImportStatus {\n");
    
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tag: ").append(toIndentedString(tag)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

