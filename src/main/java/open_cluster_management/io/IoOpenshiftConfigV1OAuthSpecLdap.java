/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import open_cluster_management.io.IoOpenshiftConfigV1OAuthSpecBasicAuthCa;
import open_cluster_management.io.IoOpenshiftConfigV1OAuthSpecLdapAttributes;
import open_cluster_management.io.IoOpenshiftConfigV1OAuthSpecLdapBindPassword;

/**
 * ldap enables user authentication using LDAP credentials
 */
@ApiModel(description = "ldap enables user authentication using LDAP credentials")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftConfigV1OAuthSpecLdap {
  @SerializedName("attributes")
  private IoOpenshiftConfigV1OAuthSpecLdapAttributes attributes = null;

  @SerializedName("bindDN")
  private String bindDN = null;

  @SerializedName("bindPassword")
  private IoOpenshiftConfigV1OAuthSpecLdapBindPassword bindPassword = null;

  @SerializedName("ca")
  private IoOpenshiftConfigV1OAuthSpecBasicAuthCa ca = null;

  @SerializedName("insecure")
  private Boolean insecure = null;

  @SerializedName("url")
  private String url = null;

  public IoOpenshiftConfigV1OAuthSpecLdap attributes(IoOpenshiftConfigV1OAuthSpecLdapAttributes attributes) {
    this.attributes = attributes;
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftConfigV1OAuthSpecLdapAttributes getAttributes() {
    return attributes;
  }

  public void setAttributes(IoOpenshiftConfigV1OAuthSpecLdapAttributes attributes) {
    this.attributes = attributes;
  }

  public IoOpenshiftConfigV1OAuthSpecLdap bindDN(String bindDN) {
    this.bindDN = bindDN;
    return this;
  }

   /**
   * bindDN is an optional DN to bind with during the search phase.
   * @return bindDN
  **/
  @ApiModelProperty(value = "bindDN is an optional DN to bind with during the search phase.")
  public String getBindDN() {
    return bindDN;
  }

  public void setBindDN(String bindDN) {
    this.bindDN = bindDN;
  }

  public IoOpenshiftConfigV1OAuthSpecLdap bindPassword(IoOpenshiftConfigV1OAuthSpecLdapBindPassword bindPassword) {
    this.bindPassword = bindPassword;
    return this;
  }

   /**
   * Get bindPassword
   * @return bindPassword
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftConfigV1OAuthSpecLdapBindPassword getBindPassword() {
    return bindPassword;
  }

  public void setBindPassword(IoOpenshiftConfigV1OAuthSpecLdapBindPassword bindPassword) {
    this.bindPassword = bindPassword;
  }

  public IoOpenshiftConfigV1OAuthSpecLdap ca(IoOpenshiftConfigV1OAuthSpecBasicAuthCa ca) {
    this.ca = ca;
    return this;
  }

   /**
   * Get ca
   * @return ca
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftConfigV1OAuthSpecBasicAuthCa getCa() {
    return ca;
  }

  public void setCa(IoOpenshiftConfigV1OAuthSpecBasicAuthCa ca) {
    this.ca = ca;
  }

  public IoOpenshiftConfigV1OAuthSpecLdap insecure(Boolean insecure) {
    this.insecure = insecure;
    return this;
  }

   /**
   * insecure, if true, indicates the connection should not use TLS WARNING: Should not be set to &#x60;true&#x60; with the URL scheme \&quot;ldaps://\&quot; as \&quot;ldaps://\&quot; URLs always          attempt to connect using TLS, even when &#x60;insecure&#x60; is set to &#x60;true&#x60; When &#x60;true&#x60;, \&quot;ldap://\&quot; URLS connect insecurely. When &#x60;false&#x60;, \&quot;ldap://\&quot; URLs are upgraded to a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.
   * @return insecure
  **/
  @ApiModelProperty(value = "insecure, if true, indicates the connection should not use TLS WARNING: Should not be set to `true` with the URL scheme \"ldaps://\" as \"ldaps://\" URLs always          attempt to connect using TLS, even when `insecure` is set to `true` When `true`, \"ldap://\" URLS connect insecurely. When `false`, \"ldap://\" URLs are upgraded to a TLS connection using StartTLS as specified in https://tools.ietf.org/html/rfc2830.")
  public Boolean isInsecure() {
    return insecure;
  }

  public void setInsecure(Boolean insecure) {
    this.insecure = insecure;
  }

  public IoOpenshiftConfigV1OAuthSpecLdap url(String url) {
    this.url = url;
    return this;
  }

   /**
   * url is an RFC 2255 URL which specifies the LDAP search parameters to use. The syntax of the URL is: ldap://host:port/basedn?attribute?scope?filter
   * @return url
  **/
  @ApiModelProperty(value = "url is an RFC 2255 URL which specifies the LDAP search parameters to use. The syntax of the URL is: ldap://host:port/basedn?attribute?scope?filter")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftConfigV1OAuthSpecLdap ioOpenshiftConfigV1OAuthSpecLdap = (IoOpenshiftConfigV1OAuthSpecLdap) o;
    return Objects.equals(this.attributes, ioOpenshiftConfigV1OAuthSpecLdap.attributes) &&
        Objects.equals(this.bindDN, ioOpenshiftConfigV1OAuthSpecLdap.bindDN) &&
        Objects.equals(this.bindPassword, ioOpenshiftConfigV1OAuthSpecLdap.bindPassword) &&
        Objects.equals(this.ca, ioOpenshiftConfigV1OAuthSpecLdap.ca) &&
        Objects.equals(this.insecure, ioOpenshiftConfigV1OAuthSpecLdap.insecure) &&
        Objects.equals(this.url, ioOpenshiftConfigV1OAuthSpecLdap.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, bindDN, bindPassword, ca, insecure, url);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftConfigV1OAuthSpecLdap {\n");
    
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    bindDN: ").append(toIndentedString(bindDN)).append("\n");
    sb.append("    bindPassword: ").append(toIndentedString(bindPassword)).append("\n");
    sb.append("    ca: ").append(toIndentedString(ca)).append("\n");
    sb.append("    insecure: ").append(toIndentedString(insecure)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

