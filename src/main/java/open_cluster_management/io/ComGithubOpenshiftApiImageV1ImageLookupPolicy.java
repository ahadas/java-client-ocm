/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace.
 */
@ApiModel(description = "ImageLookupPolicy describes how an image stream can be used to override the image references used by pods, builds, and other resources in a namespace.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiImageV1ImageLookupPolicy {
  @SerializedName("local")
  private Boolean local = null;

  public ComGithubOpenshiftApiImageV1ImageLookupPolicy local(Boolean local) {
    this.local = local;
    return this;
  }

   /**
   * local will change the docker short image references (like \&quot;mysql\&quot; or \&quot;php:latest\&quot;) on objects in this namespace to the image ID whenever they match this image stream, instead of reaching out to a remote registry. The name will be fully qualified to an image ID if found. The tag&#39;s referencePolicy is taken into account on the replaced value. Only works within the current namespace.
   * @return local
  **/
  @ApiModelProperty(required = true, value = "local will change the docker short image references (like \"mysql\" or \"php:latest\") on objects in this namespace to the image ID whenever they match this image stream, instead of reaching out to a remote registry. The name will be fully qualified to an image ID if found. The tag's referencePolicy is taken into account on the replaced value. Only works within the current namespace.")
  public Boolean isLocal() {
    return local;
  }

  public void setLocal(Boolean local) {
    this.local = local;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiImageV1ImageLookupPolicy comGithubOpenshiftApiImageV1ImageLookupPolicy = (ComGithubOpenshiftApiImageV1ImageLookupPolicy) o;
    return Objects.equals(this.local, comGithubOpenshiftApiImageV1ImageLookupPolicy.local);
  }

  @Override
  public int hashCode() {
    return Objects.hash(local);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiImageV1ImageLookupPolicy {\n");
    
    sb.append("    local: ").append(toIndentedString(local)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

