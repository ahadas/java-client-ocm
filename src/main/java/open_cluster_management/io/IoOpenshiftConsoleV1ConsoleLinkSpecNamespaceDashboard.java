/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboardNamespaceSelector;

/**
 * namespaceDashboard holds information about namespaces in which the dashboard link should appear, and it is applicable only when location is set to NamespaceDashboard. If not specified, the link will appear in all namespaces.
 */
@ApiModel(description = "namespaceDashboard holds information about namespaces in which the dashboard link should appear, and it is applicable only when location is set to NamespaceDashboard. If not specified, the link will appear in all namespaces.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard {
  @SerializedName("namespaceSelector")
  private IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboardNamespaceSelector namespaceSelector = null;

  @SerializedName("namespaces")
  private List<String> namespaces = null;

  public IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard namespaceSelector(IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboardNamespaceSelector namespaceSelector) {
    this.namespaceSelector = namespaceSelector;
    return this;
  }

   /**
   * Get namespaceSelector
   * @return namespaceSelector
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboardNamespaceSelector getNamespaceSelector() {
    return namespaceSelector;
  }

  public void setNamespaceSelector(IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboardNamespaceSelector namespaceSelector) {
    this.namespaceSelector = namespaceSelector;
  }

  public IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard namespaces(List<String> namespaces) {
    this.namespaces = namespaces;
    return this;
  }

  public IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard addNamespacesItem(String namespacesItem) {
    if (this.namespaces == null) {
      this.namespaces = new ArrayList<>();
    }
    this.namespaces.add(namespacesItem);
    return this;
  }

   /**
   * namespaces is an array of namespace names in which the dashboard link should appear.
   * @return namespaces
  **/
  @ApiModelProperty(value = "namespaces is an array of namespace names in which the dashboard link should appear.")
  public List<String> getNamespaces() {
    return namespaces;
  }

  public void setNamespaces(List<String> namespaces) {
    this.namespaces = namespaces;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard ioOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard = (IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard) o;
    return Objects.equals(this.namespaceSelector, ioOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard.namespaceSelector) &&
        Objects.equals(this.namespaces, ioOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard.namespaces);
  }

  @Override
  public int hashCode() {
    return Objects.hash(namespaceSelector, namespaces);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftConsoleV1ConsoleLinkSpecNamespaceDashboard {\n");
    
    sb.append("    namespaceSelector: ").append(toIndentedString(namespaceSelector)).append("\n");
    sb.append("    namespaces: ").append(toIndentedString(namespaces)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

