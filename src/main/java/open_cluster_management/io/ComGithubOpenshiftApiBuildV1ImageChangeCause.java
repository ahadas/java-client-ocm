/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import open_cluster_management.io.IoK8sApiCoreV1ObjectReference;

/**
 * ImageChangeCause contains information about the image that triggered a build
 */
@ApiModel(description = "ImageChangeCause contains information about the image that triggered a build")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiBuildV1ImageChangeCause {
  @SerializedName("fromRef")
  private IoK8sApiCoreV1ObjectReference fromRef = null;

  @SerializedName("imageID")
  private String imageID = null;

  public ComGithubOpenshiftApiBuildV1ImageChangeCause fromRef(IoK8sApiCoreV1ObjectReference fromRef) {
    this.fromRef = fromRef;
    return this;
  }

   /**
   * fromRef contains detailed information about an image that triggered a build.
   * @return fromRef
  **/
  @ApiModelProperty(value = "fromRef contains detailed information about an image that triggered a build.")
  public IoK8sApiCoreV1ObjectReference getFromRef() {
    return fromRef;
  }

  public void setFromRef(IoK8sApiCoreV1ObjectReference fromRef) {
    this.fromRef = fromRef;
  }

  public ComGithubOpenshiftApiBuildV1ImageChangeCause imageID(String imageID) {
    this.imageID = imageID;
    return this;
  }

   /**
   * imageID is the ID of the image that triggered a a new build.
   * @return imageID
  **/
  @ApiModelProperty(value = "imageID is the ID of the image that triggered a a new build.")
  public String getImageID() {
    return imageID;
  }

  public void setImageID(String imageID) {
    this.imageID = imageID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiBuildV1ImageChangeCause comGithubOpenshiftApiBuildV1ImageChangeCause = (ComGithubOpenshiftApiBuildV1ImageChangeCause) o;
    return Objects.equals(this.fromRef, comGithubOpenshiftApiBuildV1ImageChangeCause.fromRef) &&
        Objects.equals(this.imageID, comGithubOpenshiftApiBuildV1ImageChangeCause.imageID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromRef, imageID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiBuildV1ImageChangeCause {\n");
    
    sb.append("    fromRef: ").append(toIndentedString(fromRef)).append("\n");
    sb.append("    imageID: ").append(toIndentedString(imageID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

