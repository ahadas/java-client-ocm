/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * status holds observed values from the cluster. They may not be overridden.
 */
@ApiModel(description = "status holds observed values from the cluster. They may not be overridden.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftConfigV1ProxyStatus {
  @SerializedName("httpProxy")
  private String httpProxy = null;

  @SerializedName("httpsProxy")
  private String httpsProxy = null;

  @SerializedName("noProxy")
  private String noProxy = null;

  public IoOpenshiftConfigV1ProxyStatus httpProxy(String httpProxy) {
    this.httpProxy = httpProxy;
    return this;
  }

   /**
   * httpProxy is the URL of the proxy for HTTP requests.
   * @return httpProxy
  **/
  @ApiModelProperty(value = "httpProxy is the URL of the proxy for HTTP requests.")
  public String getHttpProxy() {
    return httpProxy;
  }

  public void setHttpProxy(String httpProxy) {
    this.httpProxy = httpProxy;
  }

  public IoOpenshiftConfigV1ProxyStatus httpsProxy(String httpsProxy) {
    this.httpsProxy = httpsProxy;
    return this;
  }

   /**
   * httpsProxy is the URL of the proxy for HTTPS requests.
   * @return httpsProxy
  **/
  @ApiModelProperty(value = "httpsProxy is the URL of the proxy for HTTPS requests.")
  public String getHttpsProxy() {
    return httpsProxy;
  }

  public void setHttpsProxy(String httpsProxy) {
    this.httpsProxy = httpsProxy;
  }

  public IoOpenshiftConfigV1ProxyStatus noProxy(String noProxy) {
    this.noProxy = noProxy;
    return this;
  }

   /**
   * noProxy is a comma-separated list of hostnames and/or CIDRs for which the proxy should not be used.
   * @return noProxy
  **/
  @ApiModelProperty(value = "noProxy is a comma-separated list of hostnames and/or CIDRs for which the proxy should not be used.")
  public String getNoProxy() {
    return noProxy;
  }

  public void setNoProxy(String noProxy) {
    this.noProxy = noProxy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftConfigV1ProxyStatus ioOpenshiftConfigV1ProxyStatus = (IoOpenshiftConfigV1ProxyStatus) o;
    return Objects.equals(this.httpProxy, ioOpenshiftConfigV1ProxyStatus.httpProxy) &&
        Objects.equals(this.httpsProxy, ioOpenshiftConfigV1ProxyStatus.httpsProxy) &&
        Objects.equals(this.noProxy, ioOpenshiftConfigV1ProxyStatus.noProxy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(httpProxy, httpsProxy, noProxy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftConfigV1ProxyStatus {\n");
    
    sb.append("    httpProxy: ").append(toIndentedString(httpProxy)).append("\n");
    sb.append("    httpsProxy: ").append(toIndentedString(httpsProxy)).append("\n");
    sb.append("    noProxy: ").append(toIndentedString(noProxy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

