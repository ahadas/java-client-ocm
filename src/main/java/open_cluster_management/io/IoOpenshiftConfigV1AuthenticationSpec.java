/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoOpenshiftConfigV1AuthenticationSpecOauthMetadata;
import open_cluster_management.io.IoOpenshiftConfigV1AuthenticationSpecWebhookTokenAuthenticators;

/**
 * spec holds user settable values for configuration
 */
@ApiModel(description = "spec holds user settable values for configuration")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftConfigV1AuthenticationSpec {
  @SerializedName("oauthMetadata")
  private IoOpenshiftConfigV1AuthenticationSpecOauthMetadata oauthMetadata = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("webhookTokenAuthenticators")
  private List<IoOpenshiftConfigV1AuthenticationSpecWebhookTokenAuthenticators> webhookTokenAuthenticators = null;

  public IoOpenshiftConfigV1AuthenticationSpec oauthMetadata(IoOpenshiftConfigV1AuthenticationSpecOauthMetadata oauthMetadata) {
    this.oauthMetadata = oauthMetadata;
    return this;
  }

   /**
   * Get oauthMetadata
   * @return oauthMetadata
  **/
  @ApiModelProperty(value = "")
  public IoOpenshiftConfigV1AuthenticationSpecOauthMetadata getOauthMetadata() {
    return oauthMetadata;
  }

  public void setOauthMetadata(IoOpenshiftConfigV1AuthenticationSpecOauthMetadata oauthMetadata) {
    this.oauthMetadata = oauthMetadata;
  }

  public IoOpenshiftConfigV1AuthenticationSpec type(String type) {
    this.type = type;
    return this;
  }

   /**
   * type identifies the cluster managed, user facing authentication mode in use. Specifically, it manages the component that responds to login attempts. The default is IntegratedOAuth.
   * @return type
  **/
  @ApiModelProperty(value = "type identifies the cluster managed, user facing authentication mode in use. Specifically, it manages the component that responds to login attempts. The default is IntegratedOAuth.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public IoOpenshiftConfigV1AuthenticationSpec webhookTokenAuthenticators(List<IoOpenshiftConfigV1AuthenticationSpecWebhookTokenAuthenticators> webhookTokenAuthenticators) {
    this.webhookTokenAuthenticators = webhookTokenAuthenticators;
    return this;
  }

  public IoOpenshiftConfigV1AuthenticationSpec addWebhookTokenAuthenticatorsItem(IoOpenshiftConfigV1AuthenticationSpecWebhookTokenAuthenticators webhookTokenAuthenticatorsItem) {
    if (this.webhookTokenAuthenticators == null) {
      this.webhookTokenAuthenticators = new ArrayList<>();
    }
    this.webhookTokenAuthenticators.add(webhookTokenAuthenticatorsItem);
    return this;
  }

   /**
   * webhookTokenAuthenticators configures remote token reviewers. These remote authentication webhooks can be used to verify bearer tokens via the tokenreviews.authentication.k8s.io REST API.  This is required to honor bearer tokens that are provisioned by an external authentication service. The namespace for these secrets is openshift-config.
   * @return webhookTokenAuthenticators
  **/
  @ApiModelProperty(value = "webhookTokenAuthenticators configures remote token reviewers. These remote authentication webhooks can be used to verify bearer tokens via the tokenreviews.authentication.k8s.io REST API.  This is required to honor bearer tokens that are provisioned by an external authentication service. The namespace for these secrets is openshift-config.")
  public List<IoOpenshiftConfigV1AuthenticationSpecWebhookTokenAuthenticators> getWebhookTokenAuthenticators() {
    return webhookTokenAuthenticators;
  }

  public void setWebhookTokenAuthenticators(List<IoOpenshiftConfigV1AuthenticationSpecWebhookTokenAuthenticators> webhookTokenAuthenticators) {
    this.webhookTokenAuthenticators = webhookTokenAuthenticators;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftConfigV1AuthenticationSpec ioOpenshiftConfigV1AuthenticationSpec = (IoOpenshiftConfigV1AuthenticationSpec) o;
    return Objects.equals(this.oauthMetadata, ioOpenshiftConfigV1AuthenticationSpec.oauthMetadata) &&
        Objects.equals(this.type, ioOpenshiftConfigV1AuthenticationSpec.type) &&
        Objects.equals(this.webhookTokenAuthenticators, ioOpenshiftConfigV1AuthenticationSpec.webhookTokenAuthenticators);
  }

  @Override
  public int hashCode() {
    return Objects.hash(oauthMetadata, type, webhookTokenAuthenticators);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftConfigV1AuthenticationSpec {\n");
    
    sb.append("    oauthMetadata: ").append(toIndentedString(oauthMetadata)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    webhookTokenAuthenticators: ").append(toIndentedString(webhookTokenAuthenticators)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

