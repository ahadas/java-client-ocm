/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1CustomDeploymentStrategyParams;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1RecreateDeploymentStrategyParams;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1RollingDeploymentStrategyParams;
import open_cluster_management.io.IoK8sApiCoreV1ResourceRequirements;

/**
 * DeploymentStrategy describes how to perform a deployment.
 */
@ApiModel(description = "DeploymentStrategy describes how to perform a deployment.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiAppsV1DeploymentStrategy {
  @SerializedName("activeDeadlineSeconds")
  private Long activeDeadlineSeconds = null;

  @SerializedName("annotations")
  private Map<String, String> annotations = null;

  @SerializedName("customParams")
  private ComGithubOpenshiftApiAppsV1CustomDeploymentStrategyParams customParams = null;

  @SerializedName("labels")
  private Map<String, String> labels = null;

  @SerializedName("recreateParams")
  private ComGithubOpenshiftApiAppsV1RecreateDeploymentStrategyParams recreateParams = null;

  @SerializedName("resources")
  private IoK8sApiCoreV1ResourceRequirements resources = null;

  @SerializedName("rollingParams")
  private ComGithubOpenshiftApiAppsV1RollingDeploymentStrategyParams rollingParams = null;

  @SerializedName("type")
  private String type = null;

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy activeDeadlineSeconds(Long activeDeadlineSeconds) {
    this.activeDeadlineSeconds = activeDeadlineSeconds;
    return this;
  }

   /**
   * ActiveDeadlineSeconds is the duration in seconds that the deployer pods for this deployment config may be active on a node before the system actively tries to terminate them.
   * @return activeDeadlineSeconds
  **/
  @ApiModelProperty(value = "ActiveDeadlineSeconds is the duration in seconds that the deployer pods for this deployment config may be active on a node before the system actively tries to terminate them.")
  public Long getActiveDeadlineSeconds() {
    return activeDeadlineSeconds;
  }

  public void setActiveDeadlineSeconds(Long activeDeadlineSeconds) {
    this.activeDeadlineSeconds = activeDeadlineSeconds;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy annotations(Map<String, String> annotations) {
    this.annotations = annotations;
    return this;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy putAnnotationsItem(String key, String annotationsItem) {
    if (this.annotations == null) {
      this.annotations = new HashMap<>();
    }
    this.annotations.put(key, annotationsItem);
    return this;
  }

   /**
   * Annotations is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.
   * @return annotations
  **/
  @ApiModelProperty(value = "Annotations is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.")
  public Map<String, String> getAnnotations() {
    return annotations;
  }

  public void setAnnotations(Map<String, String> annotations) {
    this.annotations = annotations;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy customParams(ComGithubOpenshiftApiAppsV1CustomDeploymentStrategyParams customParams) {
    this.customParams = customParams;
    return this;
  }

   /**
   * CustomParams are the input to the Custom deployment strategy, and may also be specified for the Recreate and Rolling strategies to customize the execution process that runs the deployment.
   * @return customParams
  **/
  @ApiModelProperty(value = "CustomParams are the input to the Custom deployment strategy, and may also be specified for the Recreate and Rolling strategies to customize the execution process that runs the deployment.")
  public ComGithubOpenshiftApiAppsV1CustomDeploymentStrategyParams getCustomParams() {
    return customParams;
  }

  public void setCustomParams(ComGithubOpenshiftApiAppsV1CustomDeploymentStrategyParams customParams) {
    this.customParams = customParams;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy labels(Map<String, String> labels) {
    this.labels = labels;
    return this;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy putLabelsItem(String key, String labelsItem) {
    if (this.labels == null) {
      this.labels = new HashMap<>();
    }
    this.labels.put(key, labelsItem);
    return this;
  }

   /**
   * Labels is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.
   * @return labels
  **/
  @ApiModelProperty(value = "Labels is a set of key, value pairs added to custom deployer and lifecycle pre/post hook pods.")
  public Map<String, String> getLabels() {
    return labels;
  }

  public void setLabels(Map<String, String> labels) {
    this.labels = labels;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy recreateParams(ComGithubOpenshiftApiAppsV1RecreateDeploymentStrategyParams recreateParams) {
    this.recreateParams = recreateParams;
    return this;
  }

   /**
   * RecreateParams are the input to the Recreate deployment strategy.
   * @return recreateParams
  **/
  @ApiModelProperty(value = "RecreateParams are the input to the Recreate deployment strategy.")
  public ComGithubOpenshiftApiAppsV1RecreateDeploymentStrategyParams getRecreateParams() {
    return recreateParams;
  }

  public void setRecreateParams(ComGithubOpenshiftApiAppsV1RecreateDeploymentStrategyParams recreateParams) {
    this.recreateParams = recreateParams;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy resources(IoK8sApiCoreV1ResourceRequirements resources) {
    this.resources = resources;
    return this;
  }

   /**
   * Resources contains resource requirements to execute the deployment and any hooks.
   * @return resources
  **/
  @ApiModelProperty(value = "Resources contains resource requirements to execute the deployment and any hooks.")
  public IoK8sApiCoreV1ResourceRequirements getResources() {
    return resources;
  }

  public void setResources(IoK8sApiCoreV1ResourceRequirements resources) {
    this.resources = resources;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy rollingParams(ComGithubOpenshiftApiAppsV1RollingDeploymentStrategyParams rollingParams) {
    this.rollingParams = rollingParams;
    return this;
  }

   /**
   * RollingParams are the input to the Rolling deployment strategy.
   * @return rollingParams
  **/
  @ApiModelProperty(value = "RollingParams are the input to the Rolling deployment strategy.")
  public ComGithubOpenshiftApiAppsV1RollingDeploymentStrategyParams getRollingParams() {
    return rollingParams;
  }

  public void setRollingParams(ComGithubOpenshiftApiAppsV1RollingDeploymentStrategyParams rollingParams) {
    this.rollingParams = rollingParams;
  }

  public ComGithubOpenshiftApiAppsV1DeploymentStrategy type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type is the name of a deployment strategy.
   * @return type
  **/
  @ApiModelProperty(value = "Type is the name of a deployment strategy.")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiAppsV1DeploymentStrategy comGithubOpenshiftApiAppsV1DeploymentStrategy = (ComGithubOpenshiftApiAppsV1DeploymentStrategy) o;
    return Objects.equals(this.activeDeadlineSeconds, comGithubOpenshiftApiAppsV1DeploymentStrategy.activeDeadlineSeconds) &&
        Objects.equals(this.annotations, comGithubOpenshiftApiAppsV1DeploymentStrategy.annotations) &&
        Objects.equals(this.customParams, comGithubOpenshiftApiAppsV1DeploymentStrategy.customParams) &&
        Objects.equals(this.labels, comGithubOpenshiftApiAppsV1DeploymentStrategy.labels) &&
        Objects.equals(this.recreateParams, comGithubOpenshiftApiAppsV1DeploymentStrategy.recreateParams) &&
        Objects.equals(this.resources, comGithubOpenshiftApiAppsV1DeploymentStrategy.resources) &&
        Objects.equals(this.rollingParams, comGithubOpenshiftApiAppsV1DeploymentStrategy.rollingParams) &&
        Objects.equals(this.type, comGithubOpenshiftApiAppsV1DeploymentStrategy.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeDeadlineSeconds, annotations, customParams, labels, recreateParams, resources, rollingParams, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiAppsV1DeploymentStrategy {\n");
    
    sb.append("    activeDeadlineSeconds: ").append(toIndentedString(activeDeadlineSeconds)).append("\n");
    sb.append("    annotations: ").append(toIndentedString(annotations)).append("\n");
    sb.append("    customParams: ").append(toIndentedString(customParams)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    recreateParams: ").append(toIndentedString(recreateParams)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    rollingParams: ").append(toIndentedString(rollingParams)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

