/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * swift represents configuration that uses OpenStack Object Storage.
 */
@ApiModel(description = "swift represents configuration that uses OpenStack Object Storage.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift {
  @SerializedName("authURL")
  private String authURL = null;

  @SerializedName("authVersion")
  private String authVersion = null;

  @SerializedName("container")
  private String container = null;

  @SerializedName("domain")
  private String domain = null;

  @SerializedName("domainID")
  private String domainID = null;

  @SerializedName("regionName")
  private String regionName = null;

  @SerializedName("tenant")
  private String tenant = null;

  @SerializedName("tenantID")
  private String tenantID = null;

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift authURL(String authURL) {
    this.authURL = authURL;
    return this;
  }

   /**
   * authURL defines the URL for obtaining an authentication token.
   * @return authURL
  **/
  @ApiModelProperty(value = "authURL defines the URL for obtaining an authentication token.")
  public String getAuthURL() {
    return authURL;
  }

  public void setAuthURL(String authURL) {
    this.authURL = authURL;
  }

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift authVersion(String authVersion) {
    this.authVersion = authVersion;
    return this;
  }

   /**
   * authVersion specifies the OpenStack Auth&#39;s version.
   * @return authVersion
  **/
  @ApiModelProperty(value = "authVersion specifies the OpenStack Auth's version.")
  public String getAuthVersion() {
    return authVersion;
  }

  public void setAuthVersion(String authVersion) {
    this.authVersion = authVersion;
  }

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift container(String container) {
    this.container = container;
    return this;
  }

   /**
   * container defines the name of Swift container where to store the registry&#39;s data.
   * @return container
  **/
  @ApiModelProperty(value = "container defines the name of Swift container where to store the registry's data.")
  public String getContainer() {
    return container;
  }

  public void setContainer(String container) {
    this.container = container;
  }

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift domain(String domain) {
    this.domain = domain;
    return this;
  }

   /**
   * domain specifies Openstack&#39;s domain name for Identity v3 API.
   * @return domain
  **/
  @ApiModelProperty(value = "domain specifies Openstack's domain name for Identity v3 API.")
  public String getDomain() {
    return domain;
  }

  public void setDomain(String domain) {
    this.domain = domain;
  }

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift domainID(String domainID) {
    this.domainID = domainID;
    return this;
  }

   /**
   * domainID specifies Openstack&#39;s domain id for Identity v3 API.
   * @return domainID
  **/
  @ApiModelProperty(value = "domainID specifies Openstack's domain id for Identity v3 API.")
  public String getDomainID() {
    return domainID;
  }

  public void setDomainID(String domainID) {
    this.domainID = domainID;
  }

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift regionName(String regionName) {
    this.regionName = regionName;
    return this;
  }

   /**
   * regionName defines Openstack&#39;s region in which container exists.
   * @return regionName
  **/
  @ApiModelProperty(value = "regionName defines Openstack's region in which container exists.")
  public String getRegionName() {
    return regionName;
  }

  public void setRegionName(String regionName) {
    this.regionName = regionName;
  }

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift tenant(String tenant) {
    this.tenant = tenant;
    return this;
  }

   /**
   * tenant defines Openstack tenant name to be used by registry.
   * @return tenant
  **/
  @ApiModelProperty(value = "tenant defines Openstack tenant name to be used by registry.")
  public String getTenant() {
    return tenant;
  }

  public void setTenant(String tenant) {
    this.tenant = tenant;
  }

  public IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift tenantID(String tenantID) {
    this.tenantID = tenantID;
    return this;
  }

   /**
   * tenant defines Openstack tenant id to be used by registry.
   * @return tenantID
  **/
  @ApiModelProperty(value = "tenant defines Openstack tenant id to be used by registry.")
  public String getTenantID() {
    return tenantID;
  }

  public void setTenantID(String tenantID) {
    this.tenantID = tenantID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift = (IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift) o;
    return Objects.equals(this.authURL, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.authURL) &&
        Objects.equals(this.authVersion, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.authVersion) &&
        Objects.equals(this.container, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.container) &&
        Objects.equals(this.domain, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.domain) &&
        Objects.equals(this.domainID, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.domainID) &&
        Objects.equals(this.regionName, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.regionName) &&
        Objects.equals(this.tenant, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.tenant) &&
        Objects.equals(this.tenantID, ioOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift.tenantID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authURL, authVersion, container, domain, domainID, regionName, tenant, tenantID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftOperatorImageregistryV1ConfigSpecStorageSwift {\n");
    
    sb.append("    authURL: ").append(toIndentedString(authURL)).append("\n");
    sb.append("    authVersion: ").append(toIndentedString(authVersion)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    domain: ").append(toIndentedString(domain)).append("\n");
    sb.append("    domainID: ").append(toIndentedString(domainID)).append("\n");
    sb.append("    regionName: ").append(toIndentedString(regionName)).append("\n");
    sb.append("    tenant: ").append(toIndentedString(tenant)).append("\n");
    sb.append("    tenantID: ").append(toIndentedString(tenantID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

