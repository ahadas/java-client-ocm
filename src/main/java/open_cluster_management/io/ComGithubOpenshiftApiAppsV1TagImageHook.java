/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import open_cluster_management.io.IoK8sApiCoreV1ObjectReference;

/**
 * TagImageHook is a request to tag the image in a particular container onto an ImageStreamTag.
 */
@ApiModel(description = "TagImageHook is a request to tag the image in a particular container onto an ImageStreamTag.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiAppsV1TagImageHook {
  @SerializedName("containerName")
  private String containerName = null;

  @SerializedName("to")
  private IoK8sApiCoreV1ObjectReference to = null;

  public ComGithubOpenshiftApiAppsV1TagImageHook containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

   /**
   * ContainerName is the name of a container in the deployment config whose image value will be used as the source of the tag. If there is only a single container this value will be defaulted to the name of that container.
   * @return containerName
  **/
  @ApiModelProperty(required = true, value = "ContainerName is the name of a container in the deployment config whose image value will be used as the source of the tag. If there is only a single container this value will be defaulted to the name of that container.")
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }

  public ComGithubOpenshiftApiAppsV1TagImageHook to(IoK8sApiCoreV1ObjectReference to) {
    this.to = to;
    return this;
  }

   /**
   * To is the target ImageStreamTag to set the container&#39;s image onto.
   * @return to
  **/
  @ApiModelProperty(required = true, value = "To is the target ImageStreamTag to set the container's image onto.")
  public IoK8sApiCoreV1ObjectReference getTo() {
    return to;
  }

  public void setTo(IoK8sApiCoreV1ObjectReference to) {
    this.to = to;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiAppsV1TagImageHook comGithubOpenshiftApiAppsV1TagImageHook = (ComGithubOpenshiftApiAppsV1TagImageHook) o;
    return Objects.equals(this.containerName, comGithubOpenshiftApiAppsV1TagImageHook.containerName) &&
        Objects.equals(this.to, comGithubOpenshiftApiAppsV1TagImageHook.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerName, to);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiAppsV1TagImageHook {\n");
    
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

