/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1ObjectMeta;

/**
 * SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container. For historical reasons SCC was exposed under the core Kubernetes API group. That exposure is deprecated and will be removed in a future release - users should instead use the security.openshift.io group to manage SecurityContextConstraints.
 */
@ApiModel(description = "SecurityContextConstraints governs the ability to make requests that affect the SecurityContext that will be applied to a container. For historical reasons SCC was exposed under the core Kubernetes API group. That exposure is deprecated and will be removed in a future release - users should instead use the security.openshift.io group to manage SecurityContextConstraints.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftSecurityV1SecurityContextConstraints {
  @SerializedName("allowHostDirVolumePlugin")
  private Boolean allowHostDirVolumePlugin = null;

  @SerializedName("allowHostIPC")
  private Boolean allowHostIPC = null;

  @SerializedName("allowHostNetwork")
  private Boolean allowHostNetwork = null;

  @SerializedName("allowHostPID")
  private Boolean allowHostPID = null;

  @SerializedName("allowHostPorts")
  private Boolean allowHostPorts = null;

  @SerializedName("allowPrivilegeEscalation")
  private Object allowPrivilegeEscalation = null;

  @SerializedName("allowPrivilegedContainer")
  private Boolean allowPrivilegedContainer = null;

  @SerializedName("allowedCapabilities")
  private Object allowedCapabilities = null;

  @SerializedName("allowedFlexVolumes")
  private Object allowedFlexVolumes = null;

  @SerializedName("allowedUnsafeSysctls")
  private Object allowedUnsafeSysctls = null;

  @SerializedName("apiVersion")
  private String apiVersion = null;

  @SerializedName("defaultAddCapabilities")
  private Object defaultAddCapabilities = null;

  @SerializedName("defaultAllowPrivilegeEscalation")
  private Object defaultAllowPrivilegeEscalation = null;

  @SerializedName("forbiddenSysctls")
  private Object forbiddenSysctls = null;

  @SerializedName("fsGroup")
  private Object fsGroup = null;

  @SerializedName("groups")
  private Object groups = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("metadata")
  private IoK8sApimachineryPkgApisMetaV1ObjectMeta metadata = null;

  @SerializedName("priority")
  private Object priority = null;

  @SerializedName("readOnlyRootFilesystem")
  private Boolean readOnlyRootFilesystem = null;

  @SerializedName("requiredDropCapabilities")
  private Object requiredDropCapabilities = null;

  @SerializedName("runAsUser")
  private Object runAsUser = null;

  @SerializedName("seLinuxContext")
  private Object seLinuxContext = null;

  @SerializedName("seccompProfiles")
  private Object seccompProfiles = null;

  @SerializedName("supplementalGroups")
  private Object supplementalGroups = null;

  @SerializedName("users")
  private Object users = null;

  @SerializedName("volumes")
  private Object volumes = null;

  public IoOpenshiftSecurityV1SecurityContextConstraints allowHostDirVolumePlugin(Boolean allowHostDirVolumePlugin) {
    this.allowHostDirVolumePlugin = allowHostDirVolumePlugin;
    return this;
  }

   /**
   * AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin
   * @return allowHostDirVolumePlugin
  **/
  @ApiModelProperty(required = true, value = "AllowHostDirVolumePlugin determines if the policy allow containers to use the HostDir volume plugin")
  public Boolean isAllowHostDirVolumePlugin() {
    return allowHostDirVolumePlugin;
  }

  public void setAllowHostDirVolumePlugin(Boolean allowHostDirVolumePlugin) {
    this.allowHostDirVolumePlugin = allowHostDirVolumePlugin;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowHostIPC(Boolean allowHostIPC) {
    this.allowHostIPC = allowHostIPC;
    return this;
  }

   /**
   * AllowHostIPC determines if the policy allows host ipc in the containers.
   * @return allowHostIPC
  **/
  @ApiModelProperty(required = true, value = "AllowHostIPC determines if the policy allows host ipc in the containers.")
  public Boolean isAllowHostIPC() {
    return allowHostIPC;
  }

  public void setAllowHostIPC(Boolean allowHostIPC) {
    this.allowHostIPC = allowHostIPC;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowHostNetwork(Boolean allowHostNetwork) {
    this.allowHostNetwork = allowHostNetwork;
    return this;
  }

   /**
   * AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.
   * @return allowHostNetwork
  **/
  @ApiModelProperty(required = true, value = "AllowHostNetwork determines if the policy allows the use of HostNetwork in the pod spec.")
  public Boolean isAllowHostNetwork() {
    return allowHostNetwork;
  }

  public void setAllowHostNetwork(Boolean allowHostNetwork) {
    this.allowHostNetwork = allowHostNetwork;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowHostPID(Boolean allowHostPID) {
    this.allowHostPID = allowHostPID;
    return this;
  }

   /**
   * AllowHostPID determines if the policy allows host pid in the containers.
   * @return allowHostPID
  **/
  @ApiModelProperty(required = true, value = "AllowHostPID determines if the policy allows host pid in the containers.")
  public Boolean isAllowHostPID() {
    return allowHostPID;
  }

  public void setAllowHostPID(Boolean allowHostPID) {
    this.allowHostPID = allowHostPID;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowHostPorts(Boolean allowHostPorts) {
    this.allowHostPorts = allowHostPorts;
    return this;
  }

   /**
   * AllowHostPorts determines if the policy allows host ports in the containers.
   * @return allowHostPorts
  **/
  @ApiModelProperty(required = true, value = "AllowHostPorts determines if the policy allows host ports in the containers.")
  public Boolean isAllowHostPorts() {
    return allowHostPorts;
  }

  public void setAllowHostPorts(Boolean allowHostPorts) {
    this.allowHostPorts = allowHostPorts;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowPrivilegeEscalation(Object allowPrivilegeEscalation) {
    this.allowPrivilegeEscalation = allowPrivilegeEscalation;
    return this;
  }

   /**
   * AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.
   * @return allowPrivilegeEscalation
  **/
  @ApiModelProperty(value = "AllowPrivilegeEscalation determines if a pod can request to allow privilege escalation. If unspecified, defaults to true.")
  public Object getAllowPrivilegeEscalation() {
    return allowPrivilegeEscalation;
  }

  public void setAllowPrivilegeEscalation(Object allowPrivilegeEscalation) {
    this.allowPrivilegeEscalation = allowPrivilegeEscalation;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowPrivilegedContainer(Boolean allowPrivilegedContainer) {
    this.allowPrivilegedContainer = allowPrivilegedContainer;
    return this;
  }

   /**
   * AllowPrivilegedContainer determines if a container can request to be run as privileged.
   * @return allowPrivilegedContainer
  **/
  @ApiModelProperty(required = true, value = "AllowPrivilegedContainer determines if a container can request to be run as privileged.")
  public Boolean isAllowPrivilegedContainer() {
    return allowPrivilegedContainer;
  }

  public void setAllowPrivilegedContainer(Boolean allowPrivilegedContainer) {
    this.allowPrivilegedContainer = allowPrivilegedContainer;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowedCapabilities(Object allowedCapabilities) {
    this.allowedCapabilities = allowedCapabilities;
    return this;
  }

   /**
   * AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author&#39;s discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use &#39;*&#39;.
   * @return allowedCapabilities
  **/
  @ApiModelProperty(required = true, value = "AllowedCapabilities is a list of capabilities that can be requested to add to the container. Capabilities in this field maybe added at the pod author's discretion. You must not list a capability in both AllowedCapabilities and RequiredDropCapabilities. To allow all capabilities you may use '*'.")
  public Object getAllowedCapabilities() {
    return allowedCapabilities;
  }

  public void setAllowedCapabilities(Object allowedCapabilities) {
    this.allowedCapabilities = allowedCapabilities;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowedFlexVolumes(Object allowedFlexVolumes) {
    this.allowedFlexVolumes = allowedFlexVolumes;
    return this;
  }

   /**
   * AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \&quot;Volumes\&quot; field.
   * @return allowedFlexVolumes
  **/
  @ApiModelProperty(value = "AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty or nil indicates that all Flexvolumes may be used.  This parameter is effective only when the usage of the Flexvolumes is allowed in the \"Volumes\" field.")
  public Object getAllowedFlexVolumes() {
    return allowedFlexVolumes;
  }

  public void setAllowedFlexVolumes(Object allowedFlexVolumes) {
    this.allowedFlexVolumes = allowedFlexVolumes;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints allowedUnsafeSysctls(Object allowedUnsafeSysctls) {
    this.allowedUnsafeSysctls = allowedUnsafeSysctls;
    return this;
  }

   /**
   * AllowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \&quot;*\&quot; in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.   Examples: e.g. \&quot;foo/_*\&quot; allows \&quot;foo/bar\&quot;, \&quot;foo/baz\&quot;, etc. e.g. \&quot;foo.*\&quot; allows \&quot;foo.bar\&quot;, \&quot;foo.baz\&quot;, etc.
   * @return allowedUnsafeSysctls
  **/
  @ApiModelProperty(value = "AllowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.   Examples: e.g. \"foo/_*\" allows \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" allows \"foo.bar\", \"foo.baz\", etc.")
  public Object getAllowedUnsafeSysctls() {
    return allowedUnsafeSysctls;
  }

  public void setAllowedUnsafeSysctls(Object allowedUnsafeSysctls) {
    this.allowedUnsafeSysctls = allowedUnsafeSysctls;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   * @return apiVersion
  **/
  @ApiModelProperty(value = "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints defaultAddCapabilities(Object defaultAddCapabilities) {
    this.defaultAddCapabilities = defaultAddCapabilities;
    return this;
  }

   /**
   * DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.
   * @return defaultAddCapabilities
  **/
  @ApiModelProperty(required = true, value = "DefaultAddCapabilities is the default set of capabilities that will be added to the container unless the pod spec specifically drops the capability.  You may not list a capabiility in both DefaultAddCapabilities and RequiredDropCapabilities.")
  public Object getDefaultAddCapabilities() {
    return defaultAddCapabilities;
  }

  public void setDefaultAddCapabilities(Object defaultAddCapabilities) {
    this.defaultAddCapabilities = defaultAddCapabilities;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints defaultAllowPrivilegeEscalation(Object defaultAllowPrivilegeEscalation) {
    this.defaultAllowPrivilegeEscalation = defaultAllowPrivilegeEscalation;
    return this;
  }

   /**
   * DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.
   * @return defaultAllowPrivilegeEscalation
  **/
  @ApiModelProperty(value = "DefaultAllowPrivilegeEscalation controls the default setting for whether a process can gain more privileges than its parent process.")
  public Object getDefaultAllowPrivilegeEscalation() {
    return defaultAllowPrivilegeEscalation;
  }

  public void setDefaultAllowPrivilegeEscalation(Object defaultAllowPrivilegeEscalation) {
    this.defaultAllowPrivilegeEscalation = defaultAllowPrivilegeEscalation;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints forbiddenSysctls(Object forbiddenSysctls) {
    this.forbiddenSysctls = forbiddenSysctls;
    return this;
  }

   /**
   * ForbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \&quot;*\&quot; in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.   Examples: e.g. \&quot;foo/_*\&quot; forbids \&quot;foo/bar\&quot;, \&quot;foo/baz\&quot;, etc. e.g. \&quot;foo.*\&quot; forbids \&quot;foo.bar\&quot;, \&quot;foo.baz\&quot;, etc.
   * @return forbiddenSysctls
  **/
  @ApiModelProperty(value = "ForbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in \"*\" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.   Examples: e.g. \"foo/_*\" forbids \"foo/bar\", \"foo/baz\", etc. e.g. \"foo.*\" forbids \"foo.bar\", \"foo.baz\", etc.")
  public Object getForbiddenSysctls() {
    return forbiddenSysctls;
  }

  public void setForbiddenSysctls(Object forbiddenSysctls) {
    this.forbiddenSysctls = forbiddenSysctls;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints fsGroup(Object fsGroup) {
    this.fsGroup = fsGroup;
    return this;
  }

   /**
   * FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.
   * @return fsGroup
  **/
  @ApiModelProperty(value = "FSGroup is the strategy that will dictate what fs group is used by the SecurityContext.")
  public Object getFsGroup() {
    return fsGroup;
  }

  public void setFsGroup(Object fsGroup) {
    this.fsGroup = fsGroup;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints groups(Object groups) {
    this.groups = groups;
    return this;
  }

   /**
   * The groups that have permission to use this security context constraints
   * @return groups
  **/
  @ApiModelProperty(value = "The groups that have permission to use this security context constraints")
  public Object getGroups() {
    return groups;
  }

  public void setGroups(Object groups) {
    this.groups = groups;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @return kind
  **/
  @ApiModelProperty(value = "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints metadata(IoK8sApimachineryPkgApisMetaV1ObjectMeta metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Standard object&#39;s metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata")
  public IoK8sApimachineryPkgApisMetaV1ObjectMeta getMetadata() {
    return metadata;
  }

  public void setMetadata(IoK8sApimachineryPkgApisMetaV1ObjectMeta metadata) {
    this.metadata = metadata;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints priority(Object priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority. An unset value is considered a 0 priority. If scores for multiple SCCs are equal they will be sorted from most restrictive to least restrictive. If both priorities and restrictions are equal the SCCs will be sorted by name.
   * @return priority
  **/
  @ApiModelProperty(required = true, value = "Priority influences the sort order of SCCs when evaluating which SCCs to try first for a given pod request based on access in the Users and Groups fields.  The higher the int, the higher priority. An unset value is considered a 0 priority. If scores for multiple SCCs are equal they will be sorted from most restrictive to least restrictive. If both priorities and restrictions are equal the SCCs will be sorted by name.")
  public Object getPriority() {
    return priority;
  }

  public void setPriority(Object priority) {
    this.priority = priority;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints readOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
    return this;
  }

   /**
   * ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.
   * @return readOnlyRootFilesystem
  **/
  @ApiModelProperty(required = true, value = "ReadOnlyRootFilesystem when set to true will force containers to run with a read only root file system.  If the container specifically requests to run with a non-read only root file system the SCC should deny the pod. If set to false the container may run with a read only root file system if it wishes but it will not be forced to.")
  public Boolean isReadOnlyRootFilesystem() {
    return readOnlyRootFilesystem;
  }

  public void setReadOnlyRootFilesystem(Boolean readOnlyRootFilesystem) {
    this.readOnlyRootFilesystem = readOnlyRootFilesystem;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints requiredDropCapabilities(Object requiredDropCapabilities) {
    this.requiredDropCapabilities = requiredDropCapabilities;
    return this;
  }

   /**
   * RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.
   * @return requiredDropCapabilities
  **/
  @ApiModelProperty(required = true, value = "RequiredDropCapabilities are the capabilities that will be dropped from the container.  These are required to be dropped and cannot be added.")
  public Object getRequiredDropCapabilities() {
    return requiredDropCapabilities;
  }

  public void setRequiredDropCapabilities(Object requiredDropCapabilities) {
    this.requiredDropCapabilities = requiredDropCapabilities;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints runAsUser(Object runAsUser) {
    this.runAsUser = runAsUser;
    return this;
  }

   /**
   * RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.
   * @return runAsUser
  **/
  @ApiModelProperty(value = "RunAsUser is the strategy that will dictate what RunAsUser is used in the SecurityContext.")
  public Object getRunAsUser() {
    return runAsUser;
  }

  public void setRunAsUser(Object runAsUser) {
    this.runAsUser = runAsUser;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints seLinuxContext(Object seLinuxContext) {
    this.seLinuxContext = seLinuxContext;
    return this;
  }

   /**
   * SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.
   * @return seLinuxContext
  **/
  @ApiModelProperty(value = "SELinuxContext is the strategy that will dictate what labels will be set in the SecurityContext.")
  public Object getSeLinuxContext() {
    return seLinuxContext;
  }

  public void setSeLinuxContext(Object seLinuxContext) {
    this.seLinuxContext = seLinuxContext;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints seccompProfiles(Object seccompProfiles) {
    this.seccompProfiles = seccompProfiles;
    return this;
  }

   /**
   * SeccompProfiles lists the allowed profiles that may be set for the pod or container&#39;s seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container. The wildcard &#39;*&#39; may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.
   * @return seccompProfiles
  **/
  @ApiModelProperty(value = "SeccompProfiles lists the allowed profiles that may be set for the pod or container's seccomp annotations.  An unset (nil) or empty value means that no profiles may be specifid by the pod or container. The wildcard '*' may be used to allow all profiles.  When used to generate a value for a pod the first non-wildcard profile will be used as the default.")
  public Object getSeccompProfiles() {
    return seccompProfiles;
  }

  public void setSeccompProfiles(Object seccompProfiles) {
    this.seccompProfiles = seccompProfiles;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints supplementalGroups(Object supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
    return this;
  }

   /**
   * SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.
   * @return supplementalGroups
  **/
  @ApiModelProperty(value = "SupplementalGroups is the strategy that will dictate what supplemental groups are used by the SecurityContext.")
  public Object getSupplementalGroups() {
    return supplementalGroups;
  }

  public void setSupplementalGroups(Object supplementalGroups) {
    this.supplementalGroups = supplementalGroups;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints users(Object users) {
    this.users = users;
    return this;
  }

   /**
   * The users who have permissions to use this security context constraints
   * @return users
  **/
  @ApiModelProperty(value = "The users who have permissions to use this security context constraints")
  public Object getUsers() {
    return users;
  }

  public void setUsers(Object users) {
    this.users = users;
  }

  public IoOpenshiftSecurityV1SecurityContextConstraints volumes(Object volumes) {
    this.volumes = volumes;
    return this;
  }

   /**
   * Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \&quot;*\&quot;. To allow no volumes, set to [\&quot;none\&quot;].
   * @return volumes
  **/
  @ApiModelProperty(required = true, value = "Volumes is a white list of allowed volume plugins.  FSType corresponds directly with the field names of a VolumeSource (azureFile, configMap, emptyDir).  To allow all volumes you may use \"*\". To allow no volumes, set to [\"none\"].")
  public Object getVolumes() {
    return volumes;
  }

  public void setVolumes(Object volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftSecurityV1SecurityContextConstraints ioOpenshiftSecurityV1SecurityContextConstraints = (IoOpenshiftSecurityV1SecurityContextConstraints) o;
    return Objects.equals(this.allowHostDirVolumePlugin, ioOpenshiftSecurityV1SecurityContextConstraints.allowHostDirVolumePlugin) &&
        Objects.equals(this.allowHostIPC, ioOpenshiftSecurityV1SecurityContextConstraints.allowHostIPC) &&
        Objects.equals(this.allowHostNetwork, ioOpenshiftSecurityV1SecurityContextConstraints.allowHostNetwork) &&
        Objects.equals(this.allowHostPID, ioOpenshiftSecurityV1SecurityContextConstraints.allowHostPID) &&
        Objects.equals(this.allowHostPorts, ioOpenshiftSecurityV1SecurityContextConstraints.allowHostPorts) &&
        Objects.equals(this.allowPrivilegeEscalation, ioOpenshiftSecurityV1SecurityContextConstraints.allowPrivilegeEscalation) &&
        Objects.equals(this.allowPrivilegedContainer, ioOpenshiftSecurityV1SecurityContextConstraints.allowPrivilegedContainer) &&
        Objects.equals(this.allowedCapabilities, ioOpenshiftSecurityV1SecurityContextConstraints.allowedCapabilities) &&
        Objects.equals(this.allowedFlexVolumes, ioOpenshiftSecurityV1SecurityContextConstraints.allowedFlexVolumes) &&
        Objects.equals(this.allowedUnsafeSysctls, ioOpenshiftSecurityV1SecurityContextConstraints.allowedUnsafeSysctls) &&
        Objects.equals(this.apiVersion, ioOpenshiftSecurityV1SecurityContextConstraints.apiVersion) &&
        Objects.equals(this.defaultAddCapabilities, ioOpenshiftSecurityV1SecurityContextConstraints.defaultAddCapabilities) &&
        Objects.equals(this.defaultAllowPrivilegeEscalation, ioOpenshiftSecurityV1SecurityContextConstraints.defaultAllowPrivilegeEscalation) &&
        Objects.equals(this.forbiddenSysctls, ioOpenshiftSecurityV1SecurityContextConstraints.forbiddenSysctls) &&
        Objects.equals(this.fsGroup, ioOpenshiftSecurityV1SecurityContextConstraints.fsGroup) &&
        Objects.equals(this.groups, ioOpenshiftSecurityV1SecurityContextConstraints.groups) &&
        Objects.equals(this.kind, ioOpenshiftSecurityV1SecurityContextConstraints.kind) &&
        Objects.equals(this.metadata, ioOpenshiftSecurityV1SecurityContextConstraints.metadata) &&
        Objects.equals(this.priority, ioOpenshiftSecurityV1SecurityContextConstraints.priority) &&
        Objects.equals(this.readOnlyRootFilesystem, ioOpenshiftSecurityV1SecurityContextConstraints.readOnlyRootFilesystem) &&
        Objects.equals(this.requiredDropCapabilities, ioOpenshiftSecurityV1SecurityContextConstraints.requiredDropCapabilities) &&
        Objects.equals(this.runAsUser, ioOpenshiftSecurityV1SecurityContextConstraints.runAsUser) &&
        Objects.equals(this.seLinuxContext, ioOpenshiftSecurityV1SecurityContextConstraints.seLinuxContext) &&
        Objects.equals(this.seccompProfiles, ioOpenshiftSecurityV1SecurityContextConstraints.seccompProfiles) &&
        Objects.equals(this.supplementalGroups, ioOpenshiftSecurityV1SecurityContextConstraints.supplementalGroups) &&
        Objects.equals(this.users, ioOpenshiftSecurityV1SecurityContextConstraints.users) &&
        Objects.equals(this.volumes, ioOpenshiftSecurityV1SecurityContextConstraints.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowHostDirVolumePlugin, allowHostIPC, allowHostNetwork, allowHostPID, allowHostPorts, allowPrivilegeEscalation, allowPrivilegedContainer, allowedCapabilities, allowedFlexVolumes, allowedUnsafeSysctls, apiVersion, defaultAddCapabilities, defaultAllowPrivilegeEscalation, forbiddenSysctls, fsGroup, groups, kind, metadata, priority, readOnlyRootFilesystem, requiredDropCapabilities, runAsUser, seLinuxContext, seccompProfiles, supplementalGroups, users, volumes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftSecurityV1SecurityContextConstraints {\n");
    
    sb.append("    allowHostDirVolumePlugin: ").append(toIndentedString(allowHostDirVolumePlugin)).append("\n");
    sb.append("    allowHostIPC: ").append(toIndentedString(allowHostIPC)).append("\n");
    sb.append("    allowHostNetwork: ").append(toIndentedString(allowHostNetwork)).append("\n");
    sb.append("    allowHostPID: ").append(toIndentedString(allowHostPID)).append("\n");
    sb.append("    allowHostPorts: ").append(toIndentedString(allowHostPorts)).append("\n");
    sb.append("    allowPrivilegeEscalation: ").append(toIndentedString(allowPrivilegeEscalation)).append("\n");
    sb.append("    allowPrivilegedContainer: ").append(toIndentedString(allowPrivilegedContainer)).append("\n");
    sb.append("    allowedCapabilities: ").append(toIndentedString(allowedCapabilities)).append("\n");
    sb.append("    allowedFlexVolumes: ").append(toIndentedString(allowedFlexVolumes)).append("\n");
    sb.append("    allowedUnsafeSysctls: ").append(toIndentedString(allowedUnsafeSysctls)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    defaultAddCapabilities: ").append(toIndentedString(defaultAddCapabilities)).append("\n");
    sb.append("    defaultAllowPrivilegeEscalation: ").append(toIndentedString(defaultAllowPrivilegeEscalation)).append("\n");
    sb.append("    forbiddenSysctls: ").append(toIndentedString(forbiddenSysctls)).append("\n");
    sb.append("    fsGroup: ").append(toIndentedString(fsGroup)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    readOnlyRootFilesystem: ").append(toIndentedString(readOnlyRootFilesystem)).append("\n");
    sb.append("    requiredDropCapabilities: ").append(toIndentedString(requiredDropCapabilities)).append("\n");
    sb.append("    runAsUser: ").append(toIndentedString(runAsUser)).append("\n");
    sb.append("    seLinuxContext: ").append(toIndentedString(seLinuxContext)).append("\n");
    sb.append("    seccompProfiles: ").append(toIndentedString(seccompProfiles)).append("\n");
    sb.append("    supplementalGroups: ").append(toIndentedString(supplementalGroups)).append("\n");
    sb.append("    users: ").append(toIndentedString(users)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

