/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1ObjectMetaV2;

/**
 * OAuthAccessToken describes an OAuth access token
 */
@ApiModel(description = "OAuthAccessToken describes an OAuth access token")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiOauthV1OAuthAccessToken {
  @SerializedName("apiVersion")
  private String apiVersion = null;

  @SerializedName("authorizeToken")
  private String authorizeToken = null;

  @SerializedName("clientName")
  private String clientName = null;

  @SerializedName("expiresIn")
  private Long expiresIn = null;

  @SerializedName("inactivityTimeoutSeconds")
  private Integer inactivityTimeoutSeconds = null;

  @SerializedName("kind")
  private String kind = null;

  @SerializedName("metadata")
  private IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata = null;

  @SerializedName("redirectURI")
  private String redirectURI = null;

  @SerializedName("refreshToken")
  private String refreshToken = null;

  @SerializedName("scopes")
  private List<String> scopes = null;

  @SerializedName("userName")
  private String userName = null;

  @SerializedName("userUID")
  private String userUID = null;

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken apiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   * @return apiVersion
  **/
  @ApiModelProperty(value = "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources")
  public String getApiVersion() {
    return apiVersion;
  }

  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken authorizeToken(String authorizeToken) {
    this.authorizeToken = authorizeToken;
    return this;
  }

   /**
   * AuthorizeToken contains the token that authorized this token
   * @return authorizeToken
  **/
  @ApiModelProperty(value = "AuthorizeToken contains the token that authorized this token")
  public String getAuthorizeToken() {
    return authorizeToken;
  }

  public void setAuthorizeToken(String authorizeToken) {
    this.authorizeToken = authorizeToken;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken clientName(String clientName) {
    this.clientName = clientName;
    return this;
  }

   /**
   * ClientName references the client that created this token.
   * @return clientName
  **/
  @ApiModelProperty(value = "ClientName references the client that created this token.")
  public String getClientName() {
    return clientName;
  }

  public void setClientName(String clientName) {
    this.clientName = clientName;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken expiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * ExpiresIn is the seconds from CreationTime before this token expires.
   * @return expiresIn
  **/
  @ApiModelProperty(value = "ExpiresIn is the seconds from CreationTime before this token expires.")
  public Long getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(Long expiresIn) {
    this.expiresIn = expiresIn;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken inactivityTimeoutSeconds(Integer inactivityTimeoutSeconds) {
    this.inactivityTimeoutSeconds = inactivityTimeoutSeconds;
    return this;
  }

   /**
   * InactivityTimeoutSeconds is the value in seconds, from the CreationTimestamp, after which this token can no longer be used. The value is automatically incremented when the token is used.
   * @return inactivityTimeoutSeconds
  **/
  @ApiModelProperty(value = "InactivityTimeoutSeconds is the value in seconds, from the CreationTimestamp, after which this token can no longer be used. The value is automatically incremented when the token is used.")
  public Integer getInactivityTimeoutSeconds() {
    return inactivityTimeoutSeconds;
  }

  public void setInactivityTimeoutSeconds(Integer inactivityTimeoutSeconds) {
    this.inactivityTimeoutSeconds = inactivityTimeoutSeconds;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken kind(String kind) {
    this.kind = kind;
    return this;
  }

   /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @return kind
  **/
  @ApiModelProperty(value = "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds")
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken metadata(IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 getMetadata() {
    return metadata;
  }

  public void setMetadata(IoK8sApimachineryPkgApisMetaV1ObjectMetaV2 metadata) {
    this.metadata = metadata;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken redirectURI(String redirectURI) {
    this.redirectURI = redirectURI;
    return this;
  }

   /**
   * RedirectURI is the redirection associated with the token.
   * @return redirectURI
  **/
  @ApiModelProperty(value = "RedirectURI is the redirection associated with the token.")
  public String getRedirectURI() {
    return redirectURI;
  }

  public void setRedirectURI(String redirectURI) {
    this.redirectURI = redirectURI;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * RefreshToken is the value by which this token can be renewed. Can be blank.
   * @return refreshToken
  **/
  @ApiModelProperty(value = "RefreshToken is the value by which this token can be renewed. Can be blank.")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * Scopes is an array of the requested scopes.
   * @return scopes
  **/
  @ApiModelProperty(value = "Scopes is an array of the requested scopes.")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * UserName is the user name associated with this token
   * @return userName
  **/
  @ApiModelProperty(value = "UserName is the user name associated with this token")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }

  public ComGithubOpenshiftApiOauthV1OAuthAccessToken userUID(String userUID) {
    this.userUID = userUID;
    return this;
  }

   /**
   * UserUID is the unique UID associated with this token
   * @return userUID
  **/
  @ApiModelProperty(value = "UserUID is the unique UID associated with this token")
  public String getUserUID() {
    return userUID;
  }

  public void setUserUID(String userUID) {
    this.userUID = userUID;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiOauthV1OAuthAccessToken comGithubOpenshiftApiOauthV1OAuthAccessToken = (ComGithubOpenshiftApiOauthV1OAuthAccessToken) o;
    return Objects.equals(this.apiVersion, comGithubOpenshiftApiOauthV1OAuthAccessToken.apiVersion) &&
        Objects.equals(this.authorizeToken, comGithubOpenshiftApiOauthV1OAuthAccessToken.authorizeToken) &&
        Objects.equals(this.clientName, comGithubOpenshiftApiOauthV1OAuthAccessToken.clientName) &&
        Objects.equals(this.expiresIn, comGithubOpenshiftApiOauthV1OAuthAccessToken.expiresIn) &&
        Objects.equals(this.inactivityTimeoutSeconds, comGithubOpenshiftApiOauthV1OAuthAccessToken.inactivityTimeoutSeconds) &&
        Objects.equals(this.kind, comGithubOpenshiftApiOauthV1OAuthAccessToken.kind) &&
        Objects.equals(this.metadata, comGithubOpenshiftApiOauthV1OAuthAccessToken.metadata) &&
        Objects.equals(this.redirectURI, comGithubOpenshiftApiOauthV1OAuthAccessToken.redirectURI) &&
        Objects.equals(this.refreshToken, comGithubOpenshiftApiOauthV1OAuthAccessToken.refreshToken) &&
        Objects.equals(this.scopes, comGithubOpenshiftApiOauthV1OAuthAccessToken.scopes) &&
        Objects.equals(this.userName, comGithubOpenshiftApiOauthV1OAuthAccessToken.userName) &&
        Objects.equals(this.userUID, comGithubOpenshiftApiOauthV1OAuthAccessToken.userUID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiVersion, authorizeToken, clientName, expiresIn, inactivityTimeoutSeconds, kind, metadata, redirectURI, refreshToken, scopes, userName, userUID);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiOauthV1OAuthAccessToken {\n");
    
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    authorizeToken: ").append(toIndentedString(authorizeToken)).append("\n");
    sb.append("    clientName: ").append(toIndentedString(clientName)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    inactivityTimeoutSeconds: ").append(toIndentedString(inactivityTimeoutSeconds)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    redirectURI: ").append(toIndentedString(redirectURI)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    userUID: ").append(toIndentedString(userUID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

