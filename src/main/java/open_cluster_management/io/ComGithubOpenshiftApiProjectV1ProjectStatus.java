/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoK8sApiCoreV1NamespaceCondition;

/**
 * ProjectStatus is information about the current status of a Project
 */
@ApiModel(description = "ProjectStatus is information about the current status of a Project")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiProjectV1ProjectStatus {
  @SerializedName("conditions")
  private List<IoK8sApiCoreV1NamespaceCondition> conditions = null;

  @SerializedName("phase")
  private String phase = null;

  public ComGithubOpenshiftApiProjectV1ProjectStatus conditions(List<IoK8sApiCoreV1NamespaceCondition> conditions) {
    this.conditions = conditions;
    return this;
  }

  public ComGithubOpenshiftApiProjectV1ProjectStatus addConditionsItem(IoK8sApiCoreV1NamespaceCondition conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Represents the latest available observations of the project current state.
   * @return conditions
  **/
  @ApiModelProperty(value = "Represents the latest available observations of the project current state.")
  public List<IoK8sApiCoreV1NamespaceCondition> getConditions() {
    return conditions;
  }

  public void setConditions(List<IoK8sApiCoreV1NamespaceCondition> conditions) {
    this.conditions = conditions;
  }

  public ComGithubOpenshiftApiProjectV1ProjectStatus phase(String phase) {
    this.phase = phase;
    return this;
  }

   /**
   * Phase is the current lifecycle phase of the project
   * @return phase
  **/
  @ApiModelProperty(value = "Phase is the current lifecycle phase of the project")
  public String getPhase() {
    return phase;
  }

  public void setPhase(String phase) {
    this.phase = phase;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiProjectV1ProjectStatus comGithubOpenshiftApiProjectV1ProjectStatus = (ComGithubOpenshiftApiProjectV1ProjectStatus) o;
    return Objects.equals(this.conditions, comGithubOpenshiftApiProjectV1ProjectStatus.conditions) &&
        Objects.equals(this.phase, comGithubOpenshiftApiProjectV1ProjectStatus.phase);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditions, phase);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiProjectV1ProjectStatus {\n");
    
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

