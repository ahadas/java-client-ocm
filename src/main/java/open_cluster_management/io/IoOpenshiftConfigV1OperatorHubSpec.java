/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.IoOpenshiftConfigV1OperatorHubSpecSources;

/**
 * OperatorHubSpec defines the desired state of OperatorHub
 */
@ApiModel(description = "OperatorHubSpec defines the desired state of OperatorHub")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class IoOpenshiftConfigV1OperatorHubSpec {
  @SerializedName("disableAllDefaultSources")
  private Boolean disableAllDefaultSources = null;

  @SerializedName("sources")
  private List<IoOpenshiftConfigV1OperatorHubSpecSources> sources = null;

  public IoOpenshiftConfigV1OperatorHubSpec disableAllDefaultSources(Boolean disableAllDefaultSources) {
    this.disableAllDefaultSources = disableAllDefaultSources;
    return this;
  }

   /**
   * disableAllDefaultSources allows you to disable all the default hub sources. If this is true, a specific entry in sources can be used to enable a default source. If this is false, a specific entry in sources can be used to disable or enable a default source.
   * @return disableAllDefaultSources
  **/
  @ApiModelProperty(value = "disableAllDefaultSources allows you to disable all the default hub sources. If this is true, a specific entry in sources can be used to enable a default source. If this is false, a specific entry in sources can be used to disable or enable a default source.")
  public Boolean isDisableAllDefaultSources() {
    return disableAllDefaultSources;
  }

  public void setDisableAllDefaultSources(Boolean disableAllDefaultSources) {
    this.disableAllDefaultSources = disableAllDefaultSources;
  }

  public IoOpenshiftConfigV1OperatorHubSpec sources(List<IoOpenshiftConfigV1OperatorHubSpecSources> sources) {
    this.sources = sources;
    return this;
  }

  public IoOpenshiftConfigV1OperatorHubSpec addSourcesItem(IoOpenshiftConfigV1OperatorHubSpecSources sourcesItem) {
    if (this.sources == null) {
      this.sources = new ArrayList<>();
    }
    this.sources.add(sourcesItem);
    return this;
  }

   /**
   * sources is the list of default hub sources and their configuration. If the list is empty, it implies that the default hub sources are enabled on the cluster unless disableAllDefaultSources is true. If disableAllDefaultSources is true and sources is not empty, the configuration present in sources will take precedence. The list of default hub sources and their current state will always be reflected in the status block.
   * @return sources
  **/
  @ApiModelProperty(value = "sources is the list of default hub sources and their configuration. If the list is empty, it implies that the default hub sources are enabled on the cluster unless disableAllDefaultSources is true. If disableAllDefaultSources is true and sources is not empty, the configuration present in sources will take precedence. The list of default hub sources and their current state will always be reflected in the status block.")
  public List<IoOpenshiftConfigV1OperatorHubSpecSources> getSources() {
    return sources;
  }

  public void setSources(List<IoOpenshiftConfigV1OperatorHubSpecSources> sources) {
    this.sources = sources;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoOpenshiftConfigV1OperatorHubSpec ioOpenshiftConfigV1OperatorHubSpec = (IoOpenshiftConfigV1OperatorHubSpec) o;
    return Objects.equals(this.disableAllDefaultSources, ioOpenshiftConfigV1OperatorHubSpec.disableAllDefaultSources) &&
        Objects.equals(this.sources, ioOpenshiftConfigV1OperatorHubSpec.sources);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disableAllDefaultSources, sources);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoOpenshiftConfigV1OperatorHubSpec {\n");
    
    sb.append("    disableAllDefaultSources: ").append(toIndentedString(disableAllDefaultSources)).append("\n");
    sb.append("    sources: ").append(toIndentedString(sources)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

