/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1AppLink;
import open_cluster_management.io.ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageChannel;

/**
 * PackageManifestStatus represents the current status of the PackageManifest
 */
@ApiModel(description = "PackageManifestStatus represents the current status of the PackageManifest")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus {
  @SerializedName("catalogSource")
  private String catalogSource = null;

  @SerializedName("catalogSourceDisplayName")
  private String catalogSourceDisplayName = null;

  @SerializedName("catalogSourceNamespace")
  private String catalogSourceNamespace = null;

  @SerializedName("catalogSourcePublisher")
  private String catalogSourcePublisher = null;

  @SerializedName("channels")
  private List<ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageChannel> channels = new ArrayList<>();

  @SerializedName("defaultChannel")
  private String defaultChannel = null;

  @SerializedName("packageName")
  private String packageName = null;

  @SerializedName("provider")
  private ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1AppLink provider = null;

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus catalogSource(String catalogSource) {
    this.catalogSource = catalogSource;
    return this;
  }

   /**
   * CatalogSource is the name of the CatalogSource this package belongs to
   * @return catalogSource
  **/
  @ApiModelProperty(required = true, value = "CatalogSource is the name of the CatalogSource this package belongs to")
  public String getCatalogSource() {
    return catalogSource;
  }

  public void setCatalogSource(String catalogSource) {
    this.catalogSource = catalogSource;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus catalogSourceDisplayName(String catalogSourceDisplayName) {
    this.catalogSourceDisplayName = catalogSourceDisplayName;
    return this;
  }

   /**
   * Get catalogSourceDisplayName
   * @return catalogSourceDisplayName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCatalogSourceDisplayName() {
    return catalogSourceDisplayName;
  }

  public void setCatalogSourceDisplayName(String catalogSourceDisplayName) {
    this.catalogSourceDisplayName = catalogSourceDisplayName;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus catalogSourceNamespace(String catalogSourceNamespace) {
    this.catalogSourceNamespace = catalogSourceNamespace;
    return this;
  }

   /**
   *   CatalogSourceNamespace is the namespace of the owning CatalogSource
   * @return catalogSourceNamespace
  **/
  @ApiModelProperty(required = true, value = "  CatalogSourceNamespace is the namespace of the owning CatalogSource")
  public String getCatalogSourceNamespace() {
    return catalogSourceNamespace;
  }

  public void setCatalogSourceNamespace(String catalogSourceNamespace) {
    this.catalogSourceNamespace = catalogSourceNamespace;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus catalogSourcePublisher(String catalogSourcePublisher) {
    this.catalogSourcePublisher = catalogSourcePublisher;
    return this;
  }

   /**
   * Get catalogSourcePublisher
   * @return catalogSourcePublisher
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCatalogSourcePublisher() {
    return catalogSourcePublisher;
  }

  public void setCatalogSourcePublisher(String catalogSourcePublisher) {
    this.catalogSourcePublisher = catalogSourcePublisher;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus channels(List<ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageChannel> channels) {
    this.channels = channels;
    return this;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus addChannelsItem(ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageChannel channelsItem) {
    this.channels.add(channelsItem);
    return this;
  }

   /**
   * Channels are the declared channels for the package, ala &#x60;stable&#x60; or &#x60;alpha&#x60;.
   * @return channels
  **/
  @ApiModelProperty(required = true, value = "Channels are the declared channels for the package, ala `stable` or `alpha`.")
  public List<ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageChannel> getChannels() {
    return channels;
  }

  public void setChannels(List<ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageChannel> channels) {
    this.channels = channels;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus defaultChannel(String defaultChannel) {
    this.defaultChannel = defaultChannel;
    return this;
  }

   /**
   * DefaultChannel is, if specified, the name of the default channel for the package. The default channel will be installed if no other channel is explicitly given. If the package has a single channel, then that channel is implicitly the default.
   * @return defaultChannel
  **/
  @ApiModelProperty(required = true, value = "DefaultChannel is, if specified, the name of the default channel for the package. The default channel will be installed if no other channel is explicitly given. If the package has a single channel, then that channel is implicitly the default.")
  public String getDefaultChannel() {
    return defaultChannel;
  }

  public void setDefaultChannel(String defaultChannel) {
    this.defaultChannel = defaultChannel;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus packageName(String packageName) {
    this.packageName = packageName;
    return this;
  }

   /**
   * PackageName is the name of the overall package, ala &#x60;etcd&#x60;.
   * @return packageName
  **/
  @ApiModelProperty(required = true, value = "PackageName is the name of the overall package, ala `etcd`.")
  public String getPackageName() {
    return packageName;
  }

  public void setPackageName(String packageName) {
    this.packageName = packageName;
  }

  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus provider(ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1AppLink provider) {
    this.provider = provider;
    return this;
  }

   /**
   * Provider is the provider of the PackageManifest&#39;s default CSV
   * @return provider
  **/
  @ApiModelProperty(value = "Provider is the provider of the PackageManifest's default CSV")
  public ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1AppLink getProvider() {
    return provider;
  }

  public void setProvider(ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1AppLink provider) {
    this.provider = provider;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus = (ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus) o;
    return Objects.equals(this.catalogSource, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.catalogSource) &&
        Objects.equals(this.catalogSourceDisplayName, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.catalogSourceDisplayName) &&
        Objects.equals(this.catalogSourceNamespace, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.catalogSourceNamespace) &&
        Objects.equals(this.catalogSourcePublisher, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.catalogSourcePublisher) &&
        Objects.equals(this.channels, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.channels) &&
        Objects.equals(this.defaultChannel, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.defaultChannel) &&
        Objects.equals(this.packageName, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.packageName) &&
        Objects.equals(this.provider, comGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus.provider);
  }

  @Override
  public int hashCode() {
    return Objects.hash(catalogSource, catalogSourceDisplayName, catalogSourceNamespace, catalogSourcePublisher, channels, defaultChannel, packageName, provider);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOperatorFrameworkOperatorLifecycleManagerPkgPackageServerApisOperatorsV1PackageManifestStatus {\n");
    
    sb.append("    catalogSource: ").append(toIndentedString(catalogSource)).append("\n");
    sb.append("    catalogSourceDisplayName: ").append(toIndentedString(catalogSourceDisplayName)).append("\n");
    sb.append("    catalogSourceNamespace: ").append(toIndentedString(catalogSourceNamespace)).append("\n");
    sb.append("    catalogSourcePublisher: ").append(toIndentedString(catalogSourcePublisher)).append("\n");
    sb.append("    channels: ").append(toIndentedString(channels)).append("\n");
    sb.append("    defaultChannel: ").append(toIndentedString(defaultChannel)).append("\n");
    sb.append("    packageName: ").append(toIndentedString(packageName)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

