/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * TemplateInstanceRequester holds the identity of an agent requesting a template instantiation.
 */
@ApiModel(description = "TemplateInstanceRequester holds the identity of an agent requesting a template instantiation.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester {
  @SerializedName("extra")
  private Map<String, List<String>> extra = null;

  @SerializedName("groups")
  private List<String> groups = null;

  @SerializedName("uid")
  private String uid = null;

  @SerializedName("username")
  private String username = null;

  public ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester extra(Map<String, List<String>> extra) {
    this.extra = extra;
    return this;
  }

  public ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester putExtraItem(String key, List<String> extraItem) {
    if (this.extra == null) {
      this.extra = new HashMap<>();
    }
    this.extra.put(key, extraItem);
    return this;
  }

   /**
   * extra holds additional information provided by the authenticator.
   * @return extra
  **/
  @ApiModelProperty(value = "extra holds additional information provided by the authenticator.")
  public Map<String, List<String>> getExtra() {
    return extra;
  }

  public void setExtra(Map<String, List<String>> extra) {
    this.extra = extra;
  }

  public ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * groups represent the groups this user is a part of.
   * @return groups
  **/
  @ApiModelProperty(value = "groups represent the groups this user is a part of.")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  public ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester uid(String uid) {
    this.uid = uid;
    return this;
  }

   /**
   * uid is a unique value that identifies this user across time; if this user is deleted and another user by the same name is added, they will have different UIDs.
   * @return uid
  **/
  @ApiModelProperty(value = "uid is a unique value that identifies this user across time; if this user is deleted and another user by the same name is added, they will have different UIDs.")
  public String getUid() {
    return uid;
  }

  public void setUid(String uid) {
    this.uid = uid;
  }

  public ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester username(String username) {
    this.username = username;
    return this;
  }

   /**
   * username uniquely identifies this user among all active users.
   * @return username
  **/
  @ApiModelProperty(value = "username uniquely identifies this user among all active users.")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester comGithubOpenshiftApiTemplateV1TemplateInstanceRequester = (ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester) o;
    return Objects.equals(this.extra, comGithubOpenshiftApiTemplateV1TemplateInstanceRequester.extra) &&
        Objects.equals(this.groups, comGithubOpenshiftApiTemplateV1TemplateInstanceRequester.groups) &&
        Objects.equals(this.uid, comGithubOpenshiftApiTemplateV1TemplateInstanceRequester.uid) &&
        Objects.equals(this.username, comGithubOpenshiftApiTemplateV1TemplateInstanceRequester.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extra, groups, uid, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiTemplateV1TemplateInstanceRequester {\n");
    
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

