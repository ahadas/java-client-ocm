/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import open_cluster_management.io.ComGithubOpenshiftApiBuildV1BuildStatusOutput;
import open_cluster_management.io.ComGithubOpenshiftApiBuildV1StageInfo;
import open_cluster_management.io.IoK8sApiCoreV1ObjectReference;

/**
 * BuildStatus contains the status of a build
 */
@ApiModel(description = "BuildStatus contains the status of a build")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-05-18T17:27:50.678+03:00")
public class ComGithubOpenshiftApiBuildV1BuildStatus {
  @SerializedName("cancelled")
  private Boolean cancelled = null;

  @SerializedName("completionTimestamp")
  private String completionTimestamp = null;

  @SerializedName("config")
  private IoK8sApiCoreV1ObjectReference config = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("logSnippet")
  private String logSnippet = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("output")
  private ComGithubOpenshiftApiBuildV1BuildStatusOutput output = null;

  @SerializedName("outputDockerImageReference")
  private String outputDockerImageReference = null;

  @SerializedName("phase")
  private String phase = null;

  @SerializedName("reason")
  private String reason = null;

  @SerializedName("stages")
  private List<ComGithubOpenshiftApiBuildV1StageInfo> stages = null;

  @SerializedName("startTimestamp")
  private String startTimestamp = null;

  public ComGithubOpenshiftApiBuildV1BuildStatus cancelled(Boolean cancelled) {
    this.cancelled = cancelled;
    return this;
  }

   /**
   * cancelled describes if a cancel event was triggered for the build.
   * @return cancelled
  **/
  @ApiModelProperty(value = "cancelled describes if a cancel event was triggered for the build.")
  public Boolean isCancelled() {
    return cancelled;
  }

  public void setCancelled(Boolean cancelled) {
    this.cancelled = cancelled;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus completionTimestamp(String completionTimestamp) {
    this.completionTimestamp = completionTimestamp;
    return this;
  }

   /**
   * completionTimestamp is a timestamp representing the server time when this Build was finished, whether that build failed or succeeded.  It reflects the time at which the Pod running the Build terminated. It is represented in RFC3339 form and is in UTC.
   * @return completionTimestamp
  **/
  @ApiModelProperty(value = "completionTimestamp is a timestamp representing the server time when this Build was finished, whether that build failed or succeeded.  It reflects the time at which the Pod running the Build terminated. It is represented in RFC3339 form and is in UTC.")
  public String getCompletionTimestamp() {
    return completionTimestamp;
  }

  public void setCompletionTimestamp(String completionTimestamp) {
    this.completionTimestamp = completionTimestamp;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus config(IoK8sApiCoreV1ObjectReference config) {
    this.config = config;
    return this;
  }

   /**
   * config is an ObjectReference to the BuildConfig this Build is based on.
   * @return config
  **/
  @ApiModelProperty(value = "config is an ObjectReference to the BuildConfig this Build is based on.")
  public IoK8sApiCoreV1ObjectReference getConfig() {
    return config;
  }

  public void setConfig(IoK8sApiCoreV1ObjectReference config) {
    this.config = config;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * duration contains time.Duration object describing build time.
   * @return duration
  **/
  @ApiModelProperty(value = "duration contains time.Duration object describing build time.")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus logSnippet(String logSnippet) {
    this.logSnippet = logSnippet;
    return this;
  }

   /**
   * logSnippet is the last few lines of the build log.  This value is only set for builds that failed.
   * @return logSnippet
  **/
  @ApiModelProperty(value = "logSnippet is the last few lines of the build log.  This value is only set for builds that failed.")
  public String getLogSnippet() {
    return logSnippet;
  }

  public void setLogSnippet(String logSnippet) {
    this.logSnippet = logSnippet;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus message(String message) {
    this.message = message;
    return this;
  }

   /**
   * message is a human-readable message indicating details about why the build has this status.
   * @return message
  **/
  @ApiModelProperty(value = "message is a human-readable message indicating details about why the build has this status.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus output(ComGithubOpenshiftApiBuildV1BuildStatusOutput output) {
    this.output = output;
    return this;
  }

   /**
   * output describes the container image the build has produced.
   * @return output
  **/
  @ApiModelProperty(value = "output describes the container image the build has produced.")
  public ComGithubOpenshiftApiBuildV1BuildStatusOutput getOutput() {
    return output;
  }

  public void setOutput(ComGithubOpenshiftApiBuildV1BuildStatusOutput output) {
    this.output = output;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus outputDockerImageReference(String outputDockerImageReference) {
    this.outputDockerImageReference = outputDockerImageReference;
    return this;
  }

   /**
   * outputDockerImageReference contains a reference to the container image that will be built by this build. Its value is computed from Build.Spec.Output.To, and should include the registry address, so that it can be used to push and pull the image.
   * @return outputDockerImageReference
  **/
  @ApiModelProperty(value = "outputDockerImageReference contains a reference to the container image that will be built by this build. Its value is computed from Build.Spec.Output.To, and should include the registry address, so that it can be used to push and pull the image.")
  public String getOutputDockerImageReference() {
    return outputDockerImageReference;
  }

  public void setOutputDockerImageReference(String outputDockerImageReference) {
    this.outputDockerImageReference = outputDockerImageReference;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus phase(String phase) {
    this.phase = phase;
    return this;
  }

   /**
   * phase is the point in the build lifecycle. Possible values are \&quot;New\&quot;, \&quot;Pending\&quot;, \&quot;Running\&quot;, \&quot;Complete\&quot;, \&quot;Failed\&quot;, \&quot;Error\&quot;, and \&quot;Cancelled\&quot;.
   * @return phase
  **/
  @ApiModelProperty(required = true, value = "phase is the point in the build lifecycle. Possible values are \"New\", \"Pending\", \"Running\", \"Complete\", \"Failed\", \"Error\", and \"Cancelled\".")
  public String getPhase() {
    return phase;
  }

  public void setPhase(String phase) {
    this.phase = phase;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.
   * @return reason
  **/
  @ApiModelProperty(value = "reason is a brief CamelCase string that describes any failure and is meant for machine parsing and tidy display in the CLI.")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus stages(List<ComGithubOpenshiftApiBuildV1StageInfo> stages) {
    this.stages = stages;
    return this;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus addStagesItem(ComGithubOpenshiftApiBuildV1StageInfo stagesItem) {
    if (this.stages == null) {
      this.stages = new ArrayList<>();
    }
    this.stages.add(stagesItem);
    return this;
  }

   /**
   * stages contains details about each stage that occurs during the build including start time, duration (in milliseconds), and the steps that occured within each stage.
   * @return stages
  **/
  @ApiModelProperty(value = "stages contains details about each stage that occurs during the build including start time, duration (in milliseconds), and the steps that occured within each stage.")
  public List<ComGithubOpenshiftApiBuildV1StageInfo> getStages() {
    return stages;
  }

  public void setStages(List<ComGithubOpenshiftApiBuildV1StageInfo> stages) {
    this.stages = stages;
  }

  public ComGithubOpenshiftApiBuildV1BuildStatus startTimestamp(String startTimestamp) {
    this.startTimestamp = startTimestamp;
    return this;
  }

   /**
   * startTimestamp is a timestamp representing the server time when this Build started running in a Pod. It is represented in RFC3339 form and is in UTC.
   * @return startTimestamp
  **/
  @ApiModelProperty(value = "startTimestamp is a timestamp representing the server time when this Build started running in a Pod. It is represented in RFC3339 form and is in UTC.")
  public String getStartTimestamp() {
    return startTimestamp;
  }

  public void setStartTimestamp(String startTimestamp) {
    this.startTimestamp = startTimestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComGithubOpenshiftApiBuildV1BuildStatus comGithubOpenshiftApiBuildV1BuildStatus = (ComGithubOpenshiftApiBuildV1BuildStatus) o;
    return Objects.equals(this.cancelled, comGithubOpenshiftApiBuildV1BuildStatus.cancelled) &&
        Objects.equals(this.completionTimestamp, comGithubOpenshiftApiBuildV1BuildStatus.completionTimestamp) &&
        Objects.equals(this.config, comGithubOpenshiftApiBuildV1BuildStatus.config) &&
        Objects.equals(this.duration, comGithubOpenshiftApiBuildV1BuildStatus.duration) &&
        Objects.equals(this.logSnippet, comGithubOpenshiftApiBuildV1BuildStatus.logSnippet) &&
        Objects.equals(this.message, comGithubOpenshiftApiBuildV1BuildStatus.message) &&
        Objects.equals(this.output, comGithubOpenshiftApiBuildV1BuildStatus.output) &&
        Objects.equals(this.outputDockerImageReference, comGithubOpenshiftApiBuildV1BuildStatus.outputDockerImageReference) &&
        Objects.equals(this.phase, comGithubOpenshiftApiBuildV1BuildStatus.phase) &&
        Objects.equals(this.reason, comGithubOpenshiftApiBuildV1BuildStatus.reason) &&
        Objects.equals(this.stages, comGithubOpenshiftApiBuildV1BuildStatus.stages) &&
        Objects.equals(this.startTimestamp, comGithubOpenshiftApiBuildV1BuildStatus.startTimestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cancelled, completionTimestamp, config, duration, logSnippet, message, output, outputDockerImageReference, phase, reason, stages, startTimestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComGithubOpenshiftApiBuildV1BuildStatus {\n");
    
    sb.append("    cancelled: ").append(toIndentedString(cancelled)).append("\n");
    sb.append("    completionTimestamp: ").append(toIndentedString(completionTimestamp)).append("\n");
    sb.append("    config: ").append(toIndentedString(config)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    logSnippet: ").append(toIndentedString(logSnippet)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    output: ").append(toIndentedString(output)).append("\n");
    sb.append("    outputDockerImageReference: ").append(toIndentedString(outputDockerImageReference)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    stages: ").append(toIndentedString(stages)).append("\n");
    sb.append("    startTimestamp: ").append(toIndentedString(startTimestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

