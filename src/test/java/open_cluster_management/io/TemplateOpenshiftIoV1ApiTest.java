/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComGithubOpenshiftApiTemplateV1BrokerTemplateInstance;
import open_cluster_management.io.ComGithubOpenshiftApiTemplateV1BrokerTemplateInstanceList;
import open_cluster_management.io.ComGithubOpenshiftApiTemplateV1Template;
import open_cluster_management.io.ComGithubOpenshiftApiTemplateV1TemplateInstance;
import open_cluster_management.io.ComGithubOpenshiftApiTemplateV1TemplateInstanceList;
import open_cluster_management.io.ComGithubOpenshiftApiTemplateV1TemplateList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplateOpenshiftIoV1Api
 */
@Ignore
public class TemplateOpenshiftIoV1ApiTest {

    private final TemplateOpenshiftIoV1Api api = new TemplateOpenshiftIoV1Api();

    
    /**
     * 
     *
     * create a BrokerTemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTemplateOpenshiftIoV1BrokerTemplateInstanceTest() throws ApiException {
        ComGithubOpenshiftApiTemplateV1BrokerTemplateInstance body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiTemplateV1BrokerTemplateInstance response = api.createTemplateOpenshiftIoV1BrokerTemplateInstance(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTemplateOpenshiftIoV1NamespacedTemplateTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiTemplateV1Template body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiTemplateV1Template response = api.createTemplateOpenshiftIoV1NamespacedTemplate(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTemplateOpenshiftIoV1NamespacedTemplateInstanceTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance response = api.createTemplateOpenshiftIoV1NamespacedTemplateInstance(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a BrokerTemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTemplateOpenshiftIoV1BrokerTemplateInstanceTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteTemplateOpenshiftIoV1BrokerTemplateInstance(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of BrokerTemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTemplateOpenshiftIoV1CollectionBrokerTemplateInstanceTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteTemplateOpenshiftIoV1CollectionBrokerTemplateInstance(pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTemplateOpenshiftIoV1CollectionNamespacedTemplateTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteTemplateOpenshiftIoV1CollectionNamespacedTemplate(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTemplateOpenshiftIoV1CollectionNamespacedTemplateInstanceTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteTemplateOpenshiftIoV1CollectionNamespacedTemplateInstance(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTemplateOpenshiftIoV1NamespacedTemplateTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteTemplateOpenshiftIoV1NamespacedTemplate(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTemplateOpenshiftIoV1NamespacedTemplateInstanceTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteTemplateOpenshiftIoV1NamespacedTemplateInstance(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTemplateOpenshiftIoV1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getTemplateOpenshiftIoV1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind BrokerTemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTemplateOpenshiftIoV1BrokerTemplateInstanceTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiTemplateV1BrokerTemplateInstanceList response = api.listTemplateOpenshiftIoV1BrokerTemplateInstance(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTemplateOpenshiftIoV1NamespacedTemplateTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiTemplateV1TemplateList response = api.listTemplateOpenshiftIoV1NamespacedTemplate(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTemplateOpenshiftIoV1NamespacedTemplateInstanceTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstanceList response = api.listTemplateOpenshiftIoV1NamespacedTemplateInstance(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTemplateOpenshiftIoV1TemplateForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiTemplateV1TemplateList response = api.listTemplateOpenshiftIoV1TemplateForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listTemplateOpenshiftIoV1TemplateInstanceForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstanceList response = api.listTemplateOpenshiftIoV1TemplateInstanceForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified BrokerTemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchTemplateOpenshiftIoV1BrokerTemplateInstanceTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiTemplateV1BrokerTemplateInstance response = api.patchTemplateOpenshiftIoV1BrokerTemplateInstance(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchTemplateOpenshiftIoV1NamespacedTemplateTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiTemplateV1Template response = api.patchTemplateOpenshiftIoV1NamespacedTemplate(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchTemplateOpenshiftIoV1NamespacedTemplateInstanceTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance response = api.patchTemplateOpenshiftIoV1NamespacedTemplateInstance(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance response = api.patchTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified BrokerTemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTemplateOpenshiftIoV1BrokerTemplateInstanceTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenshiftApiTemplateV1BrokerTemplateInstance response = api.readTemplateOpenshiftIoV1BrokerTemplateInstance(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTemplateOpenshiftIoV1NamespacedTemplateTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenshiftApiTemplateV1Template response = api.readTemplateOpenshiftIoV1NamespacedTemplate(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTemplateOpenshiftIoV1NamespacedTemplateInstanceTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance response = api.readTemplateOpenshiftIoV1NamespacedTemplateInstance(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance response = api.readTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified BrokerTemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceTemplateOpenshiftIoV1BrokerTemplateInstanceTest() throws ApiException {
        String name = null;
        ComGithubOpenshiftApiTemplateV1BrokerTemplateInstance body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiTemplateV1BrokerTemplateInstance response = api.replaceTemplateOpenshiftIoV1BrokerTemplateInstance(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Template
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceTemplateOpenshiftIoV1NamespacedTemplateTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiTemplateV1Template body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiTemplateV1Template response = api.replaceTemplateOpenshiftIoV1NamespacedTemplate(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceTemplateOpenshiftIoV1NamespacedTemplateInstanceTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance response = api.replaceTemplateOpenshiftIoV1NamespacedTemplateInstance(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified TemplateInstance
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceTemplateOpenshiftIoV1NamespacedTemplateInstanceStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiTemplateV1TemplateInstance response = api.replaceTemplateOpenshiftIoV1NamespacedTemplateInstanceStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind BrokerTemplateInstance. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1BrokerTemplateInstanceTest() throws ApiException {
        String name = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1BrokerTemplateInstance(name, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of BrokerTemplateInstance. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1BrokerTemplateInstanceListTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1BrokerTemplateInstanceList(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind Template. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1NamespacedTemplateTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1NamespacedTemplate(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind TemplateInstance. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1NamespacedTemplateInstanceTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1NamespacedTemplateInstance(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of TemplateInstance. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1NamespacedTemplateInstanceListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1NamespacedTemplateInstanceList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Template. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1NamespacedTemplateListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1NamespacedTemplateList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of TemplateInstance. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1TemplateInstanceListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1TemplateInstanceListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Template. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchTemplateOpenshiftIoV1TemplateListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchTemplateOpenshiftIoV1TemplateListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
