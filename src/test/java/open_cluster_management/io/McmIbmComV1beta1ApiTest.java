/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewResult;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequestList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatus;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatusList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceViewList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceViewResult;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSetList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for McmIbmComV1beta1Api
 */
@Ignore
public class McmIbmComV1beta1ApiTest {

    private final McmIbmComV1beta1Api api = new McmIbmComV1beta1Api();

    
    /**
     * 
     *
     * connect GET requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1GetNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1GetNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1GetNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1GetNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1GetNamespacedClusterStatusLogTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1GetNamespacedClusterStatusLog(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1GetNamespacedClusterStatusLogWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1GetNamespacedClusterStatusLogWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1GetNamespacedClusterStatusMonitorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1GetNamespacedClusterStatusMonitor(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1GetNamespacedClusterStatusMonitorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1GetNamespacedClusterStatusMonitorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1OptionsNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1OptionsNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1OptionsNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1OptionsNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1OptionsNamespacedClusterStatusLogTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1OptionsNamespacedClusterStatusLog(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1OptionsNamespacedClusterStatusLogWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1OptionsNamespacedClusterStatusLogWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1OptionsNamespacedClusterStatusMonitorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1OptionsNamespacedClusterStatusMonitor(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1OptionsNamespacedClusterStatusMonitorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1OptionsNamespacedClusterStatusMonitorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect POST requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1PostNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1PostNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect POST requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1PostNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1PostNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect PUT requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1PutNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1beta1PutNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect PUT requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1beta1PutNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1beta1PutNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1beta1ClusterJoinRequestTest() throws ApiException {
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest response = api.createMcmIbmComV1beta1ClusterJoinRequest(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1beta1NamespacedClusterStatusTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatus body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatus response = api.createMcmIbmComV1beta1NamespacedClusterStatus(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1beta1NamespacedResourceViewTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView response = api.createMcmIbmComV1beta1NamespacedResourceView(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1beta1NamespacedWorkTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work response = api.createMcmIbmComV1beta1NamespacedWork(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create result of a Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1beta1NamespacedWorkResultTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceViewResult body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewResult response = api.createMcmIbmComV1beta1NamespacedWorkResult(name, namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1beta1NamespacedWorkSetTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet response = api.createMcmIbmComV1beta1NamespacedWorkSet(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1ClusterJoinRequest(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1CollectionClusterJoinRequestTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1CollectionClusterJoinRequest(pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1CollectionNamespacedClusterStatusTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1CollectionNamespacedClusterStatus(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1CollectionNamespacedResourceViewTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1CollectionNamespacedResourceView(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1CollectionNamespacedWorkTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1CollectionNamespacedWork(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1CollectionNamespacedWorkSetTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1CollectionNamespacedWorkSet(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1NamespacedClusterStatus(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1NamespacedResourceView(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1NamespacedWork(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1beta1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1beta1NamespacedWorkSet(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMcmIbmComV1beta1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getMcmIbmComV1beta1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1ClusterJoinRequestTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequestList response = api.listMcmIbmComV1beta1ClusterJoinRequest(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1ClusterStatusForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatusList response = api.listMcmIbmComV1beta1ClusterStatusForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1NamespacedClusterStatusTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatusList response = api.listMcmIbmComV1beta1NamespacedClusterStatus(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1NamespacedResourceViewTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceViewList response = api.listMcmIbmComV1beta1NamespacedResourceView(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1NamespacedWorkTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkList response = api.listMcmIbmComV1beta1NamespacedWork(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1NamespacedWorkSetTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSetList response = api.listMcmIbmComV1beta1NamespacedWorkSet(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1ResourceViewForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceViewList response = api.listMcmIbmComV1beta1ResourceViewForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1WorkForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkList response = api.listMcmIbmComV1beta1WorkForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1beta1WorkSetForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSetList response = api.listMcmIbmComV1beta1WorkSetForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest response = api.patchMcmIbmComV1beta1ClusterJoinRequest(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1ClusterJoinRequestStatusTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest response = api.patchMcmIbmComV1beta1ClusterJoinRequestStatus(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatus response = api.patchMcmIbmComV1beta1NamespacedClusterStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView response = api.patchMcmIbmComV1beta1NamespacedResourceView(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1NamespacedResourceViewStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView response = api.patchMcmIbmComV1beta1NamespacedResourceViewStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work response = api.patchMcmIbmComV1beta1NamespacedWork(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet response = api.patchMcmIbmComV1beta1NamespacedWorkSet(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1NamespacedWorkSetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet response = api.patchMcmIbmComV1beta1NamespacedWorkSetStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1beta1NamespacedWorkStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work response = api.patchMcmIbmComV1beta1NamespacedWorkStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest response = api.readMcmIbmComV1beta1ClusterJoinRequest(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1ClusterJoinRequestStatusTest() throws ApiException {
        String name = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest response = api.readMcmIbmComV1beta1ClusterJoinRequestStatus(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatus response = api.readMcmIbmComV1beta1NamespacedClusterStatus(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView response = api.readMcmIbmComV1beta1NamespacedResourceView(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1NamespacedResourceViewStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView response = api.readMcmIbmComV1beta1NamespacedResourceViewStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work response = api.readMcmIbmComV1beta1NamespacedWork(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet response = api.readMcmIbmComV1beta1NamespacedWorkSet(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1NamespacedWorkSetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet response = api.readMcmIbmComV1beta1NamespacedWorkSetStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1beta1NamespacedWorkStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work response = api.readMcmIbmComV1beta1NamespacedWorkStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest response = api.replaceMcmIbmComV1beta1ClusterJoinRequest(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1ClusterJoinRequestStatusTest() throws ApiException {
        String name = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterJoinRequest response = api.replaceMcmIbmComV1beta1ClusterJoinRequestStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatus body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ClusterStatus response = api.replaceMcmIbmComV1beta1NamespacedClusterStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView response = api.replaceMcmIbmComV1beta1NamespacedResourceView(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1NamespacedResourceViewStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1ResourceView response = api.replaceMcmIbmComV1beta1NamespacedResourceViewStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work response = api.replaceMcmIbmComV1beta1NamespacedWork(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet response = api.replaceMcmIbmComV1beta1NamespacedWorkSet(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1NamespacedWorkSetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1WorkSet response = api.replaceMcmIbmComV1beta1NamespacedWorkSetStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1beta1NamespacedWorkStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1beta1Work response = api.replaceMcmIbmComV1beta1NamespacedWorkStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ClusterJoinRequest. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1ClusterJoinRequest(name, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterJoinRequest. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1ClusterJoinRequestListTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1ClusterJoinRequestList(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterStatus. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1ClusterStatusListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1ClusterStatusListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ClusterStatus. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedClusterStatus(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterStatus. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedClusterStatusListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedClusterStatusList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ResourceView. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedResourceView(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ResourceView. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedResourceViewListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedResourceViewList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind Work. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedWork(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Work. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedWorkListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedWorkList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind WorkSet. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedWorkSet(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of WorkSet. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1NamespacedWorkSetListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1NamespacedWorkSetList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ResourceView. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1ResourceViewListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1ResourceViewListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Work. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1WorkListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1WorkListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of WorkSet. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1beta1WorkSetListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1beta1WorkSetListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
