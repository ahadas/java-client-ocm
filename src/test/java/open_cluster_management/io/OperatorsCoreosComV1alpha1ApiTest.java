/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1CatalogSource;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1CatalogSourceList;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1ClusterServiceVersion;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1ClusterServiceVersionList;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1InstallPlan;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1InstallPlanList;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1Subscription;
import open_cluster_management.io.ComCoreosOperatorsV1alpha1SubscriptionList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OperatorsCoreosComV1alpha1Api
 */
@Ignore
public class OperatorsCoreosComV1alpha1ApiTest {

    private final OperatorsCoreosComV1alpha1Api api = new OperatorsCoreosComV1alpha1Api();

    
    /**
     * 
     *
     * create a CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOperatorsCoreosComV1alpha1NamespacedCatalogSourceTest() throws ApiException {
        String namespace = null;
        ComCoreosOperatorsV1alpha1CatalogSource body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1CatalogSource response = api.createOperatorsCoreosComV1alpha1NamespacedCatalogSource(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionTest() throws ApiException {
        String namespace = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion response = api.createOperatorsCoreosComV1alpha1NamespacedClusterServiceVersion(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create an InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOperatorsCoreosComV1alpha1NamespacedInstallPlanTest() throws ApiException {
        String namespace = null;
        ComCoreosOperatorsV1alpha1InstallPlan body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1InstallPlan response = api.createOperatorsCoreosComV1alpha1NamespacedInstallPlan(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createOperatorsCoreosComV1alpha1NamespacedSubscriptionTest() throws ApiException {
        String namespace = null;
        ComCoreosOperatorsV1alpha1Subscription body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1Subscription response = api.createOperatorsCoreosComV1alpha1NamespacedSubscription(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1CollectionNamespacedCatalogSourceTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1CollectionNamespacedCatalogSource(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1CollectionNamespacedClusterServiceVersionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1CollectionNamespacedClusterServiceVersion(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1CollectionNamespacedInstallPlanTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1CollectionNamespacedInstallPlan(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1CollectionNamespacedSubscriptionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1CollectionNamespacedSubscription(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1NamespacedCatalogSourceTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1NamespacedCatalogSource(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1NamespacedClusterServiceVersion(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete an InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1NamespacedInstallPlanTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1NamespacedInstallPlan(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteOperatorsCoreosComV1alpha1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteOperatorsCoreosComV1alpha1NamespacedSubscription(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1CatalogSourceForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1CatalogSourceList response = api.listOperatorsCoreosComV1alpha1CatalogSourceForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1ClusterServiceVersionForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersionList response = api.listOperatorsCoreosComV1alpha1ClusterServiceVersionForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1InstallPlanForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1InstallPlanList response = api.listOperatorsCoreosComV1alpha1InstallPlanForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1NamespacedCatalogSourceTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1CatalogSourceList response = api.listOperatorsCoreosComV1alpha1NamespacedCatalogSource(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersionList response = api.listOperatorsCoreosComV1alpha1NamespacedClusterServiceVersion(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1NamespacedInstallPlanTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1InstallPlanList response = api.listOperatorsCoreosComV1alpha1NamespacedInstallPlan(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1NamespacedSubscriptionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1SubscriptionList response = api.listOperatorsCoreosComV1alpha1NamespacedSubscription(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listOperatorsCoreosComV1alpha1SubscriptionForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComCoreosOperatorsV1alpha1SubscriptionList response = api.listOperatorsCoreosComV1alpha1SubscriptionForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedCatalogSourceTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1CatalogSource response = api.patchOperatorsCoreosComV1alpha1NamespacedCatalogSource(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedCatalogSourceStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1CatalogSource response = api.patchOperatorsCoreosComV1alpha1NamespacedCatalogSourceStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion response = api.patchOperatorsCoreosComV1alpha1NamespacedClusterServiceVersion(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion response = api.patchOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedInstallPlanTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1InstallPlan response = api.patchOperatorsCoreosComV1alpha1NamespacedInstallPlan(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedInstallPlanStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1InstallPlan response = api.patchOperatorsCoreosComV1alpha1NamespacedInstallPlanStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1Subscription response = api.patchOperatorsCoreosComV1alpha1NamespacedSubscription(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchOperatorsCoreosComV1alpha1NamespacedSubscriptionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1Subscription response = api.patchOperatorsCoreosComV1alpha1NamespacedSubscriptionStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedCatalogSourceTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1CatalogSource response = api.readOperatorsCoreosComV1alpha1NamespacedCatalogSource(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedCatalogSourceStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1CatalogSource response = api.readOperatorsCoreosComV1alpha1NamespacedCatalogSourceStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion response = api.readOperatorsCoreosComV1alpha1NamespacedClusterServiceVersion(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion response = api.readOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedInstallPlanTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1InstallPlan response = api.readOperatorsCoreosComV1alpha1NamespacedInstallPlan(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedInstallPlanStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1InstallPlan response = api.readOperatorsCoreosComV1alpha1NamespacedInstallPlanStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1Subscription response = api.readOperatorsCoreosComV1alpha1NamespacedSubscription(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readOperatorsCoreosComV1alpha1NamespacedSubscriptionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        ComCoreosOperatorsV1alpha1Subscription response = api.readOperatorsCoreosComV1alpha1NamespacedSubscriptionStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedCatalogSourceTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1CatalogSource body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1CatalogSource response = api.replaceOperatorsCoreosComV1alpha1NamespacedCatalogSource(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified CatalogSource
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedCatalogSourceStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1CatalogSource body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1CatalogSource response = api.replaceOperatorsCoreosComV1alpha1NamespacedCatalogSourceStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion response = api.replaceOperatorsCoreosComV1alpha1NamespacedClusterServiceVersion(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified ClusterServiceVersion
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1ClusterServiceVersion response = api.replaceOperatorsCoreosComV1alpha1NamespacedClusterServiceVersionStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedInstallPlanTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1InstallPlan body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1InstallPlan response = api.replaceOperatorsCoreosComV1alpha1NamespacedInstallPlan(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified InstallPlan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedInstallPlanStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1InstallPlan body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1InstallPlan response = api.replaceOperatorsCoreosComV1alpha1NamespacedInstallPlanStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1Subscription body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1Subscription response = api.replaceOperatorsCoreosComV1alpha1NamespacedSubscription(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceOperatorsCoreosComV1alpha1NamespacedSubscriptionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComCoreosOperatorsV1alpha1Subscription body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComCoreosOperatorsV1alpha1Subscription response = api.replaceOperatorsCoreosComV1alpha1NamespacedSubscriptionStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
}
