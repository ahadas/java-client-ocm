/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequestList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatusList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatusTopology;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVoteList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBinding;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBindingList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicyList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewResult;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkList;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSetList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for McmIbmComV1alpha1Api
 */
@Ignore
public class McmIbmComV1alpha1ApiTest {

    private final McmIbmComV1alpha1Api api = new McmIbmComV1alpha1Api();

    
    /**
     * 
     *
     * connect GET requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusLogTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusLog(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusLogWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusLogWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusMeteringReceiverTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusMeteringReceiver(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusMeteringReceiverWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusMeteringReceiverWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusMonitorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusMonitor(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect GET requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1GetNamespacedClusterStatusMonitorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1GetNamespacedClusterStatusMonitorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusLogTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusLog(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to log of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusLogWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusLogWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMeteringReceiverTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMeteringReceiver(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMeteringReceiverWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMeteringReceiverWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMonitorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMonitor(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect OPTIONS requests to monitor of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMonitorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1OptionsNamespacedClusterStatusMonitorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect POST requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PostNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1PostNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect POST requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PostNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1PostNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect POST requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PostNamespacedClusterStatusMeteringReceiverTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1PostNamespacedClusterStatusMeteringReceiver(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect POST requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PostNamespacedClusterStatusMeteringReceiverWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1PostNamespacedClusterStatusMeteringReceiverWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect PUT requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PutNamespacedClusterStatusAggregatorTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1PutNamespacedClusterStatusAggregator(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect PUT requests to aggregator of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PutNamespacedClusterStatusAggregatorWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1PutNamespacedClusterStatusAggregatorWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect PUT requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PutNamespacedClusterStatusMeteringReceiverTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String response = api.connectMcmIbmComV1alpha1PutNamespacedClusterStatusMeteringReceiver(name, namespace, path);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * connect PUT requests to metering-receiver of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void connectMcmIbmComV1alpha1PutNamespacedClusterStatusMeteringReceiverWithPathTest() throws ApiException {
        String name = null;
        String namespace = null;
        String path = null;
        String path2 = null;
        String response = api.connectMcmIbmComV1alpha1PutNamespacedClusterStatusMeteringReceiverWithPath(name, namespace, path, path2);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1ClusterJoinRequestTest() throws ApiException {
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest response = api.createMcmIbmComV1alpha1ClusterJoinRequest(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1LeaderVoteTest() throws ApiException {
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote response = api.createMcmIbmComV1alpha1LeaderVote(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus response = api.createMcmIbmComV1alpha1NamespacedClusterStatus(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create topology of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedClusterStatusTopologyTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatusTopology body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus response = api.createMcmIbmComV1alpha1NamespacedClusterStatusTopology(name, namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedPlacementBindingTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBinding body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBinding response = api.createMcmIbmComV1alpha1NamespacedPlacementBinding(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedPlacementPolicyTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy response = api.createMcmIbmComV1alpha1NamespacedPlacementPolicy(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedResourceViewTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView response = api.createMcmIbmComV1alpha1NamespacedResourceView(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedWorkTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work response = api.createMcmIbmComV1alpha1NamespacedWork(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create result of a Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedWorkResultTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewResult body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewResult response = api.createMcmIbmComV1alpha1NamespacedWorkResult(name, namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createMcmIbmComV1alpha1NamespacedWorkSetTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet response = api.createMcmIbmComV1alpha1NamespacedWorkSet(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1ClusterJoinRequest(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionClusterJoinRequestTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionClusterJoinRequest(pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionLeaderVoteTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionLeaderVote(pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionNamespacedClusterStatusTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionNamespacedClusterStatus(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionNamespacedPlacementBindingTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionNamespacedPlacementBinding(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionNamespacedPlacementPolicyTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionNamespacedPlacementPolicy(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionNamespacedResourceViewTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionNamespacedResourceView(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionNamespacedWorkTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionNamespacedWork(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1CollectionNamespacedWorkSetTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1CollectionNamespacedWorkSet(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1LeaderVoteTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1LeaderVote(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1NamespacedClusterStatus(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1NamespacedPlacementBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1NamespacedPlacementBinding(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1NamespacedPlacementPolicyTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1NamespacedPlacementPolicy(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1NamespacedResourceView(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1NamespacedWork(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMcmIbmComV1alpha1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteMcmIbmComV1alpha1NamespacedWorkSet(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMcmIbmComV1alpha1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getMcmIbmComV1alpha1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1ClusterJoinRequestTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequestList response = api.listMcmIbmComV1alpha1ClusterJoinRequest(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1ClusterStatusForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatusList response = api.listMcmIbmComV1alpha1ClusterStatusForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1LeaderVoteTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVoteList response = api.listMcmIbmComV1alpha1LeaderVote(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatusList response = api.listMcmIbmComV1alpha1NamespacedClusterStatus(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1NamespacedPlacementBindingTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBindingList response = api.listMcmIbmComV1alpha1NamespacedPlacementBinding(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1NamespacedPlacementPolicyTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicyList response = api.listMcmIbmComV1alpha1NamespacedPlacementPolicy(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1NamespacedResourceViewTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewList response = api.listMcmIbmComV1alpha1NamespacedResourceView(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1NamespacedWorkTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkList response = api.listMcmIbmComV1alpha1NamespacedWork(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1NamespacedWorkSetTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSetList response = api.listMcmIbmComV1alpha1NamespacedWorkSet(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1PlacementBindingForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBindingList response = api.listMcmIbmComV1alpha1PlacementBindingForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1PlacementPolicyForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicyList response = api.listMcmIbmComV1alpha1PlacementPolicyForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1ResourceViewForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceViewList response = api.listMcmIbmComV1alpha1ResourceViewForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1WorkForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkList response = api.listMcmIbmComV1alpha1WorkForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listMcmIbmComV1alpha1WorkSetForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSetList response = api.listMcmIbmComV1alpha1WorkSetForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest response = api.patchMcmIbmComV1alpha1ClusterJoinRequest(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1ClusterJoinRequestStatusTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest response = api.patchMcmIbmComV1alpha1ClusterJoinRequestStatus(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1LeaderVoteTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote response = api.patchMcmIbmComV1alpha1LeaderVote(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1LeaderVoteStatusTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote response = api.patchMcmIbmComV1alpha1LeaderVoteStatus(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus response = api.patchMcmIbmComV1alpha1NamespacedClusterStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedPlacementBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBinding response = api.patchMcmIbmComV1alpha1NamespacedPlacementBinding(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedPlacementPolicyTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy response = api.patchMcmIbmComV1alpha1NamespacedPlacementPolicy(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedPlacementPolicyStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy response = api.patchMcmIbmComV1alpha1NamespacedPlacementPolicyStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView response = api.patchMcmIbmComV1alpha1NamespacedResourceView(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedResourceViewStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView response = api.patchMcmIbmComV1alpha1NamespacedResourceViewStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work response = api.patchMcmIbmComV1alpha1NamespacedWork(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet response = api.patchMcmIbmComV1alpha1NamespacedWorkSet(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedWorkSetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet response = api.patchMcmIbmComV1alpha1NamespacedWorkSetStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchMcmIbmComV1alpha1NamespacedWorkStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work response = api.patchMcmIbmComV1alpha1NamespacedWorkStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest response = api.readMcmIbmComV1alpha1ClusterJoinRequest(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1ClusterJoinRequestStatusTest() throws ApiException {
        String name = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest response = api.readMcmIbmComV1alpha1ClusterJoinRequestStatus(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1LeaderVoteTest() throws ApiException {
        String name = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote response = api.readMcmIbmComV1alpha1LeaderVote(name, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1LeaderVoteStatusTest() throws ApiException {
        String name = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote response = api.readMcmIbmComV1alpha1LeaderVoteStatus(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus response = api.readMcmIbmComV1alpha1NamespacedClusterStatus(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedPlacementBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBinding response = api.readMcmIbmComV1alpha1NamespacedPlacementBinding(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedPlacementPolicyTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy response = api.readMcmIbmComV1alpha1NamespacedPlacementPolicy(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedPlacementPolicyStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy response = api.readMcmIbmComV1alpha1NamespacedPlacementPolicyStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView response = api.readMcmIbmComV1alpha1NamespacedResourceView(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedResourceViewStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView response = api.readMcmIbmComV1alpha1NamespacedResourceViewStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work response = api.readMcmIbmComV1alpha1NamespacedWork(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet response = api.readMcmIbmComV1alpha1NamespacedWorkSet(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedWorkSetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet response = api.readMcmIbmComV1alpha1NamespacedWorkSetStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readMcmIbmComV1alpha1NamespacedWorkStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work response = api.readMcmIbmComV1alpha1NamespacedWorkStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest response = api.replaceMcmIbmComV1alpha1ClusterJoinRequest(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified ClusterJoinRequest
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1ClusterJoinRequestStatusTest() throws ApiException {
        String name = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterJoinRequest response = api.replaceMcmIbmComV1alpha1ClusterJoinRequestStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1LeaderVoteTest() throws ApiException {
        String name = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote response = api.replaceMcmIbmComV1alpha1LeaderVote(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified LeaderVote
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1LeaderVoteStatusTest() throws ApiException {
        String name = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1LeaderVote response = api.replaceMcmIbmComV1alpha1LeaderVoteStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterStatus
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ClusterStatus response = api.replaceMcmIbmComV1alpha1NamespacedClusterStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified PlacementBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedPlacementBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBinding body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementBinding response = api.replaceMcmIbmComV1alpha1NamespacedPlacementBinding(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedPlacementPolicyTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy response = api.replaceMcmIbmComV1alpha1NamespacedPlacementPolicy(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified PlacementPolicy
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedPlacementPolicyStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1PlacementPolicy response = api.replaceMcmIbmComV1alpha1NamespacedPlacementPolicyStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView response = api.replaceMcmIbmComV1alpha1NamespacedResourceView(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified ResourceView
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedResourceViewStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1ResourceView response = api.replaceMcmIbmComV1alpha1NamespacedResourceViewStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work response = api.replaceMcmIbmComV1alpha1NamespacedWork(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet response = api.replaceMcmIbmComV1alpha1NamespacedWorkSet(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified WorkSet
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedWorkSetStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1WorkSet response = api.replaceMcmIbmComV1alpha1NamespacedWorkSetStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified Work
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceMcmIbmComV1alpha1NamespacedWorkStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisMcmV1alpha1Work response = api.replaceMcmIbmComV1alpha1NamespacedWorkStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ClusterJoinRequest. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1ClusterJoinRequestTest() throws ApiException {
        String name = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1ClusterJoinRequest(name, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterJoinRequest. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1ClusterJoinRequestListTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1ClusterJoinRequestList(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterStatus. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1ClusterStatusListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1ClusterStatusListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind LeaderVote. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1LeaderVoteTest() throws ApiException {
        String name = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1LeaderVote(name, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of LeaderVote. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1LeaderVoteListTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1LeaderVoteList(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ClusterStatus. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedClusterStatus(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterStatus. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedClusterStatusListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedClusterStatusList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind PlacementBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedPlacementBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedPlacementBinding(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of PlacementBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedPlacementBindingListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedPlacementBindingList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind PlacementPolicy. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedPlacementPolicyTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedPlacementPolicy(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of PlacementPolicy. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedPlacementPolicyListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedPlacementPolicyList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ResourceView. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedResourceViewTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedResourceView(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ResourceView. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedResourceViewListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedResourceViewList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind Work. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedWorkTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedWork(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Work. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedWorkListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedWorkList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind WorkSet. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedWorkSetTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedWorkSet(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of WorkSet. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1NamespacedWorkSetListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1NamespacedWorkSetList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of PlacementBinding. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1PlacementBindingListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1PlacementBindingListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of PlacementPolicy. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1PlacementPolicyListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1PlacementPolicyListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ResourceView. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1ResourceViewListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1ResourceViewListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Work. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1WorkListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1WorkListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of WorkSet. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchMcmIbmComV1alpha1WorkSetListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchMcmIbmComV1alpha1WorkSetListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
