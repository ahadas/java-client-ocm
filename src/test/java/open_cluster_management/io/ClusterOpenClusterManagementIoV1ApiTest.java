/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoOpenClusterManagementClusterV1SpokeCluster;
import open_cluster_management.io.IoOpenClusterManagementClusterV1SpokeClusterList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClusterOpenClusterManagementIoV1Api
 */
@Ignore
public class ClusterOpenClusterManagementIoV1ApiTest {

    private final ClusterOpenClusterManagementIoV1Api api = new ClusterOpenClusterManagementIoV1Api();

    
    /**
     * 
     *
     * create a SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createClusterOpenClusterManagementIoV1SpokeClusterTest() throws ApiException {
        IoOpenClusterManagementClusterV1SpokeCluster body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementClusterV1SpokeCluster response = api.createClusterOpenClusterManagementIoV1SpokeCluster(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClusterOpenClusterManagementIoV1CollectionSpokeClusterTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteClusterOpenClusterManagementIoV1CollectionSpokeCluster(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClusterOpenClusterManagementIoV1SpokeClusterTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteClusterOpenClusterManagementIoV1SpokeCluster(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listClusterOpenClusterManagementIoV1SpokeClusterTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementClusterV1SpokeClusterList response = api.listClusterOpenClusterManagementIoV1SpokeCluster(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchClusterOpenClusterManagementIoV1SpokeClusterTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementClusterV1SpokeCluster response = api.patchClusterOpenClusterManagementIoV1SpokeCluster(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchClusterOpenClusterManagementIoV1SpokeClusterStatusTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementClusterV1SpokeCluster response = api.patchClusterOpenClusterManagementIoV1SpokeClusterStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readClusterOpenClusterManagementIoV1SpokeClusterTest() throws ApiException {
        String name = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementClusterV1SpokeCluster response = api.readClusterOpenClusterManagementIoV1SpokeCluster(name, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readClusterOpenClusterManagementIoV1SpokeClusterStatusTest() throws ApiException {
        String name = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementClusterV1SpokeCluster response = api.readClusterOpenClusterManagementIoV1SpokeClusterStatus(name, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceClusterOpenClusterManagementIoV1SpokeClusterTest() throws ApiException {
        String name = null;
        IoOpenClusterManagementClusterV1SpokeCluster body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementClusterV1SpokeCluster response = api.replaceClusterOpenClusterManagementIoV1SpokeCluster(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified SpokeCluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceClusterOpenClusterManagementIoV1SpokeClusterStatusTest() throws ApiException {
        String name = null;
        IoOpenClusterManagementClusterV1SpokeCluster body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementClusterV1SpokeCluster response = api.replaceClusterOpenClusterManagementIoV1SpokeClusterStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
}
