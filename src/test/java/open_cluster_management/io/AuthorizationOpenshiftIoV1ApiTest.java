/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1ClusterRole;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1ClusterRoleBinding;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1ClusterRoleBindingList;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1ClusterRoleList;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1LocalResourceAccessReview;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1LocalSubjectAccessReview;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1ResourceAccessReview;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1Role;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1RoleBinding;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1RoleBindingList;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1RoleList;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1SelfSubjectRulesReview;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1SubjectAccessReview;
import open_cluster_management.io.ComGithubOpenshiftApiAuthorizationV1SubjectRulesReview;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoOpenshiftAuthorizationV1RoleBindingRestriction;
import open_cluster_management.io.IoOpenshiftAuthorizationV1RoleBindingRestrictionList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthorizationOpenshiftIoV1Api
 */
@Ignore
public class AuthorizationOpenshiftIoV1ApiTest {

    private final AuthorizationOpenshiftIoV1Api api = new AuthorizationOpenshiftIoV1Api();

    
    /**
     * 
     *
     * create a ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1ClusterRoleTest() throws ApiException {
        ComGithubOpenshiftApiAuthorizationV1ClusterRole body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRole response = api.createAuthorizationOpenshiftIoV1ClusterRole(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1ClusterRoleBindingTest() throws ApiException {
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleBinding body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleBinding response = api.createAuthorizationOpenshiftIoV1ClusterRoleBinding(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a LocalResourceAccessReview
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReviewTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1LocalResourceAccessReview body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1LocalResourceAccessReview response = api.createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview(namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a LocalSubjectAccessReview
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReviewTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1LocalSubjectAccessReview body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1LocalSubjectAccessReview response = api.createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview(namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1NamespacedRoleTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1Role body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1Role response = api.createAuthorizationOpenshiftIoV1NamespacedRole(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1NamespacedRoleBindingTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBinding body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBinding response = api.createAuthorizationOpenshiftIoV1NamespacedRoleBinding(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionTest() throws ApiException {
        String namespace = null;
        IoOpenshiftAuthorizationV1RoleBindingRestriction body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftAuthorizationV1RoleBindingRestriction response = api.createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a SelfSubjectRulesReview
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReviewTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1SelfSubjectRulesReview body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1SelfSubjectRulesReview response = api.createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview(namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a SubjectRulesReview
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReviewTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1SubjectRulesReview body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1SubjectRulesReview response = api.createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview(namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a ResourceAccessReview
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1ResourceAccessReviewTest() throws ApiException {
        ComGithubOpenshiftApiAuthorizationV1ResourceAccessReview body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1ResourceAccessReview response = api.createAuthorizationOpenshiftIoV1ResourceAccessReview(body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a SubjectAccessReview
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAuthorizationOpenshiftIoV1SubjectAccessReviewTest() throws ApiException {
        ComGithubOpenshiftApiAuthorizationV1SubjectAccessReview body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1SubjectAccessReview response = api.createAuthorizationOpenshiftIoV1SubjectAccessReview(body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthorizationOpenshiftIoV1ClusterRoleTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAuthorizationOpenshiftIoV1ClusterRole(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthorizationOpenshiftIoV1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAuthorizationOpenshiftIoV1ClusterRoleBinding(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestrictionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthorizationOpenshiftIoV1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAuthorizationOpenshiftIoV1NamespacedRole(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAuthorizationOpenshiftIoV1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getAuthorizationOpenshiftIoV1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1ClusterRoleTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleList response = api.listAuthorizationOpenshiftIoV1ClusterRole(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1ClusterRoleBindingTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleBindingList response = api.listAuthorizationOpenshiftIoV1ClusterRoleBinding(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1NamespacedRoleTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAuthorizationV1RoleList response = api.listAuthorizationOpenshiftIoV1NamespacedRole(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1NamespacedRoleBindingTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBindingList response = api.listAuthorizationOpenshiftIoV1NamespacedRoleBinding(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenshiftAuthorizationV1RoleBindingRestrictionList response = api.listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1RoleBindingForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBindingList response = api.listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenshiftAuthorizationV1RoleBindingRestrictionList response = api.listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAuthorizationOpenshiftIoV1RoleForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAuthorizationV1RoleList response = api.listAuthorizationOpenshiftIoV1RoleForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAuthorizationOpenshiftIoV1ClusterRoleTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRole response = api.patchAuthorizationOpenshiftIoV1ClusterRole(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAuthorizationOpenshiftIoV1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleBinding response = api.patchAuthorizationOpenshiftIoV1ClusterRoleBinding(name, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAuthorizationOpenshiftIoV1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiAuthorizationV1Role response = api.patchAuthorizationOpenshiftIoV1NamespacedRole(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAuthorizationOpenshiftIoV1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBinding response = api.patchAuthorizationOpenshiftIoV1NamespacedRoleBinding(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftAuthorizationV1RoleBindingRestriction response = api.patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAuthorizationOpenshiftIoV1ClusterRoleTest() throws ApiException {
        String name = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRole response = api.readAuthorizationOpenshiftIoV1ClusterRole(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAuthorizationOpenshiftIoV1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleBinding response = api.readAuthorizationOpenshiftIoV1ClusterRoleBinding(name, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAuthorizationOpenshiftIoV1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1Role response = api.readAuthorizationOpenshiftIoV1NamespacedRole(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAuthorizationOpenshiftIoV1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBinding response = api.readAuthorizationOpenshiftIoV1NamespacedRoleBinding(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenshiftAuthorizationV1RoleBindingRestriction response = api.readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterRole
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAuthorizationOpenshiftIoV1ClusterRoleTest() throws ApiException {
        String name = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRole body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRole response = api.replaceAuthorizationOpenshiftIoV1ClusterRole(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterRoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAuthorizationOpenshiftIoV1ClusterRoleBindingTest() throws ApiException {
        String name = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleBinding body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1ClusterRoleBinding response = api.replaceAuthorizationOpenshiftIoV1ClusterRoleBinding(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Role
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAuthorizationOpenshiftIoV1NamespacedRoleTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1Role body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1Role response = api.replaceAuthorizationOpenshiftIoV1NamespacedRole(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified RoleBinding
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBinding body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAuthorizationV1RoleBinding response = api.replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified RoleBindingRestriction
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenshiftAuthorizationV1RoleBindingRestriction body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftAuthorizationV1RoleBindingRestriction response = api.replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
}
