/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoOpenClusterManagementAppsV1Channel;
import open_cluster_management.io.IoOpenClusterManagementAppsV1ChannelList;
import open_cluster_management.io.IoOpenClusterManagementAppsV1Deployable;
import open_cluster_management.io.IoOpenClusterManagementAppsV1DeployableList;
import open_cluster_management.io.IoOpenClusterManagementAppsV1HelmRelease;
import open_cluster_management.io.IoOpenClusterManagementAppsV1HelmReleaseList;
import open_cluster_management.io.IoOpenClusterManagementAppsV1PlacementRule;
import open_cluster_management.io.IoOpenClusterManagementAppsV1PlacementRuleList;
import open_cluster_management.io.IoOpenClusterManagementAppsV1Subscription;
import open_cluster_management.io.IoOpenClusterManagementAppsV1SubscriptionList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsOpenClusterManagementIoV1Api
 */
@Ignore
public class AppsOpenClusterManagementIoV1ApiTest {

    private final AppsOpenClusterManagementIoV1Api api = new AppsOpenClusterManagementIoV1Api();

    
    /**
     * 
     *
     * create a Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenClusterManagementIoV1NamespacedChannelTest() throws ApiException {
        String namespace = null;
        IoOpenClusterManagementAppsV1Channel body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Channel response = api.createAppsOpenClusterManagementIoV1NamespacedChannel(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenClusterManagementIoV1NamespacedDeployableTest() throws ApiException {
        String namespace = null;
        IoOpenClusterManagementAppsV1Deployable body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Deployable response = api.createAppsOpenClusterManagementIoV1NamespacedDeployable(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenClusterManagementIoV1NamespacedHelmReleaseTest() throws ApiException {
        String namespace = null;
        IoOpenClusterManagementAppsV1HelmRelease body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1HelmRelease response = api.createAppsOpenClusterManagementIoV1NamespacedHelmRelease(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenClusterManagementIoV1NamespacedPlacementRuleTest() throws ApiException {
        String namespace = null;
        IoOpenClusterManagementAppsV1PlacementRule body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1PlacementRule response = api.createAppsOpenClusterManagementIoV1NamespacedPlacementRule(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create a Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenClusterManagementIoV1NamespacedSubscriptionTest() throws ApiException {
        String namespace = null;
        IoOpenClusterManagementAppsV1Subscription body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Subscription response = api.createAppsOpenClusterManagementIoV1NamespacedSubscription(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1CollectionNamespacedChannelTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1CollectionNamespacedChannel(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1CollectionNamespacedDeployableTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1CollectionNamespacedDeployable(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1CollectionNamespacedHelmReleaseTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1CollectionNamespacedHelmRelease(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1CollectionNamespacedPlacementRuleTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1CollectionNamespacedPlacementRule(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1CollectionNamespacedSubscriptionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1CollectionNamespacedSubscription(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1NamespacedChannelTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1NamespacedChannel(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1NamespacedDeployableTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1NamespacedDeployable(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1NamespacedHelmReleaseTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1NamespacedHelmRelease(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1NamespacedPlacementRuleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1NamespacedPlacementRule(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenClusterManagementIoV1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenClusterManagementIoV1NamespacedSubscription(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1ChannelForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1ChannelList response = api.listAppsOpenClusterManagementIoV1ChannelForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1DeployableForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1DeployableList response = api.listAppsOpenClusterManagementIoV1DeployableForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1HelmReleaseForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1HelmReleaseList response = api.listAppsOpenClusterManagementIoV1HelmReleaseForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1NamespacedChannelTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1ChannelList response = api.listAppsOpenClusterManagementIoV1NamespacedChannel(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1NamespacedDeployableTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1DeployableList response = api.listAppsOpenClusterManagementIoV1NamespacedDeployable(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1NamespacedHelmReleaseTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1HelmReleaseList response = api.listAppsOpenClusterManagementIoV1NamespacedHelmRelease(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1NamespacedPlacementRuleTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1PlacementRuleList response = api.listAppsOpenClusterManagementIoV1NamespacedPlacementRule(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1NamespacedSubscriptionTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1SubscriptionList response = api.listAppsOpenClusterManagementIoV1NamespacedSubscription(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1PlacementRuleForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1PlacementRuleList response = api.listAppsOpenClusterManagementIoV1PlacementRuleForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenClusterManagementIoV1SubscriptionForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenClusterManagementAppsV1SubscriptionList response = api.listAppsOpenClusterManagementIoV1SubscriptionForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedChannelTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Channel response = api.patchAppsOpenClusterManagementIoV1NamespacedChannel(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedDeployableTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Deployable response = api.patchAppsOpenClusterManagementIoV1NamespacedDeployable(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedDeployableStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Deployable response = api.patchAppsOpenClusterManagementIoV1NamespacedDeployableStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedHelmReleaseTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1HelmRelease response = api.patchAppsOpenClusterManagementIoV1NamespacedHelmRelease(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedHelmReleaseStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1HelmRelease response = api.patchAppsOpenClusterManagementIoV1NamespacedHelmReleaseStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedPlacementRuleTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1PlacementRule response = api.patchAppsOpenClusterManagementIoV1NamespacedPlacementRule(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedPlacementRuleStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1PlacementRule response = api.patchAppsOpenClusterManagementIoV1NamespacedPlacementRuleStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Subscription response = api.patchAppsOpenClusterManagementIoV1NamespacedSubscription(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenClusterManagementIoV1NamespacedSubscriptionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Subscription response = api.patchAppsOpenClusterManagementIoV1NamespacedSubscriptionStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedChannelTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1Channel response = api.readAppsOpenClusterManagementIoV1NamespacedChannel(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedDeployableTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1Deployable response = api.readAppsOpenClusterManagementIoV1NamespacedDeployable(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedDeployableStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1Deployable response = api.readAppsOpenClusterManagementIoV1NamespacedDeployableStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedHelmReleaseTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1HelmRelease response = api.readAppsOpenClusterManagementIoV1NamespacedHelmRelease(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedHelmReleaseStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1HelmRelease response = api.readAppsOpenClusterManagementIoV1NamespacedHelmReleaseStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedPlacementRuleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1PlacementRule response = api.readAppsOpenClusterManagementIoV1NamespacedPlacementRule(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedPlacementRuleStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1PlacementRule response = api.readAppsOpenClusterManagementIoV1NamespacedPlacementRuleStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1Subscription response = api.readAppsOpenClusterManagementIoV1NamespacedSubscription(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenClusterManagementIoV1NamespacedSubscriptionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenClusterManagementAppsV1Subscription response = api.readAppsOpenClusterManagementIoV1NamespacedSubscriptionStatus(name, namespace, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Channel
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedChannelTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1Channel body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Channel response = api.replaceAppsOpenClusterManagementIoV1NamespacedChannel(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedDeployableTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1Deployable body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Deployable response = api.replaceAppsOpenClusterManagementIoV1NamespacedDeployable(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified Deployable
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedDeployableStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1Deployable body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Deployable response = api.replaceAppsOpenClusterManagementIoV1NamespacedDeployableStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedHelmReleaseTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1HelmRelease body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1HelmRelease response = api.replaceAppsOpenClusterManagementIoV1NamespacedHelmRelease(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified HelmRelease
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedHelmReleaseStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1HelmRelease body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1HelmRelease response = api.replaceAppsOpenClusterManagementIoV1NamespacedHelmReleaseStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedPlacementRuleTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1PlacementRule body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1PlacementRule response = api.replaceAppsOpenClusterManagementIoV1NamespacedPlacementRule(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified PlacementRule
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedPlacementRuleStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1PlacementRule body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1PlacementRule response = api.replaceAppsOpenClusterManagementIoV1NamespacedPlacementRuleStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedSubscriptionTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1Subscription body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Subscription response = api.replaceAppsOpenClusterManagementIoV1NamespacedSubscription(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified Subscription
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenClusterManagementIoV1NamespacedSubscriptionStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoOpenClusterManagementAppsV1Subscription body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenClusterManagementAppsV1Subscription response = api.replaceAppsOpenClusterManagementIoV1NamespacedSubscriptionStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
}
