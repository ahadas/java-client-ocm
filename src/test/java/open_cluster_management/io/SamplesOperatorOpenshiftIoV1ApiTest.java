/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoOpenshiftOperatorSamplesV1Config;
import open_cluster_management.io.IoOpenshiftOperatorSamplesV1ConfigList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SamplesOperatorOpenshiftIoV1Api
 */
@Ignore
public class SamplesOperatorOpenshiftIoV1ApiTest {

    private final SamplesOperatorOpenshiftIoV1Api api = new SamplesOperatorOpenshiftIoV1Api();

    
    /**
     * 
     *
     * create a Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createSamplesOperatorOpenshiftIoV1ConfigTest() throws ApiException {
        IoOpenshiftOperatorSamplesV1Config body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftOperatorSamplesV1Config response = api.createSamplesOperatorOpenshiftIoV1Config(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSamplesOperatorOpenshiftIoV1CollectionConfigTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteSamplesOperatorOpenshiftIoV1CollectionConfig(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteSamplesOperatorOpenshiftIoV1ConfigTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteSamplesOperatorOpenshiftIoV1Config(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listSamplesOperatorOpenshiftIoV1ConfigTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenshiftOperatorSamplesV1ConfigList response = api.listSamplesOperatorOpenshiftIoV1Config(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchSamplesOperatorOpenshiftIoV1ConfigTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftOperatorSamplesV1Config response = api.patchSamplesOperatorOpenshiftIoV1Config(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchSamplesOperatorOpenshiftIoV1ConfigStatusTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftOperatorSamplesV1Config response = api.patchSamplesOperatorOpenshiftIoV1ConfigStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readSamplesOperatorOpenshiftIoV1ConfigTest() throws ApiException {
        String name = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenshiftOperatorSamplesV1Config response = api.readSamplesOperatorOpenshiftIoV1Config(name, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readSamplesOperatorOpenshiftIoV1ConfigStatusTest() throws ApiException {
        String name = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenshiftOperatorSamplesV1Config response = api.readSamplesOperatorOpenshiftIoV1ConfigStatus(name, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceSamplesOperatorOpenshiftIoV1ConfigTest() throws ApiException {
        String name = null;
        IoOpenshiftOperatorSamplesV1Config body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftOperatorSamplesV1Config response = api.replaceSamplesOperatorOpenshiftIoV1Config(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified Config
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceSamplesOperatorOpenshiftIoV1ConfigStatusTest() throws ApiException {
        String name = null;
        IoOpenshiftOperatorSamplesV1Config body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftOperatorSamplesV1Config response = api.replaceSamplesOperatorOpenshiftIoV1ConfigStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
}
