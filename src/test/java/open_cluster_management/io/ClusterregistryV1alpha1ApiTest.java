/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster;
import open_cluster_management.io.ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1ClusterList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClusterregistryV1alpha1Api
 */
@Ignore
public class ClusterregistryV1alpha1ApiTest {

    private final ClusterregistryV1alpha1Api api = new ClusterregistryV1alpha1Api();

    
    /**
     * 
     *
     * create a Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createClusterregistryV1alpha1NamespacedClusterTest() throws ApiException {
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster response = api.createClusterregistryV1alpha1NamespacedCluster(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClusterregistryV1alpha1CollectionNamespacedClusterTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteClusterregistryV1alpha1CollectionNamespacedCluster(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteClusterregistryV1alpha1NamespacedClusterTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteClusterregistryV1alpha1NamespacedCluster(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getClusterregistryV1alpha1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getClusterregistryV1alpha1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listClusterregistryV1alpha1ClusterForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1ClusterList response = api.listClusterregistryV1alpha1ClusterForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listClusterregistryV1alpha1NamespacedClusterTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1ClusterList response = api.listClusterregistryV1alpha1NamespacedCluster(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchClusterregistryV1alpha1NamespacedClusterTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster response = api.patchClusterregistryV1alpha1NamespacedCluster(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchClusterregistryV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster response = api.patchClusterregistryV1alpha1NamespacedClusterStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readClusterregistryV1alpha1NamespacedClusterTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster response = api.readClusterregistryV1alpha1NamespacedCluster(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readClusterregistryV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster response = api.readClusterregistryV1alpha1NamespacedClusterStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceClusterregistryV1alpha1NamespacedClusterTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster response = api.replaceClusterregistryV1alpha1NamespacedCluster(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified Cluster
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceClusterregistryV1alpha1NamespacedClusterStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenClusterManagementMulticloudOperatorsFoundationPkgApisClusterregistryV1alpha1Cluster response = api.replaceClusterregistryV1alpha1NamespacedClusterStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Cluster. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchClusterregistryV1alpha1ClusterListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchClusterregistryV1alpha1ClusterListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind Cluster. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchClusterregistryV1alpha1NamespacedClusterTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchClusterregistryV1alpha1NamespacedCluster(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of Cluster. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchClusterregistryV1alpha1NamespacedClusterListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchClusterregistryV1alpha1NamespacedClusterList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
