/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComGithubOpenshiftApiQuotaV1AppliedClusterResourceQuota;
import open_cluster_management.io.ComGithubOpenshiftApiQuotaV1AppliedClusterResourceQuotaList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import open_cluster_management.io.IoOpenshiftQuotaV1ClusterResourceQuota;
import open_cluster_management.io.IoOpenshiftQuotaV1ClusterResourceQuotaList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for QuotaOpenshiftIoV1Api
 */
@Ignore
public class QuotaOpenshiftIoV1ApiTest {

    private final QuotaOpenshiftIoV1Api api = new QuotaOpenshiftIoV1Api();

    
    /**
     * 
     *
     * create a ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createQuotaOpenshiftIoV1ClusterResourceQuotaTest() throws ApiException {
        IoOpenshiftQuotaV1ClusterResourceQuota body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftQuotaV1ClusterResourceQuota response = api.createQuotaOpenshiftIoV1ClusterResourceQuota(body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteQuotaOpenshiftIoV1ClusterResourceQuotaTest() throws ApiException {
        String name = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteQuotaOpenshiftIoV1ClusterResourceQuota(name, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteQuotaOpenshiftIoV1CollectionClusterResourceQuotaTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteQuotaOpenshiftIoV1CollectionClusterResourceQuota(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getQuotaOpenshiftIoV1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getQuotaOpenshiftIoV1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind AppliedClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listQuotaOpenshiftIoV1AppliedClusterResourceQuotaForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiQuotaV1AppliedClusterResourceQuotaList response = api.listQuotaOpenshiftIoV1AppliedClusterResourceQuotaForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listQuotaOpenshiftIoV1ClusterResourceQuotaTest() throws ApiException {
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoOpenshiftQuotaV1ClusterResourceQuotaList response = api.listQuotaOpenshiftIoV1ClusterResourceQuota(pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list objects of kind AppliedClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiQuotaV1AppliedClusterResourceQuotaList response = api.listQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuota(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchQuotaOpenshiftIoV1ClusterResourceQuotaTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftQuotaV1ClusterResourceQuota response = api.patchQuotaOpenshiftIoV1ClusterResourceQuota(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchQuotaOpenshiftIoV1ClusterResourceQuotaStatusTest() throws ApiException {
        String name = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftQuotaV1ClusterResourceQuota response = api.patchQuotaOpenshiftIoV1ClusterResourceQuotaStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readQuotaOpenshiftIoV1ClusterResourceQuotaTest() throws ApiException {
        String name = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenshiftQuotaV1ClusterResourceQuota response = api.readQuotaOpenshiftIoV1ClusterResourceQuota(name, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readQuotaOpenshiftIoV1ClusterResourceQuotaStatusTest() throws ApiException {
        String name = null;
        String pretty = null;
        String resourceVersion = null;
        IoOpenshiftQuotaV1ClusterResourceQuota response = api.readQuotaOpenshiftIoV1ClusterResourceQuotaStatus(name, pretty, resourceVersion);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified AppliedClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuotaTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenshiftApiQuotaV1AppliedClusterResourceQuota response = api.readQuotaOpenshiftIoV1NamespacedAppliedClusterResourceQuota(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceQuotaOpenshiftIoV1ClusterResourceQuotaTest() throws ApiException {
        String name = null;
        IoOpenshiftQuotaV1ClusterResourceQuota body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftQuotaV1ClusterResourceQuota response = api.replaceQuotaOpenshiftIoV1ClusterResourceQuota(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified ClusterResourceQuota
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceQuotaOpenshiftIoV1ClusterResourceQuotaStatusTest() throws ApiException {
        String name = null;
        IoOpenshiftQuotaV1ClusterResourceQuota body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoOpenshiftQuotaV1ClusterResourceQuota response = api.replaceQuotaOpenshiftIoV1ClusterResourceQuotaStatus(name, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind ClusterResourceQuota. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchQuotaOpenshiftIoV1ClusterResourceQuotaTest() throws ApiException {
        String name = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchQuotaOpenshiftIoV1ClusterResourceQuota(name, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of ClusterResourceQuota. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchQuotaOpenshiftIoV1ClusterResourceQuotaListTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchQuotaOpenshiftIoV1ClusterResourceQuotaList(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
