/*
 * Kubernetes
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package open_cluster_management.io;

import open_cluster_management.ApiException;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1DeploymentConfig;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1DeploymentConfigList;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1DeploymentConfigRollback;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1DeploymentLog;
import open_cluster_management.io.ComGithubOpenshiftApiAppsV1DeploymentRequest;
import open_cluster_management.io.IoK8sApiExtensionsV1beta1Scale;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1APIResourceList;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1DeleteOptions;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Patch;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1Status;
import open_cluster_management.io.IoK8sApimachineryPkgApisMetaV1WatchEvent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppsOpenshiftIoV1Api
 */
@Ignore
public class AppsOpenshiftIoV1ApiTest {

    private final AppsOpenshiftIoV1Api api = new AppsOpenshiftIoV1Api();

    
    /**
     * 
     *
     * create a DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenshiftIoV1NamespacedDeploymentConfigTest() throws ApiException {
        String namespace = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig response = api.createAppsOpenshiftIoV1NamespacedDeploymentConfig(namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create instantiate of a DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenshiftIoV1NamespacedDeploymentConfigInstantiateTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiAppsV1DeploymentRequest body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAppsV1DeploymentRequest response = api.createAppsOpenshiftIoV1NamespacedDeploymentConfigInstantiate(name, namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * create rollback of a DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createAppsOpenshiftIoV1NamespacedDeploymentConfigRollbackTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfigRollback body = null;
        String dryRun = null;
        String fieldManager = null;
        String pretty = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfigRollback response = api.createAppsOpenshiftIoV1NamespacedDeploymentConfigRollback(name, namespace, body, dryRun, fieldManager, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete collection of DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenshiftIoV1CollectionNamespacedDeploymentConfigTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String _continue = null;
        String dryRun = null;
        String fieldSelector = null;
        Integer gracePeriodSeconds = null;
        String labelSelector = null;
        Integer limit = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenshiftIoV1CollectionNamespacedDeploymentConfig(namespace, pretty, allowWatchBookmarks, body, _continue, dryRun, fieldSelector, gracePeriodSeconds, labelSelector, limit, orphanDependents, propagationPolicy, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * delete a DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAppsOpenshiftIoV1NamespacedDeploymentConfigTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApimachineryPkgApisMetaV1DeleteOptions body = null;
        String dryRun = null;
        Integer gracePeriodSeconds = null;
        Boolean orphanDependents = null;
        String propagationPolicy = null;
        IoK8sApimachineryPkgApisMetaV1Status response = api.deleteAppsOpenshiftIoV1NamespacedDeploymentConfig(name, namespace, pretty, body, dryRun, gracePeriodSeconds, orphanDependents, propagationPolicy);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * get available resources
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAppsOpenshiftIoV1APIResourcesTest() throws ApiException {
        IoK8sApimachineryPkgApisMetaV1APIResourceList response = api.getAppsOpenshiftIoV1APIResources();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenshiftIoV1DeploymentConfigForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfigList response = api.listAppsOpenshiftIoV1DeploymentConfigForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * list or watch objects of kind DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listAppsOpenshiftIoV1NamespacedDeploymentConfigTest() throws ApiException {
        String namespace = null;
        String pretty = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfigList response = api.listAppsOpenshiftIoV1NamespacedDeploymentConfig(namespace, pretty, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenshiftIoV1NamespacedDeploymentConfigTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig response = api.patchAppsOpenshiftIoV1NamespacedDeploymentConfig(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update scale of the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenshiftIoV1NamespacedDeploymentConfigScaleTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        IoK8sApiExtensionsV1beta1Scale response = api.patchAppsOpenshiftIoV1NamespacedDeploymentConfigScale(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * partially update status of the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void patchAppsOpenshiftIoV1NamespacedDeploymentConfigStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApimachineryPkgApisMetaV1Patch body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        Boolean force = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig response = api.patchAppsOpenshiftIoV1NamespacedDeploymentConfigStatus(name, namespace, body, pretty, dryRun, fieldManager, force);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenshiftIoV1NamespacedDeploymentConfigTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        Boolean exact = null;
        Boolean export = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig response = api.readAppsOpenshiftIoV1NamespacedDeploymentConfig(name, namespace, pretty, exact, export);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read log of the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenshiftIoV1NamespacedDeploymentConfigLogTest() throws ApiException {
        String name = null;
        String namespace = null;
        String container = null;
        Boolean follow = null;
        Integer limitBytes = null;
        Boolean nowait = null;
        String pretty = null;
        Boolean previous = null;
        Integer sinceSeconds = null;
        Integer tailLines = null;
        Boolean timestamps = null;
        Integer version = null;
        ComGithubOpenshiftApiAppsV1DeploymentLog response = api.readAppsOpenshiftIoV1NamespacedDeploymentConfigLog(name, namespace, container, follow, limitBytes, nowait, pretty, previous, sinceSeconds, tailLines, timestamps, version);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read scale of the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenshiftIoV1NamespacedDeploymentConfigScaleTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        IoK8sApiExtensionsV1beta1Scale response = api.readAppsOpenshiftIoV1NamespacedDeploymentConfigScale(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * read status of the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void readAppsOpenshiftIoV1NamespacedDeploymentConfigStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        String pretty = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig response = api.readAppsOpenshiftIoV1NamespacedDeploymentConfigStatus(name, namespace, pretty);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenshiftIoV1NamespacedDeploymentConfigTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig response = api.replaceAppsOpenshiftIoV1NamespacedDeploymentConfig(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace scale of the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenshiftIoV1NamespacedDeploymentConfigScaleTest() throws ApiException {
        String name = null;
        String namespace = null;
        IoK8sApiExtensionsV1beta1Scale body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        IoK8sApiExtensionsV1beta1Scale response = api.replaceAppsOpenshiftIoV1NamespacedDeploymentConfigScale(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * replace status of the specified DeploymentConfig
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void replaceAppsOpenshiftIoV1NamespacedDeploymentConfigStatusTest() throws ApiException {
        String name = null;
        String namespace = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig body = null;
        String pretty = null;
        String dryRun = null;
        String fieldManager = null;
        ComGithubOpenshiftApiAppsV1DeploymentConfig response = api.replaceAppsOpenshiftIoV1NamespacedDeploymentConfigStatus(name, namespace, body, pretty, dryRun, fieldManager);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of DeploymentConfig. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchAppsOpenshiftIoV1DeploymentConfigListForAllNamespacesTest() throws ApiException {
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchAppsOpenshiftIoV1DeploymentConfigListForAllNamespaces(allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch changes to an object of kind DeploymentConfig. deprecated: use the &#39;watch&#39; parameter with a list operation instead, filtered to a single item with the &#39;fieldSelector&#39; parameter.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchAppsOpenshiftIoV1NamespacedDeploymentConfigTest() throws ApiException {
        String name = null;
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchAppsOpenshiftIoV1NamespacedDeploymentConfig(name, namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * watch individual changes to a list of DeploymentConfig. deprecated: use the &#39;watch&#39; parameter with a list operation instead.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void watchAppsOpenshiftIoV1NamespacedDeploymentConfigListTest() throws ApiException {
        String namespace = null;
        Boolean allowWatchBookmarks = null;
        String _continue = null;
        String fieldSelector = null;
        String labelSelector = null;
        Integer limit = null;
        String pretty = null;
        String resourceVersion = null;
        Integer timeoutSeconds = null;
        Boolean watch = null;
        IoK8sApimachineryPkgApisMetaV1WatchEvent response = api.watchAppsOpenshiftIoV1NamespacedDeploymentConfigList(namespace, allowWatchBookmarks, _continue, fieldSelector, labelSelector, limit, pretty, resourceVersion, timeoutSeconds, watch);

        // TODO: test validations
    }
    
}
